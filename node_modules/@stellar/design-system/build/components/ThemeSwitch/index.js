import { jsx as _jsx } from "react/jsx-runtime";
import { useCallback, useEffect, useState } from "react";
import { Toggle } from "../Toggle";
import { Icon } from "../../icons";
export var ThemeMode;
(function (ThemeMode) {
    ThemeMode["LIGHT"] = "sds-theme-light";
    ThemeMode["DARK"] = "sds-theme-dark";
})(ThemeMode || (ThemeMode = {}));
export var ThemeSwitch = function (_a) {
    var storageKeyId = _a.storageKeyId, onActionEnd = _a.onActionEnd, disableSetThemeOnLoad = _a.disableSetThemeOnLoad;
    var isBrowser = typeof window !== "undefined" && typeof localStorage !== "undefined";
    var prefersDarkMode = isBrowser
        ? window.matchMedia("(prefers-color-scheme: dark)")
        : undefined;
    var getCurrentMode = useCallback(function () {
        var modeSaved = isBrowser && storageKeyId ? localStorage.getItem(storageKeyId) : null;
        if (modeSaved) {
            return modeSaved;
        }
        return (prefersDarkMode === null || prefersDarkMode === void 0 ? void 0 : prefersDarkMode.matches) ? ThemeMode.DARK : ThemeMode.LIGHT;
    }, [storageKeyId, prefersDarkMode === null || prefersDarkMode === void 0 ? void 0 : prefersDarkMode.matches, isBrowser]);
    var _b = useState(Boolean(getCurrentMode() === ThemeMode.DARK)), isDarkMode = _b[0], setIsDarkMode = _b[1];
    useEffect(function () {
        if (disableSetThemeOnLoad) {
            return;
        }
        var currentMode = getCurrentMode();
        var _isDarkMode = Boolean(currentMode === ThemeMode.DARK);
        setIsDarkMode(_isDarkMode);
    }, [disableSetThemeOnLoad, getCurrentMode]);
    useEffect(function () {
        if (disableSetThemeOnLoad) {
            return;
        }
        if (isDarkMode) {
            document.body.classList.remove(ThemeMode.LIGHT);
            document.body.classList.add(ThemeMode.DARK);
            document.body.setAttribute("data-sds-theme", ThemeMode.DARK);
        }
        else {
            document.body.classList.remove(ThemeMode.DARK);
            document.body.classList.add(ThemeMode.LIGHT);
            document.body.setAttribute("data-sds-theme", ThemeMode.LIGHT);
        }
    }, [disableSetThemeOnLoad, isDarkMode]);
    var handleSwitch = function () {
        var _isDarkMode = !isDarkMode;
        setIsDarkMode(_isDarkMode);
        if (isBrowser && storageKeyId) {
            if (_isDarkMode) {
                localStorage.setItem(storageKeyId, ThemeMode.DARK);
            }
            else {
                localStorage.setItem(storageKeyId, ThemeMode.LIGHT);
            }
        }
        if (onActionEnd) {
            onActionEnd(_isDarkMode);
        }
    };
    return (_jsx(Toggle, { id: "theme-switch", fieldSize: "md", checked: isDarkMode, onChange: handleSwitch, title: "Switch to ".concat(isDarkMode ? "light" : "dark", " theme"), iconChecked: _jsx(Icon.Moon01, {}), iconUnchecked: _jsx(Icon.Sun, {}) }));
};
ThemeSwitch.displayName = "ThemeSwitch";
//# sourceMappingURL=index.js.map