import { __assign, __spreadArray } from "tslib";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { cloneElement, useEffect, useState } from "react";
import "./styles.scss";
export var Toggle = function (_a) {
    var id = _a.id, checked = _a.checked, fieldSize = _a.fieldSize, customInput = _a.customInput, onChange = _a.onChange, disabled = _a.disabled, iconChecked = _a.iconChecked, iconUnchecked = _a.iconUnchecked, title = _a.title;
    var _b = useState(checked), checkedValue = _b[0], setCheckedValue = _b[1];
    useEffect(function () {
        setCheckedValue(checked);
    }, [checked]);
    var additionalClasses = __spreadArray([
        "Toggle--".concat(fieldSize)
    ], (disabled ? ["Toggle--disabled"] : []), true).join(" ");
    var baseInputProps = {
        className: "Toggle__input",
        type: "checkbox",
        name: id,
        id: id,
        disabled: disabled,
    };
    return (_jsxs("label", { className: "Toggle ".concat(additionalClasses), htmlFor: id, title: title, children: [customInput ? (cloneElement(customInput, __assign({}, baseInputProps))) : (_jsx("input", __assign({ checked: checkedValue, onChange: onChange }, baseInputProps))), _jsx("div", { className: "Toggle__track", children: _jsxs("div", { className: "Toggle__track__thumb", children: [iconChecked ? (_jsx("div", { className: "Toggle__track__icon Toggle__track__icon--checked", children: iconChecked })) : null, iconUnchecked ? (_jsx("div", { className: "Toggle__track__icon Toggle__track__icon--unchecked", children: iconUnchecked })) : null] }) })] }));
};
Toggle.displayName = "Toggle";
//# sourceMappingURL=index.js.map