import "./styles.scss";
export interface DisplayProps {
    as?: "div" | "span";
    addlClassName?: string;
    size: "xl" | "lg" | "md" | "sm" | "xs";
    weight?: "bold" | "semi-bold" | "medium" | "regular";
    children: string | React.ReactNode;
}
interface DProps extends DisplayProps, React.HtmlHTMLAttributes<HTMLDivElement | HTMLSpanElement> {
    children: string | React.ReactNode;
}
export declare const Display: React.FC<DProps>;
export interface HeadingProps {
    as: "h1" | "h2" | "h3" | "h4" | "h5" | "h6";
    addlClassName?: string;
    size: "xl" | "lg" | "md" | "sm" | "xs";
    weight?: "bold" | "semi-bold" | "medium" | "regular";
    children: string | React.ReactNode;
}
interface HProps extends HeadingProps, React.HtmlHTMLAttributes<HTMLHeadingElement> {
    children: string | React.ReactNode;
}
export declare const Heading: React.FC<HProps>;
export interface TextProps {
    as: "p" | "div" | "span" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6";
    addlClassName?: string;
    size: "xl" | "lg" | "md" | "sm" | "xs";
    weight?: "bold" | "semi-bold" | "medium" | "regular";
    children: string | React.ReactNode;
}
interface TProps extends TextProps, React.HtmlHTMLAttributes<HTMLParagraphElement | HTMLDivElement | HTMLSpanElement> {
    children: string | React.ReactNode;
}
export declare const Text: React.FC<TProps>;
export interface CodeProps {
    addlClassName?: string;
    size: "md" | "sm" | "xs";
    children: string | React.ReactNode;
}
interface CProps extends CodeProps, React.HtmlHTMLAttributes<HTMLElement> {
    children: string | React.ReactNode;
}
export declare const Code: React.FC<CProps>;
export {};
//# sourceMappingURL=index.d.ts.map