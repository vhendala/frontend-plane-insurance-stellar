{"version":3,"file":"index.min.js","mappings":"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","sources":["webpack://freighterApi/webpack/universalModuleDefinition","webpack://freighterApi/webpack/bootstrap","webpack://freighterApi/./src/home/runner/work/freighter/freighter/@shared/constants/services.ts","webpack://freighterApi/webpack/runtime/define property getters","webpack://freighterApi/webpack/runtime/hasOwnProperty shorthand","webpack://freighterApi/webpack/runtime/make namespace object","webpack://freighterApi/./src/home/runner/work/freighter/freighter/@shared/api/helpers/extensionMessaging.ts","webpack://freighterApi/./src/home/runner/work/freighter/freighter/@shared/api/external.ts","webpack://freighterApi/./src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/getAddress.ts","webpack://freighterApi/./src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/addToken.ts","webpack://freighterApi/./src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/signTransaction.ts","webpack://freighterApi/./src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/signMessage.ts","webpack://freighterApi/./src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/signAuthEntry.ts","webpack://freighterApi/./src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/isConnected.ts","webpack://freighterApi/./src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/getNetwork.ts","webpack://freighterApi/./src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/getNetworkDetails.ts","webpack://freighterApi/./src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/isAllowed.ts","webpack://freighterApi/./src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/setAllowed.ts","webpack://freighterApi/./src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/requestAccess.ts","webpack://freighterApi/./src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/watchWalletChanges.ts","webpack://freighterApi/./src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"freighterApi\"] = factory();\n\telse\n\t\troot[\"freighterApi\"] = factory();\n})(this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","export enum SERVICE_TYPES {\n  CREATE_ACCOUNT = \"CREATE_ACCOUNT\",\n  FUND_ACCOUNT = \"FUND_ACCOUNT\",\n  ADD_ACCOUNT = \"ADD_ACCOUNT\",\n  IMPORT_ACCOUNT = \"IMPORT_ACCOUNT\",\n  IMPORT_HARDWARE_WALLET = \"IMPORT_HARDWARE_WALLET\",\n  LOAD_ACCOUNT = \"LOAD_ACCOUNT\",\n  MAKE_ACCOUNT_ACTIVE = \"MAKE_ACCOUNT_ACTIVE\",\n  UPDATE_ACCOUNT_NAME = \"UPDATE_ACCOUNT_NAME\",\n  GET_MNEMONIC_PHRASE = \"GET_MNEMONIC_PHRASE\",\n  CONFIRM_MNEMONIC_PHRASE = \"CONFIRM_MNEMONIC_PHRASE\",\n  CONFIRM_MIGRATED_MNEMONIC_PHRASE = \"CONFIRM_MIGRATED_MNEMONIC_PHRASE\",\n  RECOVER_ACCOUNT = \"RECOVER_ACCOUNT\",\n  CONFIRM_PASSWORD = \"CONFIRM_PASSWORD\",\n  REJECT_ACCESS = \"REJECT_ACCESS\",\n  GRANT_ACCESS = \"GRANT_ACCESS\",\n  ADD_TOKEN = \"ADD_TOKEN\",\n  SIGN_TRANSACTION = \"SIGN_TRANSACTION\",\n  SIGN_BLOB = \"SIGN_BLOB\",\n  SIGN_AUTH_ENTRY = \"SIGN_AUTH_ENTRY\",\n  HANDLE_SIGNED_HW_PAYLOAD = \"HANDLE_SIGNED_HW_PAYLOAD\",\n  REJECT_TRANSACTION = \"REJECT_TRANSACTION\",\n  SIGN_FREIGHTER_TRANSACTION = \"SIGN_FREIGHTER_TRANSACTION\",\n  SIGN_FREIGHTER_SOROBAN_TRANSACTION = \"SIGN_FREIGHTER_SOROBAN_TRANSACTION\",\n  ADD_RECENT_ADDRESS = \"ADD_RECENT_ADDRESS\",\n  LOAD_RECENT_ADDRESSES = \"LOAD_RECENT_ADDRESSES\",\n  LOAD_LAST_USED_ACCOUNT = \"LOAD_LAST_USED_ACCOUNT\",\n  SIGN_OUT = \"SIGN_OUT\",\n  SHOW_BACKUP_PHRASE = \"SHOW_BACKUP_PHRASE\",\n  SAVE_ALLOWLIST = \"SAVE_ALLOWLIST\",\n  SAVE_SETTINGS = \"SAVE_SETTINGS\",\n  SAVE_EXPERIMENTAL_FEATURES = \"SAVE_EXPERIMENTAL_FEATURES\",\n  LOAD_SETTINGS = \"LOAD_SETTINGS\",\n  GET_CACHED_ASSET_ICON = \"GET_CACHED_ASSET_ICON\",\n  CACHE_ASSET_ICON = \"CACHE_ASSET_ICON\",\n  GET_CACHED_ASSET_DOMAIN = \"GET_CACHED_ASSET_DOMAIN\",\n  CACHE_ASSET_DOMAIN = \"CACHE_ASSET_DOMAIN\",\n  GET_MEMO_REQUIRED_ACCOUNTS = \"GET_MEMO_REQUIRED_ACCOUNTS\",\n  ADD_CUSTOM_NETWORK = \"ADD_CUSTOM_NETWORK\",\n  CHANGE_NETWORK = \"CHANGE_NETWORK\",\n  REMOVE_CUSTOM_NETWORK = \"REMOVE_CUSTOM_NETWORK\",\n  EDIT_CUSTOM_NETWORK = \"EDIT_CUSTOM_NETWORK\",\n  RESET_EXP_DATA = \"RESET_EXP_DATA\",\n  ADD_TOKEN_ID = \"ADD_TOKEN_ID\",\n  GET_TOKEN_IDS = \"GET_TOKEN_IDS\",\n  REMOVE_TOKEN_ID = \"REMOVE_TOKEN_ID\",\n  GET_MIGRATABLE_ACCOUNTS = \"GET_MIGRATABLE_ACCOUNTS\",\n  GET_MIGRATED_MNEMONIC_PHRASE = \"GET_MIGRATED_MNEMONIC_PHRASE\",\n  MIGRATE_ACCOUNTS = \"MIGRATE_ACCOUNTS\",\n  ADD_ASSETS_LIST = \"ADD_ASSETS_LIST\",\n  MODIFY_ASSETS_LIST = \"MODIFY_ASSETS_LIST\",\n  CHANGE_ASSET_VISIBILITY = \"CHANGE_ASSET_VISIBILITY\",\n  GET_HIDDEN_ASSETS = \"GET_HIDDEN_ASSETS\",\n  GET_IS_ACCOUNT_MISMATCH = \"GET_IS_ACCOUNT_MISMATCH\",\n}\n\nexport enum EXTERNAL_SERVICE_TYPES {\n  REQUEST_ACCESS = \"REQUEST_ACCESS\",\n  REQUEST_PUBLIC_KEY = \"REQUEST_PUBLIC_KEY\",\n  SUBMIT_TOKEN = \"SUBMIT_TOKEN\",\n  SUBMIT_TRANSACTION = \"SUBMIT_TRANSACTION\",\n  SUBMIT_BLOB = \"SUBMIT_BLOB\",\n  SUBMIT_AUTH_ENTRY = \"SUBMIT_AUTH_ENTRY\",\n  REQUEST_NETWORK = \"REQUEST_NETWORK\",\n  REQUEST_NETWORK_DETAILS = \"REQUEST_NETWORK_DETAILS\",\n  REQUEST_CONNECTION_STATUS = \"REQUEST_CONNECTION_STATUS\",\n  REQUEST_ALLOWED_STATUS = \"REQUEST_ALLOWED_STATUS\",\n  SET_ALLOWED_STATUS = \"SET_ALLOWED_STATUS\",\n  REQUEST_USER_INFO = \"REQUEST_USER_INFO\",\n}\n\nexport const EXTERNAL_MSG_REQUEST = \"FREIGHTER_EXTERNAL_MSG_REQUEST\";\nexport const EXTERNAL_MSG_RESPONSE = \"FREIGHTER_EXTERNAL_MSG_RESPONSE\";\n\ndeclare const DEV_SERVER: string;\nconst _DEV_SERVER = DEV_SERVER;\nexport { _DEV_SERVER as DEV_SERVER };\n\ndeclare const DEV_EXTENSION: string;\nconst _DEV_EXTENSION = DEV_EXTENSION;\nexport { _DEV_EXTENSION as DEV_EXTENSION };\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import browser from \"webextension-polyfill\";\nimport {\n  DEV_SERVER,\n  EXTERNAL_MSG_RESPONSE,\n  EXTERNAL_MSG_REQUEST,\n  EXTERNAL_SERVICE_TYPES,\n  SERVICE_TYPES,\n} from \"../../constants/services\";\nimport { Response } from \"../types\";\n\ntype Msg =\n  | {\n      [key: string]: any;\n      activePublicKey: string | null;\n      type: SERVICE_TYPES;\n    }\n  | {\n      [key: string]: any;\n      type: EXTERNAL_SERVICE_TYPES;\n    };\n\nexport const sendMessageToContentScript = (msg: Msg): Promise<Response> => {\n  /* \n    In the case of multiple calls coming in sequentially, we use this MESSAGE_ID to make sure we're responding to\n    the appropriate message sender. Otherwise, we can run into race conditions where we simply resolve all \n    sent messages with the first thing that comes back.\n  */\n  const MESSAGE_ID = Date.now() + Math.random();\n\n  window.postMessage(\n    { source: EXTERNAL_MSG_REQUEST, messageId: MESSAGE_ID, ...msg },\n    window.location.origin\n  );\n  return new Promise((resolve) => {\n    let requestTimeout = 0 as any;\n\n    /* \n      In the case that Freighter is not installed at all, any messages to \n      background from freighter-api will hang forever and not respond in any way. \n      This is especially a problem for the isConnected method, because this is \n      likely to be called in a situation where Freighter isn't installed.\n      To prevent this, we add a timeout to automatically resolve in the event \n      Freighter doesn't respond in a timely fashion to this method.\n    */\n    if (\n      msg.type === EXTERNAL_SERVICE_TYPES.REQUEST_CONNECTION_STATUS ||\n      msg.type === EXTERNAL_SERVICE_TYPES.REQUEST_PUBLIC_KEY\n    ) {\n      requestTimeout = setTimeout(() => {\n        resolve({\n          isConnected: false,\n          publicKey: \"\",\n        } as Response);\n        window.removeEventListener(\"message\", messageListener);\n      }, 2000);\n    }\n\n    const messageListener = (event: { source: any; data: Response }) => {\n      // We only accept messages from ourselves\n      if (event.source !== window) return;\n      // Only respond to messages tagged as being from our content script\n      if (event?.data?.source !== EXTERNAL_MSG_RESPONSE) return;\n      // Only respond to messages that this instance of sendMessageToContentScript sent\n      if (event?.data?.messagedId !== MESSAGE_ID) return;\n\n      resolve(event.data);\n      window.removeEventListener(\"message\", messageListener);\n      clearTimeout(requestTimeout);\n    };\n    window.addEventListener(\"message\", messageListener, false);\n  });\n};\n\nexport const sendMessageToBackground = async (msg: Msg): Promise<Response> => {\n  let res;\n\n  if (DEV_SERVER) {\n    // treat this as an external call because we're making the call from the browser, not the popup\n    res = await sendMessageToContentScript(msg);\n  } else {\n    res = (await browser.runtime.sendMessage(msg)) as Response;\n  }\n\n  return res as Response;\n};\n\nexport const FreighterApiNodeError = {\n  code: -1,\n  message: \"Node environment is not supported\",\n};\n\nexport const FreighterApiInternalError = {\n  code: -1,\n  message:\n    \"The wallet encountered an internal error. Please try again or contact the wallet if the problem persists.\",\n};\n\nexport const FreighterApiDeclinedError = {\n  code: -4,\n  message: \"The user rejected this request.\",\n};\n","import { EXTERNAL_SERVICE_TYPES } from \"../constants/services\";\nimport { NetworkDetails } from \"../constants/stellar\";\nimport {\n  sendMessageToContentScript,\n  FreighterApiInternalError,\n} from \"./helpers/extensionMessaging\";\nimport { FreighterApiError } from \"./types\";\n\nexport const requestAccess = async (): Promise<{\n  publicKey: string;\n  error?: FreighterApiError;\n}> => {\n  let response;\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_ACCESS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  const { publicKey } = response || { publicKey: \"\" };\n\n  return { publicKey, error: response?.apiError };\n};\n\nexport const requestPublicKey = async (): Promise<{\n  publicKey: string;\n  error?: FreighterApiError;\n}> => {\n  let response;\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_PUBLIC_KEY,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  return { publicKey: response?.publicKey || \"\", error: response?.apiError };\n};\n\nexport const submitToken = async (args: {\n  contractId: string;\n  networkPassphrase?: string;\n}): Promise<{\n  contractId?: string;\n  error?: FreighterApiError;\n}> => {\n  let response;\n  try {\n    response = await sendMessageToContentScript({\n      contractId: args.contractId,\n      networkPassphrase: args.networkPassphrase,\n      type: EXTERNAL_SERVICE_TYPES.SUBMIT_TOKEN,\n    });\n  } catch (e) {\n    return {\n      error: FreighterApiInternalError,\n    };\n  }\n\n  return {\n    contractId: response.contractId,\n    error: response?.apiError,\n  };\n};\n\nexport const submitTransaction = async (\n  transactionXdr: string,\n  opts?:\n    | string\n    | {\n        accountToSign?: string;\n        networkPassphrase?: string;\n      },\n  accountToSign?: string,\n): Promise<{\n  signedTransaction: string;\n  signerAddress: string;\n  error?: FreighterApiError;\n}> => {\n  let network;\n  let _accountToSign;\n  let networkPassphrase;\n\n  /* \n  As of v1.3.0, this method now accepts an object as its second param. \n  Previously, it accepted optional second and third string parameters.\n  This logic maintains backwards compatibility for older versions\n  */\n  if (typeof opts === \"object\") {\n    _accountToSign = opts.accountToSign;\n    networkPassphrase = opts.networkPassphrase;\n  } else {\n    network = opts;\n    _accountToSign = accountToSign;\n  }\n\n  let response;\n  try {\n    response = await sendMessageToContentScript({\n      transactionXdr,\n      network,\n      networkPassphrase,\n      accountToSign: _accountToSign,\n      type: EXTERNAL_SERVICE_TYPES.SUBMIT_TRANSACTION,\n    });\n  } catch (e) {\n    return {\n      signedTransaction: \"\",\n      signerAddress: \"\",\n      error: FreighterApiInternalError,\n    };\n  }\n  const { signedTransaction, signerAddress } = response;\n\n  return { signedTransaction, signerAddress, error: response?.apiError };\n};\n\nexport const submitMessage = async (\n  blob: string,\n  version: string,\n  opts?: {\n    address?: string;\n    networkPassphrase?: string;\n  },\n): Promise<{\n  signedMessage: Buffer | null;\n  signerAddress: string;\n  error?: FreighterApiError;\n}> => {\n  let response;\n  const _opts = opts || {};\n  const accountToSign = _opts.address;\n  try {\n    response = await sendMessageToContentScript({\n      blob,\n      accountToSign,\n      apiVersion: version,\n      networkPassphrase: opts?.networkPassphrase,\n      type: EXTERNAL_SERVICE_TYPES.SUBMIT_BLOB,\n    });\n  } catch (e) {\n    return {\n      signedMessage: null,\n      signerAddress: \"\",\n      error: FreighterApiInternalError,\n    };\n  }\n  const { signedBlob, signerAddress } = response;\n\n  return {\n    signedMessage: signedBlob || null,\n    signerAddress,\n    error: response?.apiError,\n  };\n};\n\nexport const submitAuthEntry = async (\n  entryXdr: string,\n  version: string,\n  opts?: {\n    address?: string;\n    networkPassphrase?: string;\n  },\n): Promise<{\n  signedAuthEntry: Buffer | null;\n  signerAddress: string;\n  error?: FreighterApiError;\n}> => {\n  const _opts = opts || {};\n  const accountToSign = _opts.address;\n  let response;\n  try {\n    response = await sendMessageToContentScript({\n      entryXdr,\n      accountToSign,\n      apiVersion: version,\n      networkPassphrase: opts?.networkPassphrase,\n      type: EXTERNAL_SERVICE_TYPES.SUBMIT_AUTH_ENTRY,\n    });\n  } catch (e) {\n    console.error(e);\n    return {\n      signedAuthEntry: null,\n      signerAddress: \"\",\n      error: FreighterApiInternalError,\n    };\n  }\n  const { signedAuthEntry, signerAddress } = response;\n\n  return {\n    signedAuthEntry: signedAuthEntry || null,\n    signerAddress,\n    error: response?.apiError,\n  };\n};\n\nexport const requestNetwork = async (): Promise<{\n  network: string;\n  networkPassphrase: string;\n  error?: FreighterApiError;\n}> => {\n  let response;\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_NETWORK_DETAILS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  const { networkDetails } = response || {\n    networkDetails: { network: \"\", networkPassphrase: \"\" },\n  };\n\n  return {\n    network: networkDetails?.network,\n    networkPassphrase: networkDetails?.networkPassphrase,\n    error: response?.apiError,\n  };\n};\n\nexport const requestNetworkDetails = async (): Promise<{\n  network: string;\n  networkUrl: string;\n  networkPassphrase: string;\n  sorobanRpcUrl?: string;\n  error?: FreighterApiError;\n}> => {\n  let response;\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_NETWORK_DETAILS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  const { networkDetails, apiError } = response || {\n    networkDetails: {\n      network: \"\",\n      networkName: \"\",\n      networkUrl: \"\",\n      networkPassphrase: \"\",\n      sorobanRpcUrl: undefined,\n      apiError: \"\",\n    } as NetworkDetails,\n  };\n\n  const { network, networkUrl, networkPassphrase, sorobanRpcUrl } =\n    networkDetails;\n\n  return {\n    network,\n    networkUrl,\n    networkPassphrase,\n    sorobanRpcUrl,\n    error: apiError,\n  };\n};\n\nexport const requestConnectionStatus = async (): Promise<{\n  isConnected: boolean;\n}> => {\n  let response = {\n    isConnected: false,\n  };\n\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_CONNECTION_STATUS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  return { isConnected: response.isConnected };\n};\n\nexport const requestAllowedStatus = async (): Promise<{\n  isAllowed: boolean;\n  error?: FreighterApiError;\n}> => {\n  let response;\n\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_ALLOWED_STATUS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  const { isAllowed } = response || { isAllowed: false };\n\n  return { isAllowed, error: response?.apiError };\n};\n\nexport const setAllowedStatus = async (): Promise<{\n  isAllowed: boolean;\n  error?: FreighterApiError;\n}> => {\n  let response;\n\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.SET_ALLOWED_STATUS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  const { isAllowed } = response || {\n    isAllowed: false,\n  };\n\n  return { isAllowed, error: response?.apiError };\n};\n","import { requestPublicKey } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const getAddress = async (): Promise<\n  { address: string } & { error?: FreighterApiError }\n> => {\n  let address = \"\";\n  if (isBrowser) {\n    const req = await requestPublicKey();\n    address = req.publicKey;\n\n    if (req.error) {\n      return { address, error: req.error };\n    }\n\n    return { address };\n  }\n\n  return { address, error: FreighterApiNodeError };\n};\n","import { submitToken } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const addToken = async (args: {\n  contractId: string;\n  networkPassphrase?: string;\n}): Promise<{ contractId: string } & { error?: FreighterApiError }> => {\n  if (isBrowser) {\n    const req = await submitToken(args);\n\n    if (req.error) {\n      return { contractId: \"\", error: req.error };\n    }\n\n    return { contractId: req.contractId || \"\" };\n  }\n\n  return { contractId: \"\", error: FreighterApiNodeError };\n};\n","import { submitTransaction } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const signTransaction = async (\n  transactionXdr: string,\n  opts?: {\n    networkPassphrase?: string;\n    address?: string;\n  },\n): Promise<\n  { signedTxXdr: string; signerAddress: string } & {\n    error?: FreighterApiError;\n  }\n> => {\n  if (isBrowser) {\n    const req = await submitTransaction(transactionXdr, opts);\n\n    if (req.error) {\n      return { signedTxXdr: \"\", signerAddress: \"\", error: req.error };\n    }\n\n    return {\n      signedTxXdr: req.signedTransaction,\n      signerAddress: req.signerAddress,\n    };\n  }\n\n  return { signedTxXdr: \"\", signerAddress: \"\", error: FreighterApiNodeError };\n};\n","import { Buffer } from \"buffer\";\n\nimport {\n  requestAllowedStatus,\n  requestAccess,\n  submitMessage,\n} from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\ntype SignMessageV3Response = {\n  signedMessage: Buffer | null;\n  signerAddress: string;\n} & {\n  error?: FreighterApiError;\n};\n\ntype SignMessageV4Response = {\n  signedMessage: string;\n  signerAddress: string;\n} & {\n  error?: FreighterApiError;\n};\n\nexport const signMessage = async (\n  message: string,\n  opts?: {\n    networkPassphrase?: string;\n    address?: string;\n  },\n): Promise<SignMessageV3Response | SignMessageV4Response> => {\n  if (isBrowser) {\n    const { isAllowed } = await requestAllowedStatus();\n    if (!isAllowed) {\n      const req = await requestAccess();\n\n      if (req.error) {\n        return { signedMessage: null, signerAddress: \"\", error: req.error };\n      }\n    }\n\n    const req = await submitMessage(message, __PACKAGE_VERSION__, opts);\n\n    if (req.error) {\n      return { signedMessage: null, signerAddress: \"\", error: req.error };\n    }\n\n    return {\n      signedMessage: req.signedMessage,\n      signerAddress: req.signerAddress,\n    };\n  }\n\n  return {\n    signedMessage: null,\n    signerAddress: \"\",\n    error: FreighterApiNodeError,\n  };\n};\n","import {\n  requestAccess,\n  requestAllowedStatus,\n  submitAuthEntry,\n} from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const signAuthEntry = async (\n  entryXdr: string,\n  opts?: {\n    networkPassphrase?: string;\n    address?: string;\n  },\n): Promise<\n  { signedAuthEntry: Buffer | null; signerAddress: string } & {\n    error?: FreighterApiError;\n  }\n> => {\n  if (isBrowser) {\n    const { isAllowed } = await requestAllowedStatus();\n    if (!isAllowed) {\n      const req = await requestAccess();\n\n      if (req.error) {\n        return { signedAuthEntry: null, signerAddress: \"\", error: req.error };\n      }\n    }\n\n    const req = await submitAuthEntry(entryXdr, __PACKAGE_VERSION__, opts);\n\n    if (req.error) {\n      return { signedAuthEntry: null, signerAddress: \"\", error: req.error };\n    }\n\n    return {\n      signedAuthEntry: req.signedAuthEntry,\n      signerAddress: req.signerAddress,\n    };\n  }\n\n  return {\n    signedAuthEntry: null,\n    signerAddress: \"\",\n    error: FreighterApiNodeError,\n  };\n};\n","import { requestConnectionStatus } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const isConnected = async (): Promise<\n  { isConnected: boolean } & { error?: FreighterApiError }\n> => {\n  if (isBrowser) {\n    if (window.freighter) {\n      return Promise.resolve({ isConnected: window.freighter });\n    }\n\n    return requestConnectionStatus();\n  }\n\n  return { isConnected: false, error: FreighterApiNodeError };\n};\n","import { requestNetwork } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const getNetwork = async (): Promise<\n  { network: string; networkPassphrase: string } & {\n    error?: FreighterApiError;\n  }\n> => {\n  if (isBrowser) {\n    const req = await requestNetwork();\n\n    if (req.error) {\n      return { network: \"\", networkPassphrase: \"\", error: req.error };\n    }\n\n    return { network: req.network, networkPassphrase: req.networkPassphrase };\n  }\n\n  return { network: \"\", networkPassphrase: \"\", error: FreighterApiNodeError };\n};\n","import { requestNetworkDetails } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const getNetworkDetails = async (): Promise<\n  {\n    network: string;\n    networkUrl: string;\n    networkPassphrase: string;\n    sorobanRpcUrl?: string;\n  } & { error?: FreighterApiError }\n> => {\n  if (isBrowser) {\n    const req = await requestNetworkDetails();\n\n    if (req.error) {\n      return {\n        network: \"\",\n        networkUrl: \"\",\n        networkPassphrase: \"\",\n        error: req.error,\n      };\n    }\n\n    return {\n      network: req.network,\n      networkUrl: req.networkUrl,\n      networkPassphrase: req.networkPassphrase,\n      sorobanRpcUrl: req.sorobanRpcUrl,\n    };\n  }\n\n  return {\n    network: \"\",\n    networkUrl: \"\",\n    networkPassphrase: \"\",\n    error: FreighterApiNodeError,\n  };\n};\n","import { requestAllowedStatus } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const isAllowed = async (): Promise<\n  { isAllowed: boolean } & { error?: FreighterApiError }\n> => {\n  let isAllowed = false;\n  if (isBrowser) {\n    const req = await requestAllowedStatus();\n    isAllowed = req.isAllowed;\n\n    if (req.error) {\n      return { isAllowed, error: req.error };\n    }\n\n    return { isAllowed };\n  }\n\n  return { isAllowed, error: FreighterApiNodeError };\n};\n","import { setAllowedStatus } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const setAllowed = async (): Promise<\n  { isAllowed: boolean } & { error?: FreighterApiError }\n> => {\n  let isAllowed = false;\n  if (isBrowser) {\n    const req = await setAllowedStatus();\n    isAllowed = req.isAllowed;\n\n    if (req.error) {\n      return { isAllowed, error: req.error };\n    }\n\n    return { isAllowed };\n  }\n\n  return { isAllowed, error: FreighterApiNodeError };\n};\n","import { requestAccess as requestAccessApi } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const requestAccess = async (): Promise<\n  { address: string } & { error?: FreighterApiError }\n> => {\n  let address = \"\";\n  if (isBrowser) {\n    const req = await requestAccessApi();\n    address = req.publicKey;\n\n    if (req.error) {\n      return { address, error: req.error };\n    }\n\n    return { address };\n  }\n\n  return { address, error: FreighterApiNodeError };\n};\n","import { requestPublicKey } from \"@shared/api/external\";\nimport { requestNetworkDetails } from \"@shared/api/external\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { isBrowser } from \".\";\n\ninterface CallbackParams {\n  address: string;\n  network: string;\n  networkPassphrase: string;\n  error?: FreighterApiError;\n}\n\nexport class WatchWalletChanges {\n  timeout: number;\n  currentAddress: string;\n  currentNetwork: string;\n  currentNetworkPassphrase: string;\n  isRunning: boolean;\n\n  constructor(timeout = 3000) {\n    this.timeout = timeout;\n    this.currentAddress = \"\";\n    this.currentNetwork = \"\";\n    this.currentNetworkPassphrase = \"\";\n    this.isRunning = false;\n  }\n\n  watch(cb: (params: CallbackParams) => void): { error?: FreighterApiError } {\n    if (!isBrowser) {\n      return { error: FreighterApiNodeError };\n    }\n    this.isRunning = true;\n    this.fetchInfo(cb);\n\n    return {};\n  }\n\n  fetchInfo = async (cb: (params: CallbackParams) => void) => {\n    if (!this.isRunning) {\n      return;\n    }\n    const publicKeyReq = await requestPublicKey();\n    const networkDetailsReq = await requestNetworkDetails();\n\n    if (publicKeyReq.error || networkDetailsReq.error) {\n      cb({\n        address: \"\",\n        network: \"\",\n        networkPassphrase: \"\",\n        error: publicKeyReq.error || networkDetailsReq.error,\n      });\n    }\n\n    if (\n      this.currentAddress !== publicKeyReq.publicKey ||\n      this.currentNetwork !== networkDetailsReq.network ||\n      this.currentNetworkPassphrase !== networkDetailsReq.networkPassphrase\n    ) {\n      this.currentAddress = publicKeyReq.publicKey;\n      this.currentNetwork = networkDetailsReq.network;\n      this.currentNetworkPassphrase = networkDetailsReq.networkPassphrase;\n\n      cb({\n        address: publicKeyReq.publicKey,\n        network: networkDetailsReq.network,\n        networkPassphrase: networkDetailsReq.networkPassphrase,\n      });\n    }\n\n    setTimeout(() => this.fetchInfo(cb), this.timeout);\n  };\n\n  stop() {\n    this.isRunning = false;\n  }\n}\n","import { getAddress } from \"./getAddress\";\nimport { addToken } from \"./addToken\";\nimport { signTransaction } from \"./signTransaction\";\nimport { signMessage } from \"./signMessage\";\nimport { signAuthEntry } from \"./signAuthEntry\";\nimport { isConnected } from \"./isConnected\";\nimport { getNetwork } from \"./getNetwork\";\nimport { getNetworkDetails } from \"./getNetworkDetails\";\nimport { isAllowed } from \"./isAllowed\";\nimport { setAllowed } from \"./setAllowed\";\nimport { requestAccess } from \"./requestAccess\";\nimport { WatchWalletChanges } from \"./watchWalletChanges\";\n\nexport const isBrowser = typeof window !== \"undefined\";\n\nexport {\n  getAddress,\n  addToken,\n  signTransaction,\n  signMessage,\n  signAuthEntry,\n  isConnected,\n  getNetwork,\n  getNetworkDetails,\n  isAllowed,\n  setAllowed,\n  requestAccess,\n  WatchWalletChanges,\n};\nexport default {\n  getAddress,\n  addToken,\n  signTransaction,\n  signMessage,\n  signAuthEntry,\n  isConnected,\n  getNetwork,\n  getNetworkDetails,\n  isAllowed,\n  setAllowed,\n  requestAccess,\n  WatchWalletChanges,\n};\n"],"names":["root","factory","exports","module","define","amd","this","SERVICE_TYPES","EXTERNAL_SERVICE_TYPES","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","sendMessageToContentScript","msg","MESSAGE_ID","Date","now","Math","random","window","postMessage","source","messageId","location","origin","Promise","resolve","requestTimeout","type","REQUEST_CONNECTION_STATUS","REQUEST_PUBLIC_KEY","setTimeout","isConnected","publicKey","removeEventListener","messageListener","event","data","messagedId","clearTimeout","addEventListener","FreighterApiNodeError","code","message","FreighterApiInternalError","requestAccess","async","response","REQUEST_ACCESS","e","console","error","apiError","requestPublicKey","requestNetworkDetails","REQUEST_NETWORK_DETAILS","networkDetails","network","networkName","networkUrl","networkPassphrase","sorobanRpcUrl","undefined","requestAllowedStatus","REQUEST_ALLOWED_STATUS","isAllowed","getAddress","address","isBrowser","req","addToken","args","contractId","SUBMIT_TOKEN","submitToken","signTransaction","transactionXdr","opts","_accountToSign","accountToSign","submitTransaction","SUBMIT_TRANSACTION","signedTransaction","signerAddress","signedTxXdr","signMessage","signedMessage","blob","version","apiVersion","SUBMIT_BLOB","signedBlob","submitMessage","signAuthEntry","entryXdr","signedAuthEntry","SUBMIT_AUTH_ENTRY","submitAuthEntry","freighter","requestConnectionStatus","getNetwork","requestNetwork","getNetworkDetails","setAllowed","SET_ALLOWED_STATUS","setAllowedStatus","WatchWalletChanges","constructor","timeout","fetchInfo","cb","isRunning","publicKeyReq","networkDetailsReq","currentAddress","currentNetwork","currentNetworkPassphrase","watch","stop"],"sourceRoot":""}