import type { DeviceModelInternal, FirmwareRelease, VersionArray } from '@trezor/device-utils';
export type FirmwareRange = Record<DeviceModelInternal, {
    min: string;
    max: string;
}>;
export type IntermediaryVersion = 1 | 2 | 3;
export declare const IntermediaryVersion: import("@trezor/schema-utils").TUnion<[import("@trezor/schema-utils").TLiteral<1>, import("@trezor/schema-utils").TLiteral<2>, import("@trezor/schema-utils").TLiteral<3>]>;
export type ReleaseInfo = {
    changelog: FirmwareRelease[] | null;
    release: FirmwareRelease;
    isRequired: boolean | null;
    isNewer: boolean | null;
    intermediaryVersion?: IntermediaryVersion;
    translations?: string[];
};
export type BinaryInfo = {
    binary: ArrayBuffer;
    binaryVersion: VersionArray;
    releaseVersion: undefined;
};
//# sourceMappingURL=firmware.d.ts.map