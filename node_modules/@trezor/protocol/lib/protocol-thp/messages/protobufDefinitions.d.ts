export declare const getProtobufDefinitions: () => {
    ThpPairingMethod: {
        values: {
            SkipPairing: number;
            CodeEntry: number;
            QrCode: number;
            NFC: number;
        };
    };
    ThpDeviceProperties: {
        fields: {
            internal_model: {
                type: string;
                id: number;
            };
            model_variant: {
                type: string;
                id: number;
            };
            protocol_version_major: {
                type: string;
                id: number;
            };
            protocol_version_minor: {
                type: string;
                id: number;
            };
            pairing_methods: {
                rule: string;
                type: string;
                id: number;
                options: {
                    packed: boolean;
                };
            };
        };
    };
    ThpHandshakeCompletionReqNoisePayload: {
        fields: {
            host_pairing_credential: {
                type: string;
                id: number;
            };
        };
    };
    ThpCreateNewSession: {
        fields: {
            passphrase: {
                type: string;
                id: number;
            };
            on_device: {
                type: string;
                id: number;
            };
            derive_cardano: {
                type: string;
                id: number;
            };
        };
    };
    ThpPairingRequest: {
        fields: {
            host_name: {
                type: string;
                id: number;
            };
        };
    };
    ThpPairingRequestApproved: {
        fields: {};
    };
    ThpSelectMethod: {
        fields: {
            selected_pairing_method: {
                type: string;
                id: number;
            };
        };
    };
    ThpPairingPreparationsFinished: {
        fields: {};
    };
    ThpCodeEntryCommitment: {
        fields: {
            commitment: {
                type: string;
                id: number;
            };
        };
    };
    ThpCodeEntryChallenge: {
        fields: {
            challenge: {
                type: string;
                id: number;
            };
        };
    };
    ThpCodeEntryCpaceTrezor: {
        fields: {
            cpace_trezor_public_key: {
                type: string;
                id: number;
            };
        };
    };
    ThpCodeEntryCpaceHostTag: {
        fields: {
            cpace_host_public_key: {
                type: string;
                id: number;
            };
            tag: {
                type: string;
                id: number;
            };
        };
    };
    ThpCodeEntrySecret: {
        fields: {
            secret: {
                type: string;
                id: number;
            };
        };
    };
    ThpQrCodeTag: {
        fields: {
            tag: {
                type: string;
                id: number;
            };
        };
    };
    ThpQrCodeSecret: {
        fields: {
            secret: {
                type: string;
                id: number;
            };
        };
    };
    ThpNfcTagHost: {
        fields: {
            tag: {
                type: string;
                id: number;
            };
        };
    };
    ThpNfcTagTrezor: {
        fields: {
            tag: {
                type: string;
                id: number;
            };
        };
    };
    ThpCredentialRequest: {
        fields: {
            host_static_pubkey: {
                type: string;
                id: number;
            };
            autoconnect: {
                type: string;
                id: number;
            };
            credential: {
                type: string;
                id: number;
            };
        };
    };
    ThpCredentialResponse: {
        fields: {
            trezor_static_pubkey: {
                type: string;
                id: number;
            };
            credential: {
                type: string;
                id: number;
            };
        };
    };
    ThpEndRequest: {
        fields: {};
    };
    ThpEndResponse: {
        fields: {};
    };
    MessageType: {
        values: {
            ThpCreateNewSession: number;
            ThpPairingRequest: number;
            ThpPairingRequestApproved: number;
            ThpSelectMethod: number;
            ThpPairingPreparationsFinished: number;
            ThpCredentialRequest: number;
            ThpCredentialResponse: number;
            ThpEndRequest: number;
            ThpEndResponse: number;
            ThpCodeEntryCommitment: number;
            ThpCodeEntryChallenge: number;
            ThpCodeEntryCpaceTrezor: number;
            ThpCodeEntryCpaceHostTag: number;
            ThpCodeEntrySecret: number;
            ThpQrCodeTag: number;
            ThpQrCodeSecret: number;
            ThpNfcTagHost: number;
            ThpNfcTagTrezor: number;
        };
    };
};
//# sourceMappingURL=protobufDefinitions.d.ts.map