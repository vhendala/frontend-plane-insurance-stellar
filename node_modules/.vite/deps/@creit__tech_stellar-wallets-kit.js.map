{
  "version": 3,
  "sources": ["webpack://freighterApi/webpack/universalModuleDefinition", "webpack://freighterApi/webpack/bootstrap", "webpack://freighterApi/src/home/runner/work/freighter/freighter/@shared/constants/services.ts", "webpack://freighterApi/webpack/runtime/define%20property%20getters", "webpack://freighterApi/webpack/runtime/hasOwnProperty%20shorthand", "webpack://freighterApi/webpack/runtime/make%20namespace%20object", "webpack://freighterApi/src/home/runner/work/freighter/freighter/@shared/api/helpers/extensionMessaging.ts", "webpack://freighterApi/src/home/runner/work/freighter/freighter/@shared/api/external.ts", "webpack://freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/getAddress.ts", "webpack://freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/addToken.ts", "webpack://freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/signTransaction.ts", "webpack://freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/signMessage.ts", "webpack://freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/signAuthEntry.ts", "webpack://freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/isConnected.ts", "webpack://freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/getNetwork.ts", "webpack://freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/getNetworkDetails.ts", "webpack://freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/isAllowed.ts", "webpack://freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/setAllowed.ts", "webpack://freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/requestAccess.ts", "webpack://freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/watchWalletChanges.ts", "webpack://freighterApi/src/home/runner/work/freighter/freighter/@stellar/freighter-api/src/index.ts", "webpack://lobstrExtensionApi/webpack/universalModuleDefinition", "webpack://lobstrExtensionApi/webpack/bootstrap", "webpack://lobstrExtensionApi/src/Users/egorlukashev/WebstormProjects/lobstr-signer-extension/@shared/constants/services.ts", "webpack://lobstrExtensionApi/webpack/runtime/define%20property%20getters", "webpack://lobstrExtensionApi/webpack/runtime/hasOwnProperty%20shorthand", "webpack://lobstrExtensionApi/webpack/runtime/make%20namespace%20object", "webpack://lobstrExtensionApi/src/Users/egorlukashev/WebstormProjects/lobstr-signer-extension/@shared/api/helpers/extensionMessaging.ts", "webpack://lobstrExtensionApi/src/Users/egorlukashev/WebstormProjects/lobstr-signer-extension/@lobstrco/signer-extension-api/src/getPublicKey.ts", "webpack://lobstrExtensionApi/src/Users/egorlukashev/WebstormProjects/lobstr-signer-extension/@shared/api/external.ts", "webpack://lobstrExtensionApi/src/Users/egorlukashev/WebstormProjects/lobstr-signer-extension/@lobstrco/signer-extension-api/src/signTransaction.ts", "webpack://lobstrExtensionApi/src/Users/egorlukashev/WebstormProjects/lobstr-signer-extension/@lobstrco/signer-extension-api/src/isConnected.ts", "webpack://lobstrExtensionApi/src/Users/egorlukashev/WebstormProjects/lobstr-signer-extension/@lobstrco/signer-extension-api/src/index.ts", "browser-external:crypto", "../../tweetnacl/nacl-fast.js", "../../tweetnacl-util/nacl-util.js", "../../borsh/lib/cjs/types.js", "../../borsh/lib/cjs/buffer.js", "../../borsh/lib/cjs/utils.js", "../../borsh/lib/cjs/serialize.js", "../../borsh/lib/cjs/deserialize.js", "../../borsh/lib/cjs/index.js", "../../js-sha256/src/sha256.js", "../../@near-js/crypto/lib/commonjs/constants.cjs", "../../@near-js/crypto/lib/commonjs/key_pair_base.cjs", "../../@near-js/utils/lib/commonjs/constants.cjs", "../../@near-js/utils/lib/commonjs/errors/error_messages.json", "../../@near-js/utils/lib/commonjs/errors/errors.cjs", "../../@near-js/types/lib/commonjs/assignable.cjs", "../../@near-js/types/lib/commonjs/enum.cjs", "../../@near-js/types/lib/commonjs/errors.cjs", "../../@near-js/types/lib/commonjs/provider/light_client.cjs", "../../@near-js/types/lib/commonjs/provider/response.cjs", "../../@near-js/types/lib/commonjs/provider/index.cjs", "../../@near-js/types/lib/commonjs/index.cjs", "../../mustache/mustache.js", "../../@scure/base/index.ts", "../../@near-js/utils/lib/commonjs/format.cjs", "../../@near-js/utils/lib/commonjs/errors/rpc_error_schema.json", "../../@near-js/utils/lib/commonjs/errors/rpc_errors.cjs", "../../@near-js/utils/lib/commonjs/errors/index.cjs", "../../@near-js/utils/lib/commonjs/logger/console.logger.cjs", "../../@near-js/utils/lib/commonjs/logger/logger.cjs", "../../@near-js/utils/lib/commonjs/logger/index.cjs", "../../@near-js/utils/lib/commonjs/logging.cjs", "../../@near-js/utils/lib/commonjs/provider.cjs", "../../depd/lib/browser/index.js", "../../@near-js/utils/lib/commonjs/utils.cjs", "../../@near-js/utils/lib/commonjs/validators.cjs", "../../@near-js/utils/lib/commonjs/index.cjs", "../../@noble/hashes/src/_assert.ts", "../../@noble/hashes/src/crypto.ts", "../../@noble/hashes/src/utils.ts", "../../@noble/hashes/src/_md.ts", "../../@noble/hashes/src/_u64.ts", "../../@noble/hashes/src/sha512.ts", "../../@noble/curves/src/abstract/utils.ts", "../../@noble/curves/src/abstract/modular.ts", "../../@noble/curves/src/abstract/curve.ts", "../../@noble/curves/src/abstract/edwards.ts", "../../@noble/curves/src/abstract/hash-to-curve.ts", "../../@noble/curves/src/abstract/montgomery.ts", "../../@noble/curves/src/ed25519.ts", "../../safe-buffer/index.js", "../../randombytes/browser.js", "../../secp256k1/lib/index.js", "../../elliptic/package.json", "../../elliptic/node_modules/bn.js/lib/bn.js", "../../minimalistic-assert/index.js", "../../minimalistic-crypto-utils/lib/utils.js", "../../elliptic/lib/elliptic/utils.js", "../../brorand/index.js", "../../elliptic/lib/elliptic/curve/base.js", "../../inherits/inherits_browser.js", "../../elliptic/lib/elliptic/curve/short.js", "../../elliptic/lib/elliptic/curve/mont.js", "../../elliptic/lib/elliptic/curve/edwards.js", "../../elliptic/lib/elliptic/curve/index.js", "../../hash.js/lib/hash/utils.js", "../../hash.js/lib/hash/common.js", "../../hash.js/lib/hash/sha/common.js", "../../hash.js/lib/hash/sha/1.js", "../../hash.js/lib/hash/sha/256.js", "../../hash.js/lib/hash/sha/224.js", "../../hash.js/lib/hash/sha/512.js", "../../hash.js/lib/hash/sha/384.js", "../../hash.js/lib/hash/sha.js", "../../hash.js/lib/hash/ripemd.js", "../../hash.js/lib/hash/hmac.js", "../../hash.js/lib/hash.js", "../../elliptic/lib/elliptic/precomputed/secp256k1.js", "../../elliptic/lib/elliptic/curves.js", "../../hmac-drbg/lib/hmac-drbg.js", "../../elliptic/lib/elliptic/ec/key.js", "../../elliptic/lib/elliptic/ec/signature.js", "../../elliptic/lib/elliptic/ec/index.js", "../../elliptic/lib/elliptic/eddsa/key.js", "../../elliptic/lib/elliptic/eddsa/signature.js", "../../elliptic/lib/elliptic/eddsa/index.js", "../../elliptic/lib/elliptic.js", "../../secp256k1/lib/elliptic.js", "../../secp256k1/elliptic.js", "../../@near-js/crypto/lib/commonjs/public_key.cjs", "../../@near-js/crypto/lib/commonjs/key_pair_ed25519.cjs", "../../@near-js/crypto/lib/commonjs/key_pair_secp256k1.cjs", "../../@near-js/crypto/lib/commonjs/key_pair.cjs", "../../@near-js/crypto/lib/commonjs/index.cjs", "../../@hot-wallet/sdk/src/helpers/nep0314.ts", "../../uuid4/browser.mjs", "../../crypt/crypt.js", "../../charenc/charenc.js", "../../sha1/sha1.js", "../../@hot-wallet/sdk/src/helpers/proxy.ts", "../../@hot-wallet/sdk/src/hot.ts", "../../@hot-wallet/sdk/src/index.ts", "../../@creit.tech/stellar-wallets-kit/index.mjs", "../../@ngneat/elf/index.esm.js", "../../rxjs/src/index.ts", "../../rxjs/src/internal/Observable.ts", "../../tslib/tslib.es6.mjs", "../../rxjs/src/internal/util/isFunction.ts", "../../rxjs/src/internal/util/UnsubscriptionError.ts", "../../rxjs/src/internal/util/createErrorClass.ts", "../../rxjs/src/internal/util/arrRemove.ts", "../../rxjs/src/internal/Subscription.ts", "../../rxjs/src/internal/config.ts", "../../rxjs/src/internal/util/reportUnhandledError.ts", "../../rxjs/src/internal/scheduler/timeoutProvider.ts", "../../rxjs/src/internal/util/noop.ts", "../../rxjs/src/internal/NotificationFactories.ts", "../../rxjs/src/internal/util/errorContext.ts", "../../rxjs/src/internal/Subscriber.ts", "../../rxjs/src/internal/symbol/observable.ts", "../../rxjs/src/internal/util/pipe.ts", "../../rxjs/src/internal/util/identity.ts", "../../rxjs/src/internal/operators/refCount.ts", "../../rxjs/src/internal/util/lift.ts", "../../rxjs/src/internal/operators/OperatorSubscriber.ts", "../../rxjs/src/internal/observable/ConnectableObservable.ts", "../../rxjs/src/internal/observable/dom/animationFrames.ts", "../../rxjs/src/internal/scheduler/performanceTimestampProvider.ts", "../../rxjs/src/internal/scheduler/animationFrameProvider.ts", "../../rxjs/src/internal/util/ObjectUnsubscribedError.ts", "../../rxjs/src/internal/Subject.ts", "../../rxjs/src/internal/BehaviorSubject.ts", "../../rxjs/src/internal/scheduler/dateTimestampProvider.ts", "../../rxjs/src/internal/ReplaySubject.ts", "../../rxjs/src/internal/AsyncSubject.ts", "../../rxjs/src/internal/scheduler/asap.ts", "../../rxjs/src/internal/scheduler/Action.ts", "../../rxjs/src/internal/scheduler/intervalProvider.ts", "../../rxjs/src/internal/scheduler/AsyncAction.ts", "../../rxjs/src/internal/util/Immediate.ts", "../../rxjs/src/internal/scheduler/immediateProvider.ts", "../../rxjs/src/internal/scheduler/AsapAction.ts", "../../rxjs/src/internal/Scheduler.ts", "../../rxjs/src/internal/scheduler/AsyncScheduler.ts", "../../rxjs/src/internal/scheduler/AsapScheduler.ts", "../../rxjs/src/internal/scheduler/async.ts", "../../rxjs/src/internal/scheduler/queue.ts", "../../rxjs/src/internal/scheduler/QueueAction.ts", "../../rxjs/src/internal/scheduler/QueueScheduler.ts", "../../rxjs/src/internal/scheduler/animationFrame.ts", "../../rxjs/src/internal/scheduler/AnimationFrameAction.ts", "../../rxjs/src/internal/scheduler/AnimationFrameScheduler.ts", "../../rxjs/src/internal/scheduler/VirtualTimeScheduler.ts", "../../rxjs/src/internal/Notification.ts", "../../rxjs/src/internal/observable/empty.ts", "../../rxjs/src/internal/observable/of.ts", "../../rxjs/src/internal/util/args.ts", "../../rxjs/src/internal/util/isScheduler.ts", "../../rxjs/src/internal/observable/from.ts", "../../rxjs/src/internal/scheduled/scheduled.ts", "../../rxjs/src/internal/scheduled/scheduleObservable.ts", "../../rxjs/src/internal/util/isArrayLike.ts", "../../rxjs/src/internal/util/isPromise.ts", "../../rxjs/src/internal/util/isInteropObservable.ts", "../../rxjs/src/internal/util/isAsyncIterable.ts", "../../rxjs/src/internal/util/throwUnobservableError.ts", "../../rxjs/src/internal/util/isIterable.ts", "../../rxjs/src/internal/symbol/iterator.ts", "../../rxjs/src/internal/util/isReadableStreamLike.ts", "../../rxjs/src/internal/observable/innerFrom.ts", "../../rxjs/src/internal/operators/observeOn.ts", "../../rxjs/src/internal/util/executeSchedule.ts", "../../rxjs/src/internal/operators/subscribeOn.ts", "../../rxjs/src/internal/scheduled/schedulePromise.ts", "../../rxjs/src/internal/scheduled/scheduleArray.ts", "../../rxjs/src/internal/scheduled/scheduleIterable.ts", "../../rxjs/src/internal/scheduled/scheduleAsyncIterable.ts", "../../rxjs/src/internal/scheduled/scheduleReadableStreamLike.ts", "../../rxjs/src/internal/observable/throwError.ts", "../../rxjs/src/internal/util/isObservable.ts", "../../rxjs/src/internal/lastValueFrom.ts", "../../rxjs/src/internal/util/EmptyError.ts", "../../rxjs/src/internal/firstValueFrom.ts", "../../rxjs/src/internal/util/ArgumentOutOfRangeError.ts", "../../rxjs/src/internal/util/NotFoundError.ts", "../../rxjs/src/internal/util/SequenceError.ts", "../../rxjs/src/internal/operators/timeout.ts", "../../rxjs/src/internal/util/isDate.ts", "../../rxjs/src/internal/observable/bindCallback.ts", "../../rxjs/src/internal/operators/map.ts", "../../rxjs/src/internal/util/mapOneOrManyArgs.ts", "../../rxjs/src/internal/observable/bindNodeCallback.ts", "../../rxjs/src/internal/observable/combineLatest.ts", "../../rxjs/src/internal/util/argsArgArrayOrObject.ts", "../../rxjs/src/internal/util/createObject.ts", "../../rxjs/src/internal/observable/concat.ts", "../../rxjs/src/internal/operators/concatAll.ts", "../../rxjs/src/internal/operators/mergeAll.ts", "../../rxjs/src/internal/operators/mergeMap.ts", "../../rxjs/src/internal/operators/mergeInternals.ts", "../../rxjs/src/internal/observable/connectable.ts", "../../rxjs/src/internal/observable/defer.ts", "../../rxjs/src/internal/observable/forkJoin.ts", "../../rxjs/src/internal/observable/fromEventPattern.ts", "../../rxjs/src/internal/observable/iif.ts", "../../rxjs/src/internal/observable/interval.ts", "../../rxjs/src/internal/observable/timer.ts", "../../rxjs/src/internal/observable/merge.ts", "../../rxjs/src/internal/observable/never.ts", "../../rxjs/src/internal/observable/onErrorResumeNext.ts", "../../rxjs/src/internal/util/argsOrArgArray.ts", "../../rxjs/src/internal/observable/pairs.ts", "../../rxjs/src/internal/observable/partition.ts", "../../rxjs/src/internal/util/not.ts", "../../rxjs/src/internal/operators/filter.ts", "../../rxjs/src/internal/observable/race.ts", "../../rxjs/src/internal/observable/range.ts", "../../rxjs/src/internal/observable/using.ts", "../../rxjs/dist/esm5/internal/types.js", "../../rxjs/src/internal/operators/audit.ts", "../../rxjs/src/internal/operators/auditTime.ts", "../../rxjs/src/internal/operators/buffer.ts", "../../rxjs/src/internal/operators/bufferWhen.ts", "../../rxjs/src/internal/operators/catchError.ts", "../../rxjs/src/internal/operators/combineAll.ts", "../../rxjs/src/internal/operators/combineLatestAll.ts", "../../rxjs/src/internal/operators/joinAllInternals.ts", "../../rxjs/src/internal/operators/toArray.ts", "../../rxjs/src/internal/operators/reduce.ts", "../../rxjs/src/internal/operators/scanInternals.ts", "../../rxjs/src/internal/operators/concatMap.ts", "../../rxjs/src/internal/operators/concatMapTo.ts", "../../rxjs/src/internal/operators/connect.ts", "../../rxjs/src/internal/observable/fromSubscribable.ts", "../../rxjs/src/internal/operators/count.ts", "../../rxjs/src/internal/operators/debounce.ts", "../../rxjs/src/internal/operators/debounceTime.ts", "../../rxjs/src/internal/operators/defaultIfEmpty.ts", "../../rxjs/src/internal/operators/delay.ts", "../../rxjs/src/internal/operators/delayWhen.ts", "../../rxjs/src/internal/operators/take.ts", "../../rxjs/src/internal/operators/ignoreElements.ts", "../../rxjs/src/internal/operators/mapTo.ts", "../../rxjs/src/internal/operators/dematerialize.ts", "../../rxjs/src/internal/operators/distinct.ts", "../../rxjs/src/internal/operators/distinctUntilChanged.ts", "../../rxjs/src/internal/operators/distinctUntilKeyChanged.ts", "../../rxjs/src/internal/operators/elementAt.ts", "../../rxjs/src/internal/operators/throwIfEmpty.ts", "../../rxjs/src/internal/operators/every.ts", "../../rxjs/src/internal/operators/exhaust.ts", "../../rxjs/src/internal/operators/exhaustAll.ts", "../../rxjs/src/internal/operators/exhaustMap.ts", "../../rxjs/src/internal/operators/expand.ts", "../../rxjs/src/internal/operators/finalize.ts", "../../rxjs/src/internal/operators/find.ts", "../../rxjs/src/internal/operators/findIndex.ts", "../../rxjs/src/internal/operators/first.ts", "../../rxjs/src/internal/operators/groupBy.ts", "../../rxjs/src/internal/operators/isEmpty.ts", "../../rxjs/src/internal/operators/last.ts", "../../rxjs/src/internal/operators/materialize.ts", "../../rxjs/src/internal/operators/max.ts", "../../rxjs/src/internal/operators/flatMap.ts", "../../rxjs/src/internal/operators/mergeMapTo.ts", "../../rxjs/src/internal/operators/mergeScan.ts", "../../rxjs/src/internal/operators/min.ts", "../../rxjs/src/internal/operators/multicast.ts", "../../rxjs/src/internal/operators/pairwise.ts", "../../rxjs/src/internal/operators/pluck.ts", "../../rxjs/src/internal/operators/publish.ts", "../../rxjs/src/internal/operators/publishBehavior.ts", "../../rxjs/src/internal/operators/publishLast.ts", "../../rxjs/src/internal/operators/publishReplay.ts", "../../rxjs/src/internal/operators/repeat.ts", "../../rxjs/src/internal/operators/repeatWhen.ts", "../../rxjs/src/internal/operators/retry.ts", "../../rxjs/src/internal/operators/retryWhen.ts", "../../rxjs/src/internal/operators/sample.ts", "../../rxjs/src/internal/operators/sampleTime.ts", "../../rxjs/src/internal/operators/scan.ts", "../../rxjs/src/internal/operators/sequenceEqual.ts", "../../rxjs/src/internal/operators/shareReplay.ts", "../../rxjs/src/internal/operators/single.ts", "../../rxjs/src/internal/operators/skip.ts", "../../rxjs/src/internal/operators/skipLast.ts", "../../rxjs/src/internal/operators/skipUntil.ts", "../../rxjs/src/internal/operators/skipWhile.ts", "../../rxjs/src/internal/operators/startWith.ts", "../../rxjs/src/internal/operators/switchAll.ts", "../../rxjs/src/internal/operators/switchMap.ts", "../../rxjs/src/internal/operators/switchMapTo.ts", "../../rxjs/src/internal/operators/switchScan.ts", "../../rxjs/src/internal/operators/takeUntil.ts", "../../rxjs/src/internal/operators/takeWhile.ts", "../../rxjs/src/internal/operators/tap.ts", "../../rxjs/src/internal/operators/throttle.ts", "../../rxjs/src/internal/operators/throttleTime.ts", "../../rxjs/src/internal/operators/timeInterval.ts", "../../rxjs/src/internal/operators/timeoutWith.ts", "../../rxjs/src/internal/operators/timestamp.ts", "../../rxjs/src/internal/operators/window.ts", "../../rxjs/src/internal/operators/windowTime.ts", "../../rxjs/src/internal/operators/windowWhen.ts", "../../rxjs/src/internal/operators/zipAll.ts", "../../rxjs/src/operators/index.ts", "../../rxjs/src/internal/operators/partition.ts", "../../@creit.tech/src/types.ts", "../../@creit.tech/src/state/store.ts", "../../@creit.tech/src/stellar-wallets-kit.ts", "../../lit/index.js", "../../@lit/reactive-element/src/reactive-element.ts", "../../@lit/reactive-element/src/css-tag.ts", "../../lit-html/src/lit-html.ts", "../../lit-element/src/lit-element.ts", "../../lit-html/src/is-server.ts", "../../lit/directives/style-map.js", "../../lit-html/src/directives/style-map.ts", "../../lit-html/src/directive.ts", "../../lit/decorators.js", "../../@lit/reactive-element/src/decorators/custom-element.ts", "../../@lit/reactive-element/src/decorators/property.ts", "../../@lit/reactive-element/src/decorators/state.ts", "../../@lit/reactive-element/src/decorators/event-options.ts", "../../@lit/reactive-element/src/decorators/query.ts", "../../@lit/reactive-element/src/decorators/base.ts", "../../@lit/reactive-element/src/decorators/query-all.ts", "../../@lit/reactive-element/src/decorators/query-async.ts", "../../@lit/reactive-element/src/decorators/query-assigned-elements.ts", "../../@lit/reactive-element/src/decorators/query-assigned-nodes.ts", "../../@creit.tech/src/state/reactive-state.ts", "../../@creit.tech/src/components/modal/styles.ts", "../../@creit.tech/src/components/modal/stellar-wallets-modal.ts", "../../@creit.tech/src/services/account.service.ts", "../../@creit.tech/src/services/clipboard.service.ts", "../../@creit.tech/src/components/button/styles.ts", "../../@creit.tech/src/components/button/stellar-wallets-button.ts", "../../@creit.tech/src/components/selector-modal/styles.ts", "../../@creit.tech/src/components/selector-modal/stellar-selector-modal.ts", "../../@albedo-link/intent/src/index.js", "../../@albedo-link/intent/src/random-token-generator.js", "../../@albedo-link/intent/src/intent-interface.js", "../../@albedo-link/intent/src/intent-errors.js", "../../@albedo-link/intent/src/intent-dispatcher.js", "../../@albedo-link/intent/src/transport-builder.js", "../../@albedo-link/intent/src/transport-handler.js", "../../@albedo-link/intent/src/implicit-session-storage.js", "../../@albedo-link/intent/src/implicit-session.js", "../../@albedo-link/intent/src/web+stellar-handler.js", "../../@creit.tech/src/modules/albedo.module.ts", "../../@creit.tech/src/modules/freighter.module.ts", "../../@creit.tech/src/modules/lobstr.module.ts", "../../@creit.tech/src/modules/rabet.module.ts", "../../@creit.tech/src/interfaces.ts", "../../@creit.tech/src/mobile-sdk.ts", "../../@creit.tech/src/index.ts", "../../@creit.tech/src/modules/xbull.module.ts", "../../@creit.tech/src/modules/hotwallet.module.ts", "../../@creit.tech/src/modules/hana.module.ts", "../../@creit.tech/src/modules/klever.module.ts", "../../@creit.tech/src/utils.ts"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"freighterApi\"] = factory();\n\telse\n\t\troot[\"freighterApi\"] = factory();\n})(this, () => {\nreturn ", "// The require scope\nvar __webpack_require__ = {};\n\n", "export enum SERVICE_TYPES {\n  CREATE_ACCOUNT = \"CREATE_ACCOUNT\",\n  FUND_ACCOUNT = \"FUND_ACCOUNT\",\n  ADD_ACCOUNT = \"ADD_ACCOUNT\",\n  IMPORT_ACCOUNT = \"IMPORT_ACCOUNT\",\n  IMPORT_HARDWARE_WALLET = \"IMPORT_HARDWARE_WALLET\",\n  LOAD_ACCOUNT = \"LOAD_ACCOUNT\",\n  MAKE_ACCOUNT_ACTIVE = \"MAKE_ACCOUNT_ACTIVE\",\n  UPDATE_ACCOUNT_NAME = \"UPDATE_ACCOUNT_NAME\",\n  GET_MNEMONIC_PHRASE = \"GET_MNEMONIC_PHRASE\",\n  CONFIRM_MNEMONIC_PHRASE = \"CONFIRM_MNEMONIC_PHRASE\",\n  CONFIRM_MIGRATED_MNEMONIC_PHRASE = \"CONFIRM_MIGRATED_MNEMONIC_PHRASE\",\n  RECOVER_ACCOUNT = \"RECOVER_ACCOUNT\",\n  CONFIRM_PASSWORD = \"CONFIRM_PASSWORD\",\n  REJECT_ACCESS = \"REJECT_ACCESS\",\n  GRANT_ACCESS = \"GRANT_ACCESS\",\n  ADD_TOKEN = \"ADD_TOKEN\",\n  SIGN_TRANSACTION = \"SIGN_TRANSACTION\",\n  SIGN_BLOB = \"SIGN_BLOB\",\n  SIGN_AUTH_ENTRY = \"SIGN_AUTH_ENTRY\",\n  HANDLE_SIGNED_HW_PAYLOAD = \"HANDLE_SIGNED_HW_PAYLOAD\",\n  REJECT_TRANSACTION = \"REJECT_TRANSACTION\",\n  SIGN_FREIGHTER_TRANSACTION = \"SIGN_FREIGHTER_TRANSACTION\",\n  SIGN_FREIGHTER_SOROBAN_TRANSACTION = \"SIGN_FREIGHTER_SOROBAN_TRANSACTION\",\n  ADD_RECENT_ADDRESS = \"ADD_RECENT_ADDRESS\",\n  LOAD_RECENT_ADDRESSES = \"LOAD_RECENT_ADDRESSES\",\n  LOAD_LAST_USED_ACCOUNT = \"LOAD_LAST_USED_ACCOUNT\",\n  SIGN_OUT = \"SIGN_OUT\",\n  SHOW_BACKUP_PHRASE = \"SHOW_BACKUP_PHRASE\",\n  SAVE_ALLOWLIST = \"SAVE_ALLOWLIST\",\n  SAVE_SETTINGS = \"SAVE_SETTINGS\",\n  SAVE_EXPERIMENTAL_FEATURES = \"SAVE_EXPERIMENTAL_FEATURES\",\n  LOAD_SETTINGS = \"LOAD_SETTINGS\",\n  GET_CACHED_ASSET_ICON = \"GET_CACHED_ASSET_ICON\",\n  CACHE_ASSET_ICON = \"CACHE_ASSET_ICON\",\n  GET_CACHED_ASSET_DOMAIN = \"GET_CACHED_ASSET_DOMAIN\",\n  CACHE_ASSET_DOMAIN = \"CACHE_ASSET_DOMAIN\",\n  GET_MEMO_REQUIRED_ACCOUNTS = \"GET_MEMO_REQUIRED_ACCOUNTS\",\n  ADD_CUSTOM_NETWORK = \"ADD_CUSTOM_NETWORK\",\n  CHANGE_NETWORK = \"CHANGE_NETWORK\",\n  REMOVE_CUSTOM_NETWORK = \"REMOVE_CUSTOM_NETWORK\",\n  EDIT_CUSTOM_NETWORK = \"EDIT_CUSTOM_NETWORK\",\n  RESET_EXP_DATA = \"RESET_EXP_DATA\",\n  ADD_TOKEN_ID = \"ADD_TOKEN_ID\",\n  GET_TOKEN_IDS = \"GET_TOKEN_IDS\",\n  REMOVE_TOKEN_ID = \"REMOVE_TOKEN_ID\",\n  GET_MIGRATABLE_ACCOUNTS = \"GET_MIGRATABLE_ACCOUNTS\",\n  GET_MIGRATED_MNEMONIC_PHRASE = \"GET_MIGRATED_MNEMONIC_PHRASE\",\n  MIGRATE_ACCOUNTS = \"MIGRATE_ACCOUNTS\",\n  ADD_ASSETS_LIST = \"ADD_ASSETS_LIST\",\n  MODIFY_ASSETS_LIST = \"MODIFY_ASSETS_LIST\",\n  CHANGE_ASSET_VISIBILITY = \"CHANGE_ASSET_VISIBILITY\",\n  GET_HIDDEN_ASSETS = \"GET_HIDDEN_ASSETS\",\n  GET_IS_ACCOUNT_MISMATCH = \"GET_IS_ACCOUNT_MISMATCH\",\n}\n\nexport enum EXTERNAL_SERVICE_TYPES {\n  REQUEST_ACCESS = \"REQUEST_ACCESS\",\n  REQUEST_PUBLIC_KEY = \"REQUEST_PUBLIC_KEY\",\n  SUBMIT_TOKEN = \"SUBMIT_TOKEN\",\n  SUBMIT_TRANSACTION = \"SUBMIT_TRANSACTION\",\n  SUBMIT_BLOB = \"SUBMIT_BLOB\",\n  SUBMIT_AUTH_ENTRY = \"SUBMIT_AUTH_ENTRY\",\n  REQUEST_NETWORK = \"REQUEST_NETWORK\",\n  REQUEST_NETWORK_DETAILS = \"REQUEST_NETWORK_DETAILS\",\n  REQUEST_CONNECTION_STATUS = \"REQUEST_CONNECTION_STATUS\",\n  REQUEST_ALLOWED_STATUS = \"REQUEST_ALLOWED_STATUS\",\n  SET_ALLOWED_STATUS = \"SET_ALLOWED_STATUS\",\n  REQUEST_USER_INFO = \"REQUEST_USER_INFO\",\n}\n\nexport const EXTERNAL_MSG_REQUEST = \"FREIGHTER_EXTERNAL_MSG_REQUEST\";\nexport const EXTERNAL_MSG_RESPONSE = \"FREIGHTER_EXTERNAL_MSG_RESPONSE\";\n\ndeclare const DEV_SERVER: string;\nconst _DEV_SERVER = DEV_SERVER;\nexport { _DEV_SERVER as DEV_SERVER };\n\ndeclare const DEV_EXTENSION: string;\nconst _DEV_EXTENSION = DEV_EXTENSION;\nexport { _DEV_EXTENSION as DEV_EXTENSION };\n", "// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};", "__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))", "// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};", "import browser from \"webextension-polyfill\";\nimport {\n  DEV_SERVER,\n  EXTERNAL_MSG_RESPONSE,\n  EXTERNAL_MSG_REQUEST,\n  EXTERNAL_SERVICE_TYPES,\n  SERVICE_TYPES,\n} from \"../../constants/services\";\nimport { Response } from \"../types\";\n\ntype Msg =\n  | {\n      [key: string]: any;\n      activePublicKey: string | null;\n      type: SERVICE_TYPES;\n    }\n  | {\n      [key: string]: any;\n      type: EXTERNAL_SERVICE_TYPES;\n    };\n\nexport const sendMessageToContentScript = (msg: Msg): Promise<Response> => {\n  /* \n    In the case of multiple calls coming in sequentially, we use this MESSAGE_ID to make sure we're responding to\n    the appropriate message sender. Otherwise, we can run into race conditions where we simply resolve all \n    sent messages with the first thing that comes back.\n  */\n  const MESSAGE_ID = Date.now() + Math.random();\n\n  window.postMessage(\n    { source: EXTERNAL_MSG_REQUEST, messageId: MESSAGE_ID, ...msg },\n    window.location.origin\n  );\n  return new Promise((resolve) => {\n    let requestTimeout = 0 as any;\n\n    /* \n      In the case that Freighter is not installed at all, any messages to \n      background from freighter-api will hang forever and not respond in any way. \n      This is especially a problem for the isConnected method, because this is \n      likely to be called in a situation where Freighter isn't installed.\n      To prevent this, we add a timeout to automatically resolve in the event \n      Freighter doesn't respond in a timely fashion to this method.\n    */\n    if (\n      msg.type === EXTERNAL_SERVICE_TYPES.REQUEST_CONNECTION_STATUS ||\n      msg.type === EXTERNAL_SERVICE_TYPES.REQUEST_PUBLIC_KEY\n    ) {\n      requestTimeout = setTimeout(() => {\n        resolve({\n          isConnected: false,\n          publicKey: \"\",\n        } as Response);\n        window.removeEventListener(\"message\", messageListener);\n      }, 2000);\n    }\n\n    const messageListener = (event: { source: any; data: Response }) => {\n      // We only accept messages from ourselves\n      if (event.source !== window) return;\n      // Only respond to messages tagged as being from our content script\n      if (event?.data?.source !== EXTERNAL_MSG_RESPONSE) return;\n      // Only respond to messages that this instance of sendMessageToContentScript sent\n      if (event?.data?.messagedId !== MESSAGE_ID) return;\n\n      resolve(event.data);\n      window.removeEventListener(\"message\", messageListener);\n      clearTimeout(requestTimeout);\n    };\n    window.addEventListener(\"message\", messageListener, false);\n  });\n};\n\nexport const sendMessageToBackground = async (msg: Msg): Promise<Response> => {\n  let res;\n\n  if (DEV_SERVER) {\n    // treat this as an external call because we're making the call from the browser, not the popup\n    res = await sendMessageToContentScript(msg);\n  } else {\n    res = (await browser.runtime.sendMessage(msg)) as Response;\n  }\n\n  return res as Response;\n};\n\nexport const FreighterApiNodeError = {\n  code: -1,\n  message: \"Node environment is not supported\",\n};\n\nexport const FreighterApiInternalError = {\n  code: -1,\n  message:\n    \"The wallet encountered an internal error. Please try again or contact the wallet if the problem persists.\",\n};\n\nexport const FreighterApiDeclinedError = {\n  code: -4,\n  message: \"The user rejected this request.\",\n};\n", "import { EXTERNAL_SERVICE_TYPES } from \"../constants/services\";\nimport { NetworkDetails } from \"../constants/stellar\";\nimport {\n  sendMessageToContentScript,\n  FreighterApiInternalError,\n} from \"./helpers/extensionMessaging\";\nimport { FreighterApiError } from \"./types\";\n\nexport const requestAccess = async (): Promise<{\n  publicKey: string;\n  error?: FreighterApiError;\n}> => {\n  let response;\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_ACCESS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  const { publicKey } = response || { publicKey: \"\" };\n\n  return { publicKey, error: response?.apiError };\n};\n\nexport const requestPublicKey = async (): Promise<{\n  publicKey: string;\n  error?: FreighterApiError;\n}> => {\n  let response;\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_PUBLIC_KEY,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  return { publicKey: response?.publicKey || \"\", error: response?.apiError };\n};\n\nexport const submitToken = async (args: {\n  contractId: string;\n  networkPassphrase?: string;\n}): Promise<{\n  contractId?: string;\n  error?: FreighterApiError;\n}> => {\n  let response;\n  try {\n    response = await sendMessageToContentScript({\n      contractId: args.contractId,\n      networkPassphrase: args.networkPassphrase,\n      type: EXTERNAL_SERVICE_TYPES.SUBMIT_TOKEN,\n    });\n  } catch (e) {\n    return {\n      error: FreighterApiInternalError,\n    };\n  }\n\n  return {\n    contractId: response.contractId,\n    error: response?.apiError,\n  };\n};\n\nexport const submitTransaction = async (\n  transactionXdr: string,\n  opts?:\n    | string\n    | {\n        accountToSign?: string;\n        networkPassphrase?: string;\n      },\n  accountToSign?: string,\n): Promise<{\n  signedTransaction: string;\n  signerAddress: string;\n  error?: FreighterApiError;\n}> => {\n  let network;\n  let _accountToSign;\n  let networkPassphrase;\n\n  /* \n  As of v1.3.0, this method now accepts an object as its second param. \n  Previously, it accepted optional second and third string parameters.\n  This logic maintains backwards compatibility for older versions\n  */\n  if (typeof opts === \"object\") {\n    _accountToSign = opts.accountToSign;\n    networkPassphrase = opts.networkPassphrase;\n  } else {\n    network = opts;\n    _accountToSign = accountToSign;\n  }\n\n  let response;\n  try {\n    response = await sendMessageToContentScript({\n      transactionXdr,\n      network,\n      networkPassphrase,\n      accountToSign: _accountToSign,\n      type: EXTERNAL_SERVICE_TYPES.SUBMIT_TRANSACTION,\n    });\n  } catch (e) {\n    return {\n      signedTransaction: \"\",\n      signerAddress: \"\",\n      error: FreighterApiInternalError,\n    };\n  }\n  const { signedTransaction, signerAddress } = response;\n\n  return { signedTransaction, signerAddress, error: response?.apiError };\n};\n\nexport const submitMessage = async (\n  blob: string,\n  version: string,\n  opts?: {\n    address?: string;\n    networkPassphrase?: string;\n  },\n): Promise<{\n  signedMessage: Buffer | null;\n  signerAddress: string;\n  error?: FreighterApiError;\n}> => {\n  let response;\n  const _opts = opts || {};\n  const accountToSign = _opts.address;\n  try {\n    response = await sendMessageToContentScript({\n      blob,\n      accountToSign,\n      apiVersion: version,\n      networkPassphrase: opts?.networkPassphrase,\n      type: EXTERNAL_SERVICE_TYPES.SUBMIT_BLOB,\n    });\n  } catch (e) {\n    return {\n      signedMessage: null,\n      signerAddress: \"\",\n      error: FreighterApiInternalError,\n    };\n  }\n  const { signedBlob, signerAddress } = response;\n\n  return {\n    signedMessage: signedBlob || null,\n    signerAddress,\n    error: response?.apiError,\n  };\n};\n\nexport const submitAuthEntry = async (\n  entryXdr: string,\n  version: string,\n  opts?: {\n    address?: string;\n    networkPassphrase?: string;\n  },\n): Promise<{\n  signedAuthEntry: Buffer | null;\n  signerAddress: string;\n  error?: FreighterApiError;\n}> => {\n  const _opts = opts || {};\n  const accountToSign = _opts.address;\n  let response;\n  try {\n    response = await sendMessageToContentScript({\n      entryXdr,\n      accountToSign,\n      apiVersion: version,\n      networkPassphrase: opts?.networkPassphrase,\n      type: EXTERNAL_SERVICE_TYPES.SUBMIT_AUTH_ENTRY,\n    });\n  } catch (e) {\n    console.error(e);\n    return {\n      signedAuthEntry: null,\n      signerAddress: \"\",\n      error: FreighterApiInternalError,\n    };\n  }\n  const { signedAuthEntry, signerAddress } = response;\n\n  return {\n    signedAuthEntry: signedAuthEntry || null,\n    signerAddress,\n    error: response?.apiError,\n  };\n};\n\nexport const requestNetwork = async (): Promise<{\n  network: string;\n  networkPassphrase: string;\n  error?: FreighterApiError;\n}> => {\n  let response;\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_NETWORK_DETAILS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  const { networkDetails } = response || {\n    networkDetails: { network: \"\", networkPassphrase: \"\" },\n  };\n\n  return {\n    network: networkDetails?.network,\n    networkPassphrase: networkDetails?.networkPassphrase,\n    error: response?.apiError,\n  };\n};\n\nexport const requestNetworkDetails = async (): Promise<{\n  network: string;\n  networkUrl: string;\n  networkPassphrase: string;\n  sorobanRpcUrl?: string;\n  error?: FreighterApiError;\n}> => {\n  let response;\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_NETWORK_DETAILS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  const { networkDetails, apiError } = response || {\n    networkDetails: {\n      network: \"\",\n      networkName: \"\",\n      networkUrl: \"\",\n      networkPassphrase: \"\",\n      sorobanRpcUrl: undefined,\n      apiError: \"\",\n    } as NetworkDetails,\n  };\n\n  const { network, networkUrl, networkPassphrase, sorobanRpcUrl } =\n    networkDetails;\n\n  return {\n    network,\n    networkUrl,\n    networkPassphrase,\n    sorobanRpcUrl,\n    error: apiError,\n  };\n};\n\nexport const requestConnectionStatus = async (): Promise<{\n  isConnected: boolean;\n}> => {\n  let response = {\n    isConnected: false,\n  };\n\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_CONNECTION_STATUS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  return { isConnected: response.isConnected };\n};\n\nexport const requestAllowedStatus = async (): Promise<{\n  isAllowed: boolean;\n  error?: FreighterApiError;\n}> => {\n  let response;\n\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_ALLOWED_STATUS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  const { isAllowed } = response || { isAllowed: false };\n\n  return { isAllowed, error: response?.apiError };\n};\n\nexport const setAllowedStatus = async (): Promise<{\n  isAllowed: boolean;\n  error?: FreighterApiError;\n}> => {\n  let response;\n\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.SET_ALLOWED_STATUS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  const { isAllowed } = response || {\n    isAllowed: false,\n  };\n\n  return { isAllowed, error: response?.apiError };\n};\n", "import { requestPublicKey } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const getAddress = async (): Promise<\n  { address: string } & { error?: FreighterApiError }\n> => {\n  let address = \"\";\n  if (isBrowser) {\n    const req = await requestPublicKey();\n    address = req.publicKey;\n\n    if (req.error) {\n      return { address, error: req.error };\n    }\n\n    return { address };\n  }\n\n  return { address, error: FreighterApiNodeError };\n};\n", "import { submitToken } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const addToken = async (args: {\n  contractId: string;\n  networkPassphrase?: string;\n}): Promise<{ contractId: string } & { error?: FreighterApiError }> => {\n  if (isBrowser) {\n    const req = await submitToken(args);\n\n    if (req.error) {\n      return { contractId: \"\", error: req.error };\n    }\n\n    return { contractId: req.contractId || \"\" };\n  }\n\n  return { contractId: \"\", error: FreighterApiNodeError };\n};\n", "import { submitTransaction } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const signTransaction = async (\n  transactionXdr: string,\n  opts?: {\n    networkPassphrase?: string;\n    address?: string;\n  },\n): Promise<\n  { signedTxXdr: string; signerAddress: string } & {\n    error?: FreighterApiError;\n  }\n> => {\n  if (isBrowser) {\n    const req = await submitTransaction(transactionXdr, opts);\n\n    if (req.error) {\n      return { signedTxXdr: \"\", signerAddress: \"\", error: req.error };\n    }\n\n    return {\n      signedTxXdr: req.signedTransaction,\n      signerAddress: req.signerAddress,\n    };\n  }\n\n  return { signedTxXdr: \"\", signerAddress: \"\", error: FreighterApiNodeError };\n};\n", "import { Buffer } from \"buffer\";\n\nimport {\n  requestAllowedStatus,\n  requestAccess,\n  submitMessage,\n} from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\ntype SignMessageV3Response = {\n  signedMessage: Buffer | null;\n  signerAddress: string;\n} & {\n  error?: FreighterApiError;\n};\n\ntype SignMessageV4Response = {\n  signedMessage: string;\n  signerAddress: string;\n} & {\n  error?: FreighterApiError;\n};\n\nexport const signMessage = async (\n  message: string,\n  opts?: {\n    networkPassphrase?: string;\n    address?: string;\n  },\n): Promise<SignMessageV3Response | SignMessageV4Response> => {\n  if (isBrowser) {\n    const { isAllowed } = await requestAllowedStatus();\n    if (!isAllowed) {\n      const req = await requestAccess();\n\n      if (req.error) {\n        return { signedMessage: null, signerAddress: \"\", error: req.error };\n      }\n    }\n\n    const req = await submitMessage(message, __PACKAGE_VERSION__, opts);\n\n    if (req.error) {\n      return { signedMessage: null, signerAddress: \"\", error: req.error };\n    }\n\n    return {\n      signedMessage: req.signedMessage,\n      signerAddress: req.signerAddress,\n    };\n  }\n\n  return {\n    signedMessage: null,\n    signerAddress: \"\",\n    error: FreighterApiNodeError,\n  };\n};\n", "import {\n  requestAccess,\n  requestAllowedStatus,\n  submitAuthEntry,\n} from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const signAuthEntry = async (\n  entryXdr: string,\n  opts?: {\n    networkPassphrase?: string;\n    address?: string;\n  },\n): Promise<\n  { signedAuthEntry: Buffer | null; signerAddress: string } & {\n    error?: FreighterApiError;\n  }\n> => {\n  if (isBrowser) {\n    const { isAllowed } = await requestAllowedStatus();\n    if (!isAllowed) {\n      const req = await requestAccess();\n\n      if (req.error) {\n        return { signedAuthEntry: null, signerAddress: \"\", error: req.error };\n      }\n    }\n\n    const req = await submitAuthEntry(entryXdr, __PACKAGE_VERSION__, opts);\n\n    if (req.error) {\n      return { signedAuthEntry: null, signerAddress: \"\", error: req.error };\n    }\n\n    return {\n      signedAuthEntry: req.signedAuthEntry,\n      signerAddress: req.signerAddress,\n    };\n  }\n\n  return {\n    signedAuthEntry: null,\n    signerAddress: \"\",\n    error: FreighterApiNodeError,\n  };\n};\n", "import { requestConnectionStatus } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const isConnected = async (): Promise<\n  { isConnected: boolean } & { error?: FreighterApiError }\n> => {\n  if (isBrowser) {\n    if (window.freighter) {\n      return Promise.resolve({ isConnected: window.freighter });\n    }\n\n    return requestConnectionStatus();\n  }\n\n  return { isConnected: false, error: FreighterApiNodeError };\n};\n", "import { requestNetwork } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const getNetwork = async (): Promise<\n  { network: string; networkPassphrase: string } & {\n    error?: FreighterApiError;\n  }\n> => {\n  if (isBrowser) {\n    const req = await requestNetwork();\n\n    if (req.error) {\n      return { network: \"\", networkPassphrase: \"\", error: req.error };\n    }\n\n    return { network: req.network, networkPassphrase: req.networkPassphrase };\n  }\n\n  return { network: \"\", networkPassphrase: \"\", error: FreighterApiNodeError };\n};\n", "import { requestNetworkDetails } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const getNetworkDetails = async (): Promise<\n  {\n    network: string;\n    networkUrl: string;\n    networkPassphrase: string;\n    sorobanRpcUrl?: string;\n  } & { error?: FreighterApiError }\n> => {\n  if (isBrowser) {\n    const req = await requestNetworkDetails();\n\n    if (req.error) {\n      return {\n        network: \"\",\n        networkUrl: \"\",\n        networkPassphrase: \"\",\n        error: req.error,\n      };\n    }\n\n    return {\n      network: req.network,\n      networkUrl: req.networkUrl,\n      networkPassphrase: req.networkPassphrase,\n      sorobanRpcUrl: req.sorobanRpcUrl,\n    };\n  }\n\n  return {\n    network: \"\",\n    networkUrl: \"\",\n    networkPassphrase: \"\",\n    error: FreighterApiNodeError,\n  };\n};\n", "import { requestAllowedStatus } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const isAllowed = async (): Promise<\n  { isAllowed: boolean } & { error?: FreighterApiError }\n> => {\n  let isAllowed = false;\n  if (isBrowser) {\n    const req = await requestAllowedStatus();\n    isAllowed = req.isAllowed;\n\n    if (req.error) {\n      return { isAllowed, error: req.error };\n    }\n\n    return { isAllowed };\n  }\n\n  return { isAllowed, error: FreighterApiNodeError };\n};\n", "import { setAllowedStatus } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const setAllowed = async (): Promise<\n  { isAllowed: boolean } & { error?: FreighterApiError }\n> => {\n  let isAllowed = false;\n  if (isBrowser) {\n    const req = await setAllowedStatus();\n    isAllowed = req.isAllowed;\n\n    if (req.error) {\n      return { isAllowed, error: req.error };\n    }\n\n    return { isAllowed };\n  }\n\n  return { isAllowed, error: FreighterApiNodeError };\n};\n", "import { requestAccess as requestAccessApi } from \"@shared/api/external\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { isBrowser } from \".\";\n\nexport const requestAccess = async (): Promise<\n  { address: string } & { error?: FreighterApiError }\n> => {\n  let address = \"\";\n  if (isBrowser) {\n    const req = await requestAccessApi();\n    address = req.publicKey;\n\n    if (req.error) {\n      return { address, error: req.error };\n    }\n\n    return { address };\n  }\n\n  return { address, error: FreighterApiNodeError };\n};\n", "import { requestPublicKey } from \"@shared/api/external\";\nimport { requestNetworkDetails } from \"@shared/api/external\";\nimport { FreighterApiNodeError } from \"@shared/api/helpers/extensionMessaging\";\nimport { FreighterApiError } from \"@shared/api/types\";\nimport { isBrowser } from \".\";\n\ninterface CallbackParams {\n  address: string;\n  network: string;\n  networkPassphrase: string;\n  error?: FreighterApiError;\n}\n\nexport class WatchWalletChanges {\n  timeout: number;\n  currentAddress: string;\n  currentNetwork: string;\n  currentNetworkPassphrase: string;\n  isRunning: boolean;\n\n  constructor(timeout = 3000) {\n    this.timeout = timeout;\n    this.currentAddress = \"\";\n    this.currentNetwork = \"\";\n    this.currentNetworkPassphrase = \"\";\n    this.isRunning = false;\n  }\n\n  watch(cb: (params: CallbackParams) => void): { error?: FreighterApiError } {\n    if (!isBrowser) {\n      return { error: FreighterApiNodeError };\n    }\n    this.isRunning = true;\n    this.fetchInfo(cb);\n\n    return {};\n  }\n\n  fetchInfo = async (cb: (params: CallbackParams) => void) => {\n    if (!this.isRunning) {\n      return;\n    }\n    const publicKeyReq = await requestPublicKey();\n    const networkDetailsReq = await requestNetworkDetails();\n\n    if (publicKeyReq.error || networkDetailsReq.error) {\n      cb({\n        address: \"\",\n        network: \"\",\n        networkPassphrase: \"\",\n        error: publicKeyReq.error || networkDetailsReq.error,\n      });\n    }\n\n    if (\n      this.currentAddress !== publicKeyReq.publicKey ||\n      this.currentNetwork !== networkDetailsReq.network ||\n      this.currentNetworkPassphrase !== networkDetailsReq.networkPassphrase\n    ) {\n      this.currentAddress = publicKeyReq.publicKey;\n      this.currentNetwork = networkDetailsReq.network;\n      this.currentNetworkPassphrase = networkDetailsReq.networkPassphrase;\n\n      cb({\n        address: publicKeyReq.publicKey,\n        network: networkDetailsReq.network,\n        networkPassphrase: networkDetailsReq.networkPassphrase,\n      });\n    }\n\n    setTimeout(() => this.fetchInfo(cb), this.timeout);\n  };\n\n  stop() {\n    this.isRunning = false;\n  }\n}\n", "import { getAddress } from \"./getAddress\";\nimport { addToken } from \"./addToken\";\nimport { signTransaction } from \"./signTransaction\";\nimport { signMessage } from \"./signMessage\";\nimport { signAuthEntry } from \"./signAuthEntry\";\nimport { isConnected } from \"./isConnected\";\nimport { getNetwork } from \"./getNetwork\";\nimport { getNetworkDetails } from \"./getNetworkDetails\";\nimport { isAllowed } from \"./isAllowed\";\nimport { setAllowed } from \"./setAllowed\";\nimport { requestAccess } from \"./requestAccess\";\nimport { WatchWalletChanges } from \"./watchWalletChanges\";\n\nexport const isBrowser = typeof window !== \"undefined\";\n\nexport {\n  getAddress,\n  addToken,\n  signTransaction,\n  signMessage,\n  signAuthEntry,\n  isConnected,\n  getNetwork,\n  getNetworkDetails,\n  isAllowed,\n  setAllowed,\n  requestAccess,\n  WatchWalletChanges,\n};\nexport default {\n  getAddress,\n  addToken,\n  signTransaction,\n  signMessage,\n  signAuthEntry,\n  isConnected,\n  getNetwork,\n  getNetworkDetails,\n  isAllowed,\n  setAllowed,\n  requestAccess,\n  WatchWalletChanges,\n};\n", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lobstrExtensionApi\"] = factory();\n\telse\n\t\troot[\"lobstrExtensionApi\"] = factory();\n})(this, () => {\nreturn ", "// The require scope\nvar __webpack_require__ = {};\n\n", "export enum SERVICE_TYPES {\n  LOAD_STATE = \"LOAD_STATE\",\n  LOGIN = \"LOGIN\",\n  LOGOUT = \"LOGOUT\",\n  SIGN_TRANSACTION = \"SIGN_TRANSACTION\",\n  REJECT_TRANSACTION = \"REJECT_TRANSACTION\",\n  GRANT_ACCESS = \"GRANT_ACCESS\",\n  REJECT_ACCESS = \"REJECT_ACCESS\",\n}\n\nexport enum EXTERNAL_SERVICE_TYPES {\n  REQUEST_ACCESS = \"REQUEST_ACCESS\",\n  SIGN_TRANSACTION = \"SUBMIT_TRANSACTION\",\n  REQUEST_CONNECTION_STATUS = \"REQUEST_CONNECTION_STATUS\",\n}\n\nexport enum TX_STATUS {\n  pending = \"pending\",\n  signed = \"signed\",\n  rejected = \"rejected\",\n}\n\nexport const EXTERNAL_MSG_REQUEST = \"LOBSTR_EXTERNAL_MSG_REQUEST\";\nexport const EXTERNAL_MSG_RESPONSE = \"LOBSTR_EXTERNAL_MSG_RESPONSE\";\n\nexport const CONNECTION_KEY = \"LOBSTR_CONNECTION_KEY\";\n\ndeclare const DEV_SERVER: string;\nconst _DEV_SERVER = DEV_SERVER;\nexport { _DEV_SERVER as DEV_SERVER };\n\ndeclare const DEV_EXTENSION: string;\nconst _DEV_EXTENSION = DEV_EXTENSION;\nexport { _DEV_EXTENSION as DEV_EXTENSION };\n", "// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};", "__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))", "// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};", "import browser from \"webextension-polyfill\";\nimport { Response } from \"@shared/constants/types\";\nimport {\n  DEV_SERVER,\n  EXTERNAL_MSG_RESPONSE,\n  EXTERNAL_MSG_REQUEST,\n  EXTERNAL_SERVICE_TYPES,\n  SERVICE_TYPES,\n} from \"../../constants/services\";\n\ninterface Msg {\n  [key: string]: any;\n  type: EXTERNAL_SERVICE_TYPES | SERVICE_TYPES;\n}\n\nexport const sendMessageToContentScript = (msg: Msg): Promise<any> => {\n  /* \n    In the case of multiple calls coming in sequentially, we use this MESSAGE_ID to make sure we're responding to\n    the appropriate message sender. Otherwise, we can run into race conditions where we simply resolve all \n    sent messages with the first thing that comes back.\n  */\n  const MESSAGE_ID = Date.now() + Math.random();\n\n  window.postMessage(\n    { source: EXTERNAL_MSG_REQUEST, messageId: MESSAGE_ID, ...msg },\n    window.location.origin,\n  );\n  return new Promise((resolve) => {\n    let requestTimeout: number | NodeJS.Timeout = 0;\n\n    /*\n      In the case that LOBSTR is not installed at all, any messages to\n      background from @lobstrco/signer-extension-api will hang forever and not respond in any way.\n      This is especially a problem for the isConnected method, because this is\n      likely to be called in a situation where LOBSTR isn't installed.\n      To prevent this, we add a timeout to automatically resolve in the event\n      LOBSTR doesn't respond in a timely fashion to this method.\n    */\n    if (msg.type === EXTERNAL_SERVICE_TYPES.REQUEST_CONNECTION_STATUS) {\n      requestTimeout = setTimeout(() => {\n        resolve({ isConnected: false });\n        window.removeEventListener(\"message\", messageListener);\n      }, 2000);\n    }\n\n    const messageListener = (event: { source: any; data: any }) => {\n      // We only accept messages from ourselves\n      if (event.source !== window) return;\n      // Only respond to messages tagged as being from our content script\n      if (event?.data?.source !== EXTERNAL_MSG_RESPONSE) return;\n      // Only respond to messages that this instance of sendMessageToContentScript sent\n      if (event?.data?.messagedId !== MESSAGE_ID) return;\n\n      resolve(event.data);\n      window.removeEventListener(\"message\", messageListener);\n      clearTimeout(requestTimeout);\n    };\n    window.addEventListener(\"message\", messageListener, false);\n  });\n};\n\nexport const sendMessageToBackground = async (msg: Msg): Promise<Response> => {\n  let res;\n  if (DEV_SERVER) {\n    // treat this as an external call because we're making the call from the browser, not the popup\n    res = await sendMessageToContentScript(msg);\n  } else {\n    res = await browser.runtime.sendMessage(msg);\n  }\n\n  return res;\n};\n", "import { requestPublicKey } from \"@shared/api/external\";\nimport { GetPublicKeyResponse } from \"@shared/constants/types\";\nimport { CONNECTION_KEY } from \"@shared/constants/services\";\nimport { isBrowser } from \".\";\n\nconst saveConnectionKey = (connectionKey: string) => {\n  window?.sessionStorage?.setItem(CONNECTION_KEY, connectionKey);\n};\n\nexport const getPublicKey = async (): Promise<string> => {\n  if (!isBrowser) {\n    return \"\";\n  }\n\n  const { publicKey, connectionKey }: GetPublicKeyResponse =\n    await requestPublicKey();\n\n  saveConnectionKey(connectionKey);\n  return publicKey;\n};\n", "import { GetPublicKeyResponse } from \"@shared/constants/types\";\nimport { EXTERNAL_SERVICE_TYPES } from \"../constants/services\";\nimport { sendMessageToContentScript } from \"./helpers/extensionMessaging\";\n\nexport const requestPublicKey = async (): Promise<GetPublicKeyResponse> => {\n  let response = { publicKey: \"\", error: \"\", connectionKey: \"\" };\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_ACCESS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  const { publicKey, connectionKey, error } = response;\n\n  if (error) {\n    throw error;\n  }\n  return { publicKey, connectionKey };\n};\n\nexport const signTransaction = async (\n  transactionXdr: string,\n  connectionKey: string,\n): Promise<string> => {\n  let response = { signedTransaction: \"\", error: \"\" };\n  try {\n    response = await sendMessageToContentScript({\n      transactionXdr,\n      connectionKey,\n      type: EXTERNAL_SERVICE_TYPES.SIGN_TRANSACTION,\n    });\n  } catch (e) {\n    console.error(e);\n    throw e;\n  }\n  const { signedTransaction, error } = response;\n\n  if (error) {\n    throw error;\n  }\n  return signedTransaction;\n};\n\nexport const requestConnectionStatus = async (): Promise<boolean> => {\n  let response = {\n    isConnected: false,\n  };\n\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_CONNECTION_STATUS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  return response.isConnected;\n};\n", "import { signTransaction as signTransactionService } from \"@shared/api/external\";\nimport { CONNECTION_KEY } from \"@shared/constants/services\";\nimport { isBrowser } from \"./index\";\n\nconst getConnectionKey = () =>\n  window?.sessionStorage?.getItem(CONNECTION_KEY) || \"\";\n\nexport const signTransaction = async (\n  transactionXdr: string,\n): Promise<string> => {\n  if (!isBrowser) {\n    return \"\";\n  }\n\n  const connectionKey = getConnectionKey();\n\n  return await signTransactionService(transactionXdr, connectionKey);\n};\n", "import { requestConnectionStatus } from \"@shared/api/external\";\nimport { isBrowser } from \"./index\";\n\nexport const isConnected = async (): Promise<boolean> => {\n  if (!isBrowser) {\n    return false;\n  }\n\n  if (window.lobstrSignerExtension) {\n    return window.lobstrSignerExtension;\n  }\n\n  return await requestConnectionStatus();\n};\n", "import { getPublicKey } from \"./getPublicKey\";\nimport { signTransaction } from \"./signTransaction\";\nimport { isConnected } from \"./isConnected\";\n\nexport const isBrowser = typeof window !== \"undefined\";\n\nexport { getPublicKey, signTransaction, isConnected };\nexport default {\n  getPublicKey,\n  signTransaction,\n  isConnected,\n};\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"crypto\" has been externalized for browser compatibility. Cannot access \"crypto.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n", "// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n", "\"use strict\";\nexports.__esModule = true;\nexports.integers = void 0;\nexports.integers = ['u8', 'u16', 'u32', 'u64', 'u128', 'i8', 'i16', 'i32', 'i64', 'i128', 'f32', 'f64'];\n", "\"use strict\";\nexports.__esModule = true;\nexports.DecodeBuffer = exports.EncodeBuffer = void 0;\nvar EncodeBuffer = /** @class */ (function () {\n    function EncodeBuffer() {\n        this.offset = 0;\n        this.buffer_size = 256;\n        this.buffer = new ArrayBuffer(this.buffer_size);\n        this.view = new DataView(this.buffer);\n    }\n    EncodeBuffer.prototype.resize_if_necessary = function (needed_space) {\n        if (this.buffer_size - this.offset < needed_space) {\n            this.buffer_size = Math.max(this.buffer_size * 2, this.buffer_size + needed_space);\n            var new_buffer = new ArrayBuffer(this.buffer_size);\n            new Uint8Array(new_buffer).set(new Uint8Array(this.buffer));\n            this.buffer = new_buffer;\n            this.view = new DataView(new_buffer);\n        }\n    };\n    EncodeBuffer.prototype.get_used_buffer = function () {\n        return new Uint8Array(this.buffer).slice(0, this.offset);\n    };\n    EncodeBuffer.prototype.store_value = function (value, type) {\n        var bSize = type.substring(1);\n        var size = parseInt(bSize) / 8;\n        this.resize_if_necessary(size);\n        var toCall = type[0] === 'f' ? \"setFloat\".concat(bSize) : type[0] === 'i' ? \"setInt\".concat(bSize) : \"setUint\".concat(bSize);\n        this.view[toCall](this.offset, value, true);\n        this.offset += size;\n    };\n    EncodeBuffer.prototype.store_bytes = function (from) {\n        this.resize_if_necessary(from.length);\n        new Uint8Array(this.buffer).set(new Uint8Array(from), this.offset);\n        this.offset += from.length;\n    };\n    return EncodeBuffer;\n}());\nexports.EncodeBuffer = EncodeBuffer;\nvar DecodeBuffer = /** @class */ (function () {\n    function DecodeBuffer(buf) {\n        this.offset = 0;\n        this.buffer_size = buf.length;\n        this.buffer = new ArrayBuffer(buf.length);\n        new Uint8Array(this.buffer).set(buf);\n        this.view = new DataView(this.buffer);\n    }\n    DecodeBuffer.prototype.assert_enough_buffer = function (size) {\n        if (this.offset + size > this.buffer.byteLength) {\n            throw new Error('Error in schema, the buffer is smaller than expected');\n        }\n    };\n    DecodeBuffer.prototype.consume_value = function (type) {\n        var bSize = type.substring(1);\n        var size = parseInt(bSize) / 8;\n        this.assert_enough_buffer(size);\n        var toCall = type[0] === 'f' ? \"getFloat\".concat(bSize) : type[0] === 'i' ? \"getInt\".concat(bSize) : \"getUint\".concat(bSize);\n        var ret = this.view[toCall](this.offset, true);\n        this.offset += size;\n        return ret;\n    };\n    DecodeBuffer.prototype.consume_bytes = function (size) {\n        this.assert_enough_buffer(size);\n        var ret = this.buffer.slice(this.offset, this.offset + size);\n        this.offset += size;\n        return ret;\n    };\n    return DecodeBuffer;\n}());\nexports.DecodeBuffer = DecodeBuffer;\n", "\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nexports.validate_schema = exports.ErrorSchema = exports.expect_enum = exports.expect_same_size = exports.expect_bigint = exports.expect_type = exports.isArrayLike = void 0;\nvar types_js_1 = require(\"./types.js\");\nfunction isArrayLike(value) {\n    // source: https://stackoverflow.com/questions/24048547/checking-if-an-object-is-array-like\n    return (Array.isArray(value) ||\n        (!!value &&\n            typeof value === 'object' &&\n            'length' in value &&\n            typeof (value.length) === 'number' &&\n            (value.length === 0 ||\n                (value.length > 0 &&\n                    (value.length - 1) in value))));\n}\nexports.isArrayLike = isArrayLike;\nfunction expect_type(value, type, fieldPath) {\n    if (typeof (value) !== type) {\n        throw new Error(\"Expected \".concat(type, \" not \").concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_type = expect_type;\nfunction expect_bigint(value, fieldPath) {\n    var basicType = ['number', 'string', 'bigint', 'boolean'].includes(typeof (value));\n    var strObject = typeof (value) === 'object' && value !== null && 'toString' in value;\n    if (!basicType && !strObject) {\n        throw new Error(\"Expected bigint, number, boolean or string not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_bigint = expect_bigint;\nfunction expect_same_size(length, expected, fieldPath) {\n    if (length !== expected) {\n        throw new Error(\"Array length \".concat(length, \" does not match schema length \").concat(expected, \" at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_same_size = expect_same_size;\nfunction expect_enum(value, fieldPath) {\n    if (typeof (value) !== 'object' || value === null) {\n        throw new Error(\"Expected object not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_enum = expect_enum;\n// Validate Schema\nvar VALID_STRING_TYPES = types_js_1.integers.concat(['bool', 'string']);\nvar VALID_OBJECT_KEYS = ['option', 'enum', 'array', 'set', 'map', 'struct'];\nvar ErrorSchema = /** @class */ (function (_super) {\n    __extends(ErrorSchema, _super);\n    function ErrorSchema(schema, expected) {\n        var message = \"Invalid schema: \".concat(JSON.stringify(schema), \" expected \").concat(expected);\n        return _super.call(this, message) || this;\n    }\n    return ErrorSchema;\n}(Error));\nexports.ErrorSchema = ErrorSchema;\nfunction validate_schema(schema) {\n    if (typeof (schema) === 'string' && VALID_STRING_TYPES.includes(schema)) {\n        return;\n    }\n    if (schema && typeof (schema) === 'object') {\n        var keys = Object.keys(schema);\n        if (keys.length === 1 && VALID_OBJECT_KEYS.includes(keys[0])) {\n            var key = keys[0];\n            if (key === 'option')\n                return validate_schema(schema[key]);\n            if (key === 'enum')\n                return validate_enum_schema(schema[key]);\n            if (key === 'array')\n                return validate_array_schema(schema[key]);\n            if (key === 'set')\n                return validate_schema(schema[key]);\n            if (key === 'map')\n                return validate_map_schema(schema[key]);\n            if (key === 'struct')\n                return validate_struct_schema(schema[key]);\n        }\n    }\n    throw new ErrorSchema(schema, VALID_OBJECT_KEYS.join(', ') + ' or ' + VALID_STRING_TYPES.join(', '));\n}\nexports.validate_schema = validate_schema;\nfunction validate_enum_schema(schema) {\n    if (!Array.isArray(schema))\n        throw new ErrorSchema(schema, 'Array');\n    for (var _i = 0, schema_1 = schema; _i < schema_1.length; _i++) {\n        var sch = schema_1[_i];\n        if (typeof sch !== 'object' || !('struct' in sch)) {\n            throw new Error('Missing \"struct\" key in enum schema');\n        }\n        if (typeof sch.struct !== 'object' || Object.keys(sch.struct).length !== 1) {\n            throw new Error('The \"struct\" in each enum must have a single key');\n        }\n        validate_schema({ struct: sch.struct });\n    }\n}\nfunction validate_array_schema(schema) {\n    if (typeof schema !== 'object')\n        throw new ErrorSchema(schema, '{ type, len? }');\n    if (schema.len && typeof schema.len !== 'number') {\n        throw new Error(\"Invalid schema: \".concat(schema));\n    }\n    if ('type' in schema)\n        return validate_schema(schema.type);\n    throw new ErrorSchema(schema, '{ type, len? }');\n}\nfunction validate_map_schema(schema) {\n    if (typeof schema === 'object' && 'key' in schema && 'value' in schema) {\n        validate_schema(schema.key);\n        validate_schema(schema.value);\n    }\n    else {\n        throw new ErrorSchema(schema, '{ key, value }');\n    }\n}\nfunction validate_struct_schema(schema) {\n    if (typeof schema !== 'object')\n        throw new ErrorSchema(schema, 'object');\n    for (var key in schema) {\n        validate_schema(schema[key]);\n    }\n}\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nexports.__esModule = true;\nexports.BorshSerializer = void 0;\nvar types_js_1 = require(\"./types.js\");\nvar buffer_js_1 = require(\"./buffer.js\");\nvar utils = __importStar(require(\"./utils.js\"));\nvar BorshSerializer = /** @class */ (function () {\n    function BorshSerializer(checkTypes) {\n        this.encoded = new buffer_js_1.EncodeBuffer();\n        this.fieldPath = ['value'];\n        this.checkTypes = checkTypes;\n    }\n    BorshSerializer.prototype.encode = function (value, schema) {\n        this.encode_value(value, schema);\n        return this.encoded.get_used_buffer();\n    };\n    BorshSerializer.prototype.encode_value = function (value, schema) {\n        if (typeof schema === 'string') {\n            if (types_js_1.integers.includes(schema))\n                return this.encode_integer(value, schema);\n            if (schema === 'string')\n                return this.encode_string(value);\n            if (schema === 'bool')\n                return this.encode_boolean(value);\n        }\n        if (typeof schema === 'object') {\n            if ('option' in schema)\n                return this.encode_option(value, schema);\n            if ('enum' in schema)\n                return this.encode_enum(value, schema);\n            if ('array' in schema)\n                return this.encode_array(value, schema);\n            if ('set' in schema)\n                return this.encode_set(value, schema);\n            if ('map' in schema)\n                return this.encode_map(value, schema);\n            if ('struct' in schema)\n                return this.encode_struct(value, schema);\n        }\n    };\n    BorshSerializer.prototype.encode_integer = function (value, schema) {\n        var size = parseInt(schema.substring(1));\n        if (size <= 32 || schema == 'f64') {\n            this.checkTypes && utils.expect_type(value, 'number', this.fieldPath);\n            this.encoded.store_value(value, schema);\n        }\n        else {\n            this.checkTypes && utils.expect_bigint(value, this.fieldPath);\n            this.encode_bigint(BigInt(value), size);\n        }\n    };\n    BorshSerializer.prototype.encode_bigint = function (value, size) {\n        var buffer_len = size / 8;\n        var buffer = new Uint8Array(buffer_len);\n        for (var i = 0; i < buffer_len; i++) {\n            buffer[i] = Number(value & BigInt(0xff));\n            value = value >> BigInt(8);\n        }\n        this.encoded.store_bytes(new Uint8Array(buffer));\n    };\n    BorshSerializer.prototype.encode_string = function (value) {\n        this.checkTypes && utils.expect_type(value, 'string', this.fieldPath);\n        var _value = value;\n        // encode to utf8 bytes without using TextEncoder\n        var utf8Bytes = [];\n        for (var i = 0; i < _value.length; i++) {\n            var charCode = _value.charCodeAt(i);\n            if (charCode < 0x80) {\n                utf8Bytes.push(charCode);\n            }\n            else if (charCode < 0x800) {\n                utf8Bytes.push(0xc0 | (charCode >> 6), 0x80 | (charCode & 0x3f));\n            }\n            else if (charCode < 0xd800 || charCode >= 0xe000) {\n                utf8Bytes.push(0xe0 | (charCode >> 12), 0x80 | ((charCode >> 6) & 0x3f), 0x80 | (charCode & 0x3f));\n            }\n            else {\n                i++;\n                charCode = 0x10000 + (((charCode & 0x3ff) << 10) | (_value.charCodeAt(i) & 0x3ff));\n                utf8Bytes.push(0xf0 | (charCode >> 18), 0x80 | ((charCode >> 12) & 0x3f), 0x80 | ((charCode >> 6) & 0x3f), 0x80 | (charCode & 0x3f));\n            }\n        }\n        // 4 bytes for length + string bytes\n        this.encoded.store_value(utf8Bytes.length, 'u32');\n        this.encoded.store_bytes(new Uint8Array(utf8Bytes));\n    };\n    BorshSerializer.prototype.encode_boolean = function (value) {\n        this.checkTypes && utils.expect_type(value, 'boolean', this.fieldPath);\n        this.encoded.store_value(value ? 1 : 0, 'u8');\n    };\n    BorshSerializer.prototype.encode_option = function (value, schema) {\n        if (value === null || value === undefined) {\n            this.encoded.store_value(0, 'u8');\n        }\n        else {\n            this.encoded.store_value(1, 'u8');\n            this.encode_value(value, schema.option);\n        }\n    };\n    BorshSerializer.prototype.encode_enum = function (value, schema) {\n        this.checkTypes && utils.expect_enum(value, this.fieldPath);\n        var valueKey = Object.keys(value)[0];\n        for (var i = 0; i < schema[\"enum\"].length; i++) {\n            var valueSchema = schema[\"enum\"][i];\n            if (valueKey === Object.keys(valueSchema.struct)[0]) {\n                this.encoded.store_value(i, 'u8');\n                return this.encode_struct(value, valueSchema);\n            }\n        }\n        throw new Error(\"Enum key (\".concat(valueKey, \") not found in enum schema: \").concat(JSON.stringify(schema), \" at \").concat(this.fieldPath.join('.')));\n    };\n    BorshSerializer.prototype.encode_array = function (value, schema) {\n        if (utils.isArrayLike(value))\n            return this.encode_arraylike(value, schema);\n        if (value instanceof ArrayBuffer)\n            return this.encode_buffer(value, schema);\n        throw new Error(\"Expected Array-like not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(this.fieldPath.join('.')));\n    };\n    BorshSerializer.prototype.encode_arraylike = function (value, schema) {\n        if (schema.array.len) {\n            utils.expect_same_size(value.length, schema.array.len, this.fieldPath);\n        }\n        else {\n            // 4 bytes for length\n            this.encoded.store_value(value.length, 'u32');\n        }\n        // array values\n        for (var i = 0; i < value.length; i++) {\n            this.encode_value(value[i], schema.array.type);\n        }\n    };\n    BorshSerializer.prototype.encode_buffer = function (value, schema) {\n        if (schema.array.len) {\n            utils.expect_same_size(value.byteLength, schema.array.len, this.fieldPath);\n        }\n        else {\n            // 4 bytes for length\n            this.encoded.store_value(value.byteLength, 'u32');\n        }\n        // array values\n        this.encoded.store_bytes(new Uint8Array(value));\n    };\n    BorshSerializer.prototype.encode_set = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        var isSet = value instanceof Set;\n        var values = isSet ? Array.from(value.values()) : Object.values(value);\n        // 4 bytes for length\n        this.encoded.store_value(values.length, 'u32');\n        // set values\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n            var value_1 = values_1[_i];\n            this.encode_value(value_1, schema.set);\n        }\n    };\n    BorshSerializer.prototype.encode_map = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        var isMap = value instanceof Map;\n        var keys = isMap ? Array.from(value.keys()) : Object.keys(value);\n        // 4 bytes for length\n        this.encoded.store_value(keys.length, 'u32');\n        // store key/values\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            this.encode_value(key, schema.map.key);\n            this.encode_value(isMap ? value.get(key) : value[key], schema.map.value);\n        }\n    };\n    BorshSerializer.prototype.encode_struct = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        for (var _i = 0, _a = Object.keys(schema.struct); _i < _a.length; _i++) {\n            var key = _a[_i];\n            this.fieldPath.push(key);\n            this.encode_value(value[key], schema.struct[key]);\n            this.fieldPath.pop();\n        }\n    };\n    return BorshSerializer;\n}());\nexports.BorshSerializer = BorshSerializer;\n", "\"use strict\";\nexports.__esModule = true;\nexports.BorshDeserializer = void 0;\nvar types_js_1 = require(\"./types.js\");\nvar buffer_js_1 = require(\"./buffer.js\");\nvar BorshDeserializer = /** @class */ (function () {\n    function BorshDeserializer(bufferArray) {\n        this.buffer = new buffer_js_1.DecodeBuffer(bufferArray);\n    }\n    BorshDeserializer.prototype.decode = function (schema) {\n        return this.decode_value(schema);\n    };\n    BorshDeserializer.prototype.decode_value = function (schema) {\n        if (typeof schema === 'string') {\n            if (types_js_1.integers.includes(schema))\n                return this.decode_integer(schema);\n            if (schema === 'string')\n                return this.decode_string();\n            if (schema === 'bool')\n                return this.decode_boolean();\n        }\n        if (typeof schema === 'object') {\n            if ('option' in schema)\n                return this.decode_option(schema);\n            if ('enum' in schema)\n                return this.decode_enum(schema);\n            if ('array' in schema)\n                return this.decode_array(schema);\n            if ('set' in schema)\n                return this.decode_set(schema);\n            if ('map' in schema)\n                return this.decode_map(schema);\n            if ('struct' in schema)\n                return this.decode_struct(schema);\n        }\n        throw new Error(\"Unsupported type: \".concat(schema));\n    };\n    BorshDeserializer.prototype.decode_integer = function (schema) {\n        var size = parseInt(schema.substring(1));\n        if (size <= 32 || schema == 'f64') {\n            return this.buffer.consume_value(schema);\n        }\n        return this.decode_bigint(size, schema.startsWith('i'));\n    };\n    BorshDeserializer.prototype.decode_bigint = function (size, signed) {\n        if (signed === void 0) { signed = false; }\n        var buffer_len = size / 8;\n        var buffer = new Uint8Array(this.buffer.consume_bytes(buffer_len));\n        var bits = buffer.reduceRight(function (r, x) { return r + x.toString(16).padStart(2, '0'); }, '');\n        if (signed && buffer[buffer_len - 1]) {\n            return BigInt.asIntN(size, BigInt(\"0x\".concat(bits)));\n        }\n        return BigInt(\"0x\".concat(bits));\n    };\n    BorshDeserializer.prototype.decode_string = function () {\n        var len = this.decode_integer('u32');\n        var buffer = new Uint8Array(this.buffer.consume_bytes(len));\n        // decode utf-8 string without using TextDecoder\n        // first get all bytes to single byte code points\n        var codePoints = [];\n        for (var i = 0; i < len; ++i) {\n            var byte = buffer[i];\n            if (byte < 0x80) {\n                codePoints.push(byte);\n            }\n            else if (byte < 0xE0) {\n                codePoints.push(((byte & 0x1F) << 6) | (buffer[++i] & 0x3F));\n            }\n            else if (byte < 0xF0) {\n                codePoints.push(((byte & 0x0F) << 12) | ((buffer[++i] & 0x3F) << 6) | (buffer[++i] & 0x3F));\n            }\n            else {\n                var codePoint = ((byte & 0x07) << 18) | ((buffer[++i] & 0x3F) << 12) | ((buffer[++i] & 0x3F) << 6) | (buffer[++i] & 0x3F);\n                codePoints.push(codePoint);\n            }\n        }\n        // then decode code points to utf-8\n        return String.fromCodePoint.apply(String, codePoints);\n    };\n    BorshDeserializer.prototype.decode_boolean = function () {\n        return this.buffer.consume_value('u8') > 0;\n    };\n    BorshDeserializer.prototype.decode_option = function (schema) {\n        var option = this.buffer.consume_value('u8');\n        if (option === 1) {\n            return this.decode_value(schema.option);\n        }\n        if (option !== 0) {\n            throw new Error(\"Invalid option \".concat(option));\n        }\n        return null;\n    };\n    BorshDeserializer.prototype.decode_enum = function (schema) {\n        var _a;\n        var valueIndex = this.buffer.consume_value('u8');\n        if (valueIndex > schema[\"enum\"].length) {\n            throw new Error(\"Enum option \".concat(valueIndex, \" is not available\"));\n        }\n        var struct = schema[\"enum\"][valueIndex].struct;\n        var key = Object.keys(struct)[0];\n        return _a = {}, _a[key] = this.decode_value(struct[key]), _a;\n    };\n    BorshDeserializer.prototype.decode_array = function (schema) {\n        var result = [];\n        var len = schema.array.len ? schema.array.len : this.decode_integer('u32');\n        for (var i = 0; i < len; ++i) {\n            result.push(this.decode_value(schema.array.type));\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_set = function (schema) {\n        var len = this.decode_integer('u32');\n        var result = new Set();\n        for (var i = 0; i < len; ++i) {\n            result.add(this.decode_value(schema.set));\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_map = function (schema) {\n        var len = this.decode_integer('u32');\n        var result = new Map();\n        for (var i = 0; i < len; ++i) {\n            var key = this.decode_value(schema.map.key);\n            var value = this.decode_value(schema.map.value);\n            result.set(key, value);\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_struct = function (schema) {\n        var result = {};\n        for (var key in schema.struct) {\n            result[key] = this.decode_value(schema.struct[key]);\n        }\n        return result;\n    };\n    return BorshDeserializer;\n}());\nexports.BorshDeserializer = BorshDeserializer;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nexports.__esModule = true;\nexports.deserialize = exports.serialize = void 0;\nvar serialize_js_1 = require(\"./serialize.js\");\nvar deserialize_js_1 = require(\"./deserialize.js\");\nvar utils = __importStar(require(\"./utils.js\"));\nfunction serialize(schema, value, validate) {\n    if (validate === void 0) { validate = true; }\n    if (validate)\n        utils.validate_schema(schema);\n    var serializer = new serialize_js_1.BorshSerializer(validate);\n    return serializer.encode(value, schema);\n}\nexports.serialize = serialize;\nfunction deserialize(schema, buffer, validate) {\n    if (validate === void 0) { validate = true; }\n    if (validate)\n        utils.validate_schema(schema);\n    var deserializer = new deserialize_js_1.BorshDeserializer(buffer);\n    return deserializer.decode(schema);\n}\nexports.deserialize = deserialize;\n", "/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.11.1\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2025\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA256_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node && process.type != 'renderer';\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var K = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n  ];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (is224) {\n    var method = createOutputMethod('hex', is224);\n    if (NODE_JS) {\n      method = nodeWrap(method, is224);\n    }\n    method.create = function () {\n      return new Sha256(is224);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = require('crypto')\n    var Buffer = require('buffer').Buffer;\n    var algorithm = is224 ? 'sha224' : 'sha256';\n    var bufferFrom;\n    if (Buffer.from && !root.JS_SHA256_NO_BUFFER_FROM) {\n      bufferFrom = Buffer.from;\n    } else {\n      bufferFrom = function (message) {\n        return new Buffer(message);\n      };\n    }\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash(algorithm).update(bufferFrom(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod('hex', is224);\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else { // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        this.block = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n          blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n          blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >>> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >>> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >>> 2] |= (0xc0 | (code >>> 6)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >>> 2] |= (0xe0 | (code >>> 12)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | ((code >>> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >>> 2] |= (0xf0 | (code >>> 18)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | ((code >>> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | ((code >>> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >>> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >>> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n      t1 = blocks[j - 2];\n      s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n        this.first = false;\n      } else {\n        s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\n        s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\n        ab = a & b;\n        maj = ab ^ (a & c) ^ bc;\n        ch = (e & f) ^ (~e & g);\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n      s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));\n      s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));\n      da = d & a;\n      maj = da ^ (d & b) ^ ab;\n      ch = (h & e) ^ (~h & f);\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));\n      s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));\n      cd = c & d;\n      maj = cd ^ (c & a) ^ da;\n      ch = (g & h) ^ (~g & e);\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));\n      s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));\n      bc = b & c;\n      maj = bc ^ (b & d) ^ cd;\n      ch = (f & g) ^ (~f & h);\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n      this.chromeBugWorkAround = true;\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  };\n\n  Sha256.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var hex = HEX_CHARS[(h0 >>> 28) & 0x0F] + HEX_CHARS[(h0 >>> 24) & 0x0F] +\n      HEX_CHARS[(h0 >>> 20) & 0x0F] + HEX_CHARS[(h0 >>> 16) & 0x0F] +\n      HEX_CHARS[(h0 >>> 12) & 0x0F] + HEX_CHARS[(h0 >>> 8) & 0x0F] +\n      HEX_CHARS[(h0 >>> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h1 >>> 28) & 0x0F] + HEX_CHARS[(h1 >>> 24) & 0x0F] +\n      HEX_CHARS[(h1 >>> 20) & 0x0F] + HEX_CHARS[(h1 >>> 16) & 0x0F] +\n      HEX_CHARS[(h1 >>> 12) & 0x0F] + HEX_CHARS[(h1 >>> 8) & 0x0F] +\n      HEX_CHARS[(h1 >>> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h2 >>> 28) & 0x0F] + HEX_CHARS[(h2 >>> 24) & 0x0F] +\n      HEX_CHARS[(h2 >>> 20) & 0x0F] + HEX_CHARS[(h2 >>> 16) & 0x0F] +\n      HEX_CHARS[(h2 >>> 12) & 0x0F] + HEX_CHARS[(h2 >>> 8) & 0x0F] +\n      HEX_CHARS[(h2 >>> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h3 >>> 28) & 0x0F] + HEX_CHARS[(h3 >>> 24) & 0x0F] +\n      HEX_CHARS[(h3 >>> 20) & 0x0F] + HEX_CHARS[(h3 >>> 16) & 0x0F] +\n      HEX_CHARS[(h3 >>> 12) & 0x0F] + HEX_CHARS[(h3 >>> 8) & 0x0F] +\n      HEX_CHARS[(h3 >>> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h4 >>> 28) & 0x0F] + HEX_CHARS[(h4 >>> 24) & 0x0F] +\n      HEX_CHARS[(h4 >>> 20) & 0x0F] + HEX_CHARS[(h4 >>> 16) & 0x0F] +\n      HEX_CHARS[(h4 >>> 12) & 0x0F] + HEX_CHARS[(h4 >>> 8) & 0x0F] +\n      HEX_CHARS[(h4 >>> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F] +\n      HEX_CHARS[(h5 >>> 28) & 0x0F] + HEX_CHARS[(h5 >>> 24) & 0x0F] +\n      HEX_CHARS[(h5 >>> 20) & 0x0F] + HEX_CHARS[(h5 >>> 16) & 0x0F] +\n      HEX_CHARS[(h5 >>> 12) & 0x0F] + HEX_CHARS[(h5 >>> 8) & 0x0F] +\n      HEX_CHARS[(h5 >>> 4) & 0x0F] + HEX_CHARS[h5 & 0x0F] +\n      HEX_CHARS[(h6 >>> 28) & 0x0F] + HEX_CHARS[(h6 >>> 24) & 0x0F] +\n      HEX_CHARS[(h6 >>> 20) & 0x0F] + HEX_CHARS[(h6 >>> 16) & 0x0F] +\n      HEX_CHARS[(h6 >>> 12) & 0x0F] + HEX_CHARS[(h6 >>> 8) & 0x0F] +\n      HEX_CHARS[(h6 >>> 4) & 0x0F] + HEX_CHARS[h6 & 0x0F];\n    if (!this.is224) {\n      hex += HEX_CHARS[(h7 >>> 28) & 0x0F] + HEX_CHARS[(h7 >>> 24) & 0x0F] +\n        HEX_CHARS[(h7 >>> 20) & 0x0F] + HEX_CHARS[(h7 >>> 16) & 0x0F] +\n        HEX_CHARS[(h7 >>> 12) & 0x0F] + HEX_CHARS[(h7 >>> 8) & 0x0F] +\n        HEX_CHARS[(h7 >>> 4) & 0x0F] + HEX_CHARS[h7 & 0x0F];\n    }\n    return hex;\n  };\n\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var arr = [\n      (h0 >>> 24) & 0xFF, (h0 >>> 16) & 0xFF, (h0 >>> 8) & 0xFF, h0 & 0xFF,\n      (h1 >>> 24) & 0xFF, (h1 >>> 16) & 0xFF, (h1 >>> 8) & 0xFF, h1 & 0xFF,\n      (h2 >>> 24) & 0xFF, (h2 >>> 16) & 0xFF, (h2 >>> 8) & 0xFF, h2 & 0xFF,\n      (h3 >>> 24) & 0xFF, (h3 >>> 16) & 0xFF, (h3 >>> 8) & 0xFF, h3 & 0xFF,\n      (h4 >>> 24) & 0xFF, (h4 >>> 16) & 0xFF, (h4 >>> 8) & 0xFF, h4 & 0xFF,\n      (h5 >>> 24) & 0xFF, (h5 >>> 16) & 0xFF, (h5 >>> 8) & 0xFF, h5 & 0xFF,\n      (h6 >>> 24) & 0xFF, (h6 >>> 16) & 0xFF, (h6 >>> 8) & 0xFF, h6 & 0xFF\n    ];\n    if (!this.is224) {\n      arr.push((h7 >>> 24) & 0xFF, (h7 >>> 16) & 0xFF, (h7 >>> 8) & 0xFF, h7 & 0xFF);\n    }\n    return arr;\n  };\n\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n    if (!this.is224) {\n      dataView.setUint32(28, this.h7);\n    }\n    return buffer;\n  };\n\n  function HmacSha256(key, is224, sharedMemory) {\n    var i, type = typeof key;\n    if (type === 'string') {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >>> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >>> 12));\n          bytes[index++] = (0x80 | ((code >>> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >>> 18));\n          bytes[index++] = (0x80 | ((code >>> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >>> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    } else {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n    }\n\n    if (key.length > 64) {\n      key = (new Sha256(is224, true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha256.call(this, is224, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n    root.sha224 = exports.sha224;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeySize = exports.KeyType = void 0;\n/** All supported key types */\nvar KeyType;\n(function (KeyType) {\n    KeyType[KeyType[\"ED25519\"] = 0] = \"ED25519\";\n    KeyType[KeyType[\"SECP256K1\"] = 1] = \"SECP256K1\";\n})(KeyType || (exports.KeyType = KeyType = {}));\nexports.KeySize = {\n    SECRET_KEY: 32,\n    ED25519_PUBLIC_KEY: 32,\n    SECP256k1_PUBLIC_KEY: 64,\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyPairBase = void 0;\nclass KeyPairBase {\n}\nexports.KeyPairBase = KeyPairBase;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_FUNCTION_CALL_GAS = void 0;\n// Default amount of gas to be sent with the function calls. Used to pay for the fees\n// incurred while running the contract execution. The unused amount will be refunded back to\n// the originator.\n// Due to protocol changes that charge upfront for the maximum possible gas price inflation due to\n// full blocks, the price of max_prepaid_gas is decreased to `300 * 10**12`.\n// For discussion see https://github.com/nearprotocol/NEPs/issues/67\nexports.DEFAULT_FUNCTION_CALL_GAS = 30000000000000n;\n", "{\n    \"GasLimitExceeded\": \"Exceeded the maximum amount of gas allowed to burn per contract\",\n    \"MethodEmptyName\": \"Method name is empty\",\n    \"WasmerCompileError\": \"Wasmer compilation error: {{msg}}\",\n    \"GuestPanic\": \"Smart contract panicked: {{panic_msg}}\",\n    \"Memory\": \"Error creating Wasm memory\",\n    \"GasExceeded\": \"Exceeded the prepaid gas\",\n    \"MethodUTF8Error\": \"Method name is not valid UTF8 string\",\n    \"BadUTF16\": \"String encoding is bad UTF-16 sequence\",\n    \"WasmTrap\": \"WebAssembly trap: {{msg}}\",\n    \"GasInstrumentation\": \"Gas instrumentation failed or contract has denied instructions.\",\n    \"InvalidPromiseIndex\": \"{{promise_idx}} does not correspond to existing promises\",\n    \"InvalidPromiseResultIndex\": \"Accessed invalid promise result index: {{result_idx}}\",\n    \"Deserialization\": \"Error happened while deserializing the module\",\n    \"MethodNotFound\": \"Contract method is not found\",\n    \"InvalidRegisterId\": \"Accessed invalid register id: {{register_id}}\",\n    \"InvalidReceiptIndex\": \"VM Logic returned an invalid receipt index: {{receipt_index}}\",\n    \"EmptyMethodName\": \"Method name is empty in contract call\",\n    \"CannotReturnJointPromise\": \"Returning joint promise is currently prohibited\",\n    \"StackHeightInstrumentation\": \"Stack instrumentation failed\",\n    \"CodeDoesNotExist\": \"Cannot find contract code for account {{account_id}}\",\n    \"MethodInvalidSignature\": \"Invalid method signature\",\n    \"IntegerOverflow\": \"Integer overflow happened during contract execution\",\n    \"MemoryAccessViolation\": \"MemoryAccessViolation\",\n    \"InvalidIteratorIndex\": \"Iterator index {{iterator_index}} does not exist\",\n    \"IteratorWasInvalidated\": \"Iterator {{iterator_index}} was invalidated after its creation by performing a mutable operation on trie\",\n    \"InvalidAccountId\": \"VM Logic returned an invalid account id\",\n    \"Serialization\": \"Error happened while serializing the module\",\n    \"CannotAppendActionToJointPromise\": \"Actions can only be appended to non-joint promise.\",\n    \"InternalMemoryDeclared\": \"Internal memory declaration has been found in the module\",\n    \"Instantiate\": \"Error happened during instantiation\",\n    \"ProhibitedInView\": \"{{method_name}} is not allowed in view calls\",\n    \"InvalidMethodName\": \"VM Logic returned an invalid method name\",\n    \"BadUTF8\": \"String encoding is bad UTF-8 sequence\",\n    \"BalanceExceeded\": \"Exceeded the account balance\",\n    \"LinkError\": \"Wasm contract link error: {{msg}}\",\n    \"InvalidPublicKey\": \"VM Logic provided an invalid public key\",\n    \"ActorNoPermission\": \"Actor {{actor_id}} doesn't have permission to account {{account_id}} to complete the action\",\n    \"LackBalanceForState\": \"The account {{account_id}} wouldn't have enough balance to cover storage, required to have {{amount}} yoctoNEAR more\",\n    \"ReceiverMismatch\": \"Wrong AccessKey used for transaction: transaction is sent to receiver_id={{tx_receiver}}, but is signed with function call access key that restricted to only use with receiver_id={{ak_receiver}}. Either change receiver_id in your transaction or switch to use a FullAccessKey.\",\n    \"CostOverflow\": \"Transaction gas or balance cost is too high\",\n    \"InvalidSignature\": \"Transaction is not signed with the given public key\",\n    \"AccessKeyNotFound\": \"Signer \\\"{{account_id}}\\\" doesn't have access key with the given public_key {{public_key}}\",\n    \"NotEnoughBalance\": \"Sender {{signer_id}} does not have enough balance {{#formatNear}}{{balance}}{{/formatNear}} for operation costing {{#formatNear}}{{cost}}{{/formatNear}}\",\n    \"NotEnoughAllowance\": \"Access Key {account_id}:{public_key} does not have enough balance {{#formatNear}}{{allowance}}{{/formatNear}} for transaction costing {{#formatNear}}{{cost}}{{/formatNear}}\",\n    \"Expired\": \"Transaction has expired\",\n    \"DeleteAccountStaking\": \"Account {{account_id}} is staking and can not be deleted\",\n    \"SignerDoesNotExist\": \"Signer {{signer_id}} does not exist\",\n    \"TriesToStake\": \"Account {{account_id}} tried to stake {{#formatNear}}{{stake}}{{/formatNear}}, but has staked {{#formatNear}}{{locked}}{{/formatNear}} and only has {{#formatNear}}{{balance}}{{/formatNear}}\",\n    \"AddKeyAlreadyExists\": \"The public key {{public_key}} is already used for an existing access key\",\n    \"InvalidSigner\": \"Invalid signer account ID {{signer_id}} according to requirements\",\n    \"CreateAccountNotAllowed\": \"The new account_id {{account_id}} can't be created by {{predecessor_id}}\",\n    \"RequiresFullAccess\": \"The transaction contains more then one action, but it was signed with an access key which allows transaction to apply only one specific action. To apply more then one actions TX must be signed with a full access key\",\n    \"TriesToUnstake\": \"Account {{account_id}} is not yet staked, but tried to unstake\",\n    \"InvalidNonce\": \"Transaction nonce {{tx_nonce}} must be larger than nonce of the used access key {{ak_nonce}}\",\n    \"AccountAlreadyExists\": \"Can't create a new account {{account_id}}, because it already exists\",\n    \"InvalidChain\": \"Transaction parent block hash doesn't belong to the current chain\",\n    \"AccountDoesNotExist\": \"Can't complete the action because account {{account_id}} doesn't exist\",\n    \"AccessKeyDoesNotExist\": \"Can't complete the action because access key {{public_key}} doesn't exist\",\n    \"MethodNameMismatch\": \"Transaction method name {{method_name}} isn't allowed by the access key\",\n    \"DeleteAccountHasRent\": \"Account {{account_id}} can't be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover the rent\",\n    \"DeleteAccountHasEnoughBalance\": \"Account {{account_id}} can't be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover it's storage\",\n    \"InvalidReceiver\": \"Invalid receiver account ID {{receiver_id}} according to requirements\",\n    \"DeleteKeyDoesNotExist\": \"Account {{account_id}} tries to remove an access key that doesn't exist\",\n    \"Timeout\": \"Timeout exceeded\",\n    \"Closed\": \"Connection closed\",\n    \"ShardCongested\": \"Shard {{shard_id}} rejected the transaction due to congestion level {{congestion_level}}, try again later\",\n    \"ShardStuck\": \"Shard {{shard_id}} rejected the transaction because it missed {{missed_chunks}} chunks and needs to recover before accepting new transactions, try again later\"\n}\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrorMessages = void 0;\nconst error_messages_json_1 = __importDefault(require(\"./error_messages.json\"));\nexports.ErrorMessages = error_messages_json_1.default;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Assignable = void 0;\n/* DEPRECATED - backward compatibility only */\nclass Assignable {\n    constructor(properties) {\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n        });\n    }\n}\nexports.Assignable = Assignable;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Enum = void 0;\n// TODO determine why subclassing is still necessary even though `enum`\n//  cannot be set in the base class or it will not be borsh-serializable\nclass Enum {\n    constructor(properties) {\n        if (Object.keys(properties).length !== 1) {\n            throw new Error('Enum can only take single value');\n        }\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n        });\n    }\n}\nexports.Enum = Enum;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrorContext = exports.TypedError = exports.ArgumentTypeError = exports.PositionalArgsError = void 0;\nclass PositionalArgsError extends Error {\n    constructor() {\n        super('Contract method calls expect named arguments wrapped in object, e.g. { argName1: argValue1, argName2: argValue2 }');\n    }\n}\nexports.PositionalArgsError = PositionalArgsError;\nclass ArgumentTypeError extends Error {\n    constructor(argName, argType, argValue) {\n        super(`Expected ${argType} for '${argName}' argument, but got '${JSON.stringify(argValue)}'`);\n    }\n}\nexports.ArgumentTypeError = ArgumentTypeError;\nclass TypedError extends Error {\n    type;\n    context;\n    constructor(message, type, context) {\n        super(message);\n        this.type = type || 'UntypedError';\n        this.context = context;\n    }\n}\nexports.TypedError = TypedError;\nclass ErrorContext {\n    transactionHash;\n    constructor(transactionHash) {\n        this.transactionHash = transactionHash;\n    }\n}\nexports.ErrorContext = ErrorContext;\n", "\"use strict\";\n/**\n * NEAR RPC API request types and responses\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IdType = void 0;\nvar IdType;\n(function (IdType) {\n    IdType[\"Transaction\"] = \"transaction\";\n    IdType[\"Receipt\"] = \"receipt\";\n})(IdType || (exports.IdType = IdType = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FinalExecutionStatusBasic = exports.ExecutionStatusBasic = void 0;\nvar ExecutionStatusBasic;\n(function (ExecutionStatusBasic) {\n    ExecutionStatusBasic[\"Unknown\"] = \"Unknown\";\n    ExecutionStatusBasic[\"Pending\"] = \"Pending\";\n    ExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(ExecutionStatusBasic || (exports.ExecutionStatusBasic = ExecutionStatusBasic = {}));\nvar FinalExecutionStatusBasic;\n(function (FinalExecutionStatusBasic) {\n    FinalExecutionStatusBasic[\"NotStarted\"] = \"NotStarted\";\n    FinalExecutionStatusBasic[\"Started\"] = \"Started\";\n    FinalExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(FinalExecutionStatusBasic || (exports.FinalExecutionStatusBasic = FinalExecutionStatusBasic = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FinalExecutionStatusBasic = exports.ExecutionStatusBasic = exports.IdType = void 0;\nvar light_client_1 = require(\"./light_client.cjs\");\nObject.defineProperty(exports, \"IdType\", { enumerable: true, get: function () { return light_client_1.IdType; } });\nvar response_1 = require(\"./response.cjs\");\nObject.defineProperty(exports, \"ExecutionStatusBasic\", { enumerable: true, get: function () { return response_1.ExecutionStatusBasic; } });\nObject.defineProperty(exports, \"FinalExecutionStatusBasic\", { enumerable: true, get: function () { return response_1.FinalExecutionStatusBasic; } });\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./assignable.cjs\"), exports);\n__exportStar(require(\"./enum.cjs\"), exports);\n__exportStar(require(\"./errors.cjs\"), exports);\n__exportStar(require(\"./provider/index.cjs\"), exports);\n", "// This file has been generated from mustache.mjs\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.Mustache = factory());\n}(this, (function () { 'use strict';\n\n  /*!\n   * mustache.js - Logic-less {{mustache}} templates with JavaScript\n   * http://github.com/janl/mustache.js\n   */\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  /**\n   * Safe way of detecting whether or not the given thing is a primitive and\n   * whether it has the given property\n   */\n  function primitiveHasOwnProperty (primitive, propName) {\n    return (\n      primitive != null\n      && typeof primitive !== 'object'\n      && primitive.hasOwnProperty\n      && primitive.hasOwnProperty(propName)\n    );\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   *\n   * Tokens for partials also contain two more elements: 1) a string value of\n   * indendation prior to that tag and 2) the index of that tag on that line -\n   * eg a value of 2 indicates the partial is the third tag on this line.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n    var lineHasNonSpace = false;\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n    var indentation = '';  // Tracks indentation for tags that use it\n    var tagIndex = 0;      // Stores a count of number of tags encountered on a line\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n            indentation += chr;\n          } else {\n            nonSpace = true;\n            lineHasNonSpace = true;\n            indentation += ' ';\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n') {\n            stripSpace();\n            indentation = '';\n            tagIndex = 0;\n            lineHasNonSpace = false;\n          }\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      if (type == '>') {\n        token = [ type, value, start, scanner.pos, indentation, tagIndex, lineHasNonSpace ];\n      } else {\n        token = [ type, value, start, scanner.pos ];\n      }\n      tagIndex++;\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    stripSpace();\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, intermediateValue, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          intermediateValue = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           *\n           * In the case where dot notation is used, we consider the lookup\n           * to be successful even if the last \"object\" in the path is\n           * not actually an object but a primitive (e.g., a string, or an\n           * integer), because it is sometimes useful to access a property\n           * of an autoboxed primitive, such as the length of a string.\n           **/\n          while (intermediateValue != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = (\n                hasProperty(intermediateValue, names[index])\n                || primitiveHasOwnProperty(intermediateValue, names[index])\n              );\n\n            intermediateValue = intermediateValue[names[index++]];\n          }\n        } else {\n          intermediateValue = context.view[name];\n\n          /**\n           * Only checking against `hasProperty`, which always returns `false` if\n           * `context.view` is not an object. Deliberately omitting the check\n           * against `primitiveHasOwnProperty` if dot notation is not used.\n           *\n           * Consider this example:\n           * ```\n           * Mustache.render(\"The length of a football field is {{#length}}{{length}}{{/length}}.\", {length: \"100 yards\"})\n           * ```\n           *\n           * If we were to check also against `primitiveHasOwnProperty`, as we do\n           * in the dot notation case, then render call would return:\n           *\n           * \"The length of a football field is 9.\"\n           *\n           * rather than the expected:\n           *\n           * \"The length of a football field is 100 yards.\"\n           **/\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit) {\n          value = intermediateValue;\n          break;\n        }\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.templateCache = {\n      _cache: {},\n      set: function set (key, value) {\n        this._cache[key] = value;\n      },\n      get: function get (key) {\n        return this._cache[key];\n      },\n      clear: function clear () {\n        this._cache = {};\n      }\n    };\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    if (typeof this.templateCache !== 'undefined') {\n      this.templateCache.clear();\n    }\n  };\n\n  /**\n   * Parses and caches the given `template` according to the given `tags` or\n   * `mustache.tags` if `tags` is omitted,  and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.templateCache;\n    var cacheKey = template + ':' + (tags || mustache.tags).join(':');\n    var isCacheEnabled = typeof cache !== 'undefined';\n    var tokens = isCacheEnabled ? cache.get(cacheKey) : undefined;\n\n    if (tokens == undefined) {\n      tokens = parseTemplate(template, tags);\n      isCacheEnabled && cache.set(cacheKey, tokens);\n    }\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   *\n   * If the optional `tags` argument is given here it must be an array with two\n   * string values: the opening and closing tags used in the template (e.g.\n   * [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n   */\n  Writer.prototype.render = function render (template, view, partials, tags) {\n    var tokens = this.parse(template, tags);\n    var context = (view instanceof Context) ? view : new Context(view, undefined);\n    return this.renderTokens(tokens, context, partials, template, tags);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate, tags) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, tags);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.indentPartial = function indentPartial (partial, indentation, lineHasNonSpace) {\n    var filteredIndentation = indentation.replace(/[^ \\t]/g, '');\n    var partialByNl = partial.split('\\n');\n    for (var i = 0; i < partialByNl.length; i++) {\n      if (partialByNl[i].length && (i > 0 || !lineHasNonSpace)) {\n        partialByNl[i] = filteredIndentation + partialByNl[i];\n      }\n    }\n    return partialByNl.join('\\n');\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials, tags) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null) {\n      var lineHasNonSpace = token[6];\n      var tagIndex = token[5];\n      var indentation = token[4];\n      var indentedValue = value;\n      if (tagIndex == 0 && indentation) {\n        indentedValue = this.indentPartial(value, indentation, lineHasNonSpace);\n      }\n      return this.renderTokens(this.parse(indentedValue, tags), context, partials, indentedValue);\n    }\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  var mustache = {\n    name: 'mustache.js',\n    version: '4.0.0',\n    tags: [ '{{', '}}' ],\n    clearCache: undefined,\n    escape: undefined,\n    parse: undefined,\n    render: undefined,\n    Scanner: undefined,\n    Context: undefined,\n    Writer: undefined,\n    /**\n     * Allows a user to override the default caching strategy, by providing an\n     * object with set, get and clear methods. This can also be used to disable\n     * the cache by setting it to the literal `undefined`.\n     */\n    set templateCache (cache) {\n      defaultWriter.templateCache = cache;\n    },\n    /**\n     * Gets the default or overridden caching object from the default writer.\n     */\n    get templateCache () {\n      return defaultWriter.templateCache;\n    }\n  };\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer. If the optional `tags` argument is given here it must be an\n   * array with two string values: the opening and closing tags used in the\n   * template (e.g. [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n   */\n  mustache.render = function render (template, view, partials, tags) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials, tags);\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n\n})));\n", "/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\nexport interface Coder<F, T> {\n  encode(from: F): T;\n  decode(to: T): F;\n}\n\nexport interface BytesCoder extends Coder<Uint8Array, string> {\n  encode: (data: Uint8Array) => string;\n  decode: (str: string) => Uint8Array;\n}\n\nfunction isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is Uint8Array. */\nfunction abytes(b: Uint8Array | undefined, ...lengths: number[]): void {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n\nfunction isArrayOf(isString: boolean, arr: any[]) {\n  if (!Array.isArray(arr)) return false;\n  if (arr.length === 0) return true;\n  if (isString) {\n    return arr.every((item) => typeof item === 'string');\n  } else {\n    return arr.every((item) => Number.isSafeInteger(item));\n  }\n}\n\n// no abytes: seems to have 10% slowdown. Why?!\n\nfunction afn(input: Function): input is Function {\n  if (typeof input !== 'function') throw new Error('function expected');\n  return true;\n}\n\nfunction astr(label: string, input: unknown): input is string {\n  if (typeof input !== 'string') throw new Error(`${label}: string expected`);\n  return true;\n}\n\nfunction anumber(n: number): void {\n  if (!Number.isSafeInteger(n)) throw new Error(`invalid integer: ${n}`);\n}\n\nfunction aArr(input: any[]) {\n  if (!Array.isArray(input)) throw new Error('array expected');\n}\nfunction astrArr(label: string, input: string[]) {\n  if (!isArrayOf(true, input)) throw new Error(`${label}: array of strings expected`);\n}\nfunction anumArr(label: string, input: number[]) {\n  if (!isArrayOf(false, input)) throw new Error(`${label}: array of numbers expected`);\n}\n\n// TODO: some recusive type inference so it would check correct order of input/output inside rest?\n// like <string, number>, <number, bytes>, <bytes, float>\ntype Chain = [Coder<any, any>, ...Coder<any, any>[]];\n// Extract info from Coder type\ntype Input<F> = F extends Coder<infer T, any> ? T : never;\ntype Output<F> = F extends Coder<any, infer T> ? T : never;\n// Generic function for arrays\ntype First<T> = T extends [infer U, ...any[]] ? U : never;\ntype Last<T> = T extends [...any[], infer U] ? U : never;\ntype Tail<T> = T extends [any, ...infer U] ? U : never;\n\ntype AsChain<C extends Chain, Rest = Tail<C>> = {\n  // C[K] = Coder<Input<C[K]>, Input<Rest[k]>>\n  [K in keyof C]: Coder<Input<C[K]>, Input<K extends keyof Rest ? Rest[K] : any>>;\n};\n\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction chain<T extends Chain & AsChain<T>>(...args: T): Coder<Input<First<T>>, Output<Last<T>>> {\n  const id = (a: any) => a;\n  // Wrap call in closure so JIT can inline calls\n  const wrap = (a: any, b: any) => (c: any) => a(b(c));\n  // Construct chain of args[-1].encode(args[-2].encode([...]))\n  const encode = args.map((x) => x.encode).reduceRight(wrap, id);\n  // Construct chain of args[0].decode(args[1].decode(...))\n  const decode = args.map((x) => x.decode).reduce(wrap, id);\n  return { encode, decode };\n}\n\n/**\n * Encodes integer radix representation to array of strings using alphabet and back.\n * Could also be array of strings.\n * @__NO_SIDE_EFFECTS__\n */\nfunction alphabet(letters: string | string[]): Coder<number[], string[]> {\n  // mapping 1 to \"b\"\n  const lettersA = typeof letters === 'string' ? letters.split('') : letters;\n  const len = lettersA.length;\n  astrArr('alphabet', lettersA);\n\n  // mapping \"b\" to 1\n  const indexes = new Map(lettersA.map((l, i) => [l, i]));\n  return {\n    encode: (digits: number[]) => {\n      aArr(digits);\n      return digits.map((i) => {\n        if (!Number.isSafeInteger(i) || i < 0 || i >= len)\n          throw new Error(\n            `alphabet.encode: digit index outside alphabet \"${i}\". Allowed: ${letters}`\n          );\n        return lettersA[i]!;\n      });\n    },\n    decode: (input: string[]): number[] => {\n      aArr(input);\n      return input.map((letter) => {\n        astr('alphabet.decode', letter);\n        const i = indexes.get(letter);\n        if (i === undefined) throw new Error(`Unknown letter: \"${letter}\". Allowed: ${letters}`);\n        return i;\n      });\n    },\n  };\n}\n\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction join(separator = ''): Coder<string[], string> {\n  astr('join', separator);\n  return {\n    encode: (from) => {\n      astrArr('join.decode', from);\n      return from.join(separator);\n    },\n    decode: (to) => {\n      astr('join.decode', to);\n      return to.split(separator);\n    },\n  };\n}\n\n/**\n * Pad strings array so it has integer number of bits\n * @__NO_SIDE_EFFECTS__\n */\nfunction padding(bits: number, chr = '='): Coder<string[], string[]> {\n  anumber(bits);\n  astr('padding', chr);\n  return {\n    encode(data: string[]): string[] {\n      astrArr('padding.encode', data);\n      while ((data.length * bits) % 8) data.push(chr);\n      return data;\n    },\n    decode(input: string[]): string[] {\n      astrArr('padding.decode', input);\n      let end = input.length;\n      if ((end * bits) % 8)\n        throw new Error('padding: invalid, string should have whole number of bytes');\n      for (; end > 0 && input[end - 1] === chr; end--) {\n        const last = end - 1;\n        const byte = last * bits;\n        if (byte % 8 === 0) throw new Error('padding: invalid, string has too much padding');\n      }\n      return input.slice(0, end);\n    },\n  };\n}\n\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction normalize<T>(fn: (val: T) => T): Coder<T, T> {\n  afn(fn);\n  return { encode: (from: T) => from, decode: (to: T) => fn(to) };\n}\n\n/**\n * Slow: O(n^2) time complexity\n */\nfunction convertRadix(data: number[], from: number, to: number): number[] {\n  // base 1 is impossible\n  if (from < 2) throw new Error(`convertRadix: invalid from=${from}, base cannot be less than 2`);\n  if (to < 2) throw new Error(`convertRadix: invalid to=${to}, base cannot be less than 2`);\n  aArr(data);\n  if (!data.length) return [];\n  let pos = 0;\n  const res = [];\n  const digits = Array.from(data, (d) => {\n    anumber(d);\n    if (d < 0 || d >= from) throw new Error(`invalid integer: ${d}`);\n    return d;\n  });\n  const dlen = digits.length;\n  while (true) {\n    let carry = 0;\n    let done = true;\n    for (let i = pos; i < dlen; i++) {\n      const digit = digits[i]!;\n      const fromCarry = from * carry;\n      const digitBase = fromCarry + digit;\n      if (\n        !Number.isSafeInteger(digitBase) ||\n        fromCarry / from !== carry ||\n        digitBase - digit !== fromCarry\n      ) {\n        throw new Error('convertRadix: carry overflow');\n      }\n      const div = digitBase / to;\n      carry = digitBase % to;\n      const rounded = Math.floor(div);\n      digits[i] = rounded;\n      if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)\n        throw new Error('convertRadix: carry overflow');\n      if (!done) continue;\n      else if (!rounded) pos = i;\n      else done = false;\n    }\n    res.push(carry);\n    if (done) break;\n  }\n  for (let i = 0; i < data.length - 1 && data[i] === 0; i++) res.push(0);\n  return res.reverse();\n}\n\nconst gcd = (a: number, b: number): number => (b === 0 ? a : gcd(b, a % b));\nconst radix2carry = /* @__NO_SIDE_EFFECTS__ */ (from: number, to: number) =>\n  from + (to - gcd(from, to));\nconst powers: number[] = /* @__PURE__ */ (() => {\n  let res = [];\n  for (let i = 0; i < 40; i++) res.push(2 ** i);\n  return res;\n})();\n/**\n * Implemented with numbers, because BigInt is 5x slower\n */\nfunction convertRadix2(data: number[], from: number, to: number, padding: boolean): number[] {\n  aArr(data);\n  if (from <= 0 || from > 32) throw new Error(`convertRadix2: wrong from=${from}`);\n  if (to <= 0 || to > 32) throw new Error(`convertRadix2: wrong to=${to}`);\n  if (radix2carry(from, to) > 32) {\n    throw new Error(\n      `convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`\n    );\n  }\n  let carry = 0;\n  let pos = 0; // bitwise position in current element\n  const max = powers[from]!;\n  const mask = powers[to]! - 1;\n  const res: number[] = [];\n  for (const n of data) {\n    anumber(n);\n    if (n >= max) throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n    carry = (carry << from) | n;\n    if (pos + from > 32) throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n    pos += from;\n    for (; pos >= to; pos -= to) res.push(((carry >> (pos - to)) & mask) >>> 0);\n    const pow = powers[pos];\n    if (pow === undefined) throw new Error('invalid carry');\n    carry &= pow - 1; // clean carry, otherwise it will cause overflow\n  }\n  carry = (carry << (to - pos)) & mask;\n  if (!padding && pos >= from) throw new Error('Excess padding');\n  if (!padding && carry > 0) throw new Error(`Non-zero padding: ${carry}`);\n  if (padding && pos > 0) res.push(carry >>> 0);\n  return res;\n}\n\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix(num: number): Coder<Uint8Array, number[]> {\n  anumber(num);\n  const _256 = 2 ** 8;\n  return {\n    encode: (bytes: Uint8Array) => {\n      if (!isBytes(bytes)) throw new Error('radix.encode input should be Uint8Array');\n      return convertRadix(Array.from(bytes), _256, num);\n    },\n    decode: (digits: number[]) => {\n      anumArr('radix.decode', digits);\n      return Uint8Array.from(convertRadix(digits, num, _256));\n    },\n  };\n}\n\n/**\n * If both bases are power of same number (like `2**8 <-> 2**64`),\n * there is a linear algorithm. For now we have implementation for power-of-two bases only.\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix2(bits: number, revPadding = false): Coder<Uint8Array, number[]> {\n  anumber(bits);\n  if (bits <= 0 || bits > 32) throw new Error('radix2: bits should be in (0..32]');\n  if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n    throw new Error('radix2: carry overflow');\n  return {\n    encode: (bytes: Uint8Array) => {\n      if (!isBytes(bytes)) throw new Error('radix2.encode input should be Uint8Array');\n      return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n    },\n    decode: (digits: number[]) => {\n      anumArr('radix2.decode', digits);\n      return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n    },\n  };\n}\n\ntype ArgumentTypes<F extends Function> = F extends (...args: infer A) => any ? A : never;\nfunction unsafeWrapper<T extends (...args: any) => any>(fn: T) {\n  afn(fn);\n  return function (...args: ArgumentTypes<T>): ReturnType<T> | void {\n    try {\n      return fn.apply(null, args);\n    } catch (e) {}\n  };\n}\n\nfunction checksum(\n  len: number,\n  fn: (data: Uint8Array) => Uint8Array\n): Coder<Uint8Array, Uint8Array> {\n  anumber(len);\n  afn(fn);\n  return {\n    encode(data: Uint8Array) {\n      if (!isBytes(data)) throw new Error('checksum.encode: input should be Uint8Array');\n      const sum = fn(data).slice(0, len);\n      const res = new Uint8Array(data.length + len);\n      res.set(data);\n      res.set(sum, data.length);\n      return res;\n    },\n    decode(data: Uint8Array) {\n      if (!isBytes(data)) throw new Error('checksum.decode: input should be Uint8Array');\n      const payload = data.slice(0, -len);\n      const oldChecksum = data.slice(-len);\n      const newChecksum = fn(payload).slice(0, len);\n      for (let i = 0; i < len; i++)\n        if (newChecksum[i] !== oldChecksum[i]) throw new Error('Invalid checksum');\n      return payload;\n    },\n  };\n}\n\n// prettier-ignore\nexport const utils: { alphabet: typeof alphabet; chain: typeof chain; checksum: typeof checksum; convertRadix: typeof convertRadix; convertRadix2: typeof convertRadix2; radix: typeof radix; radix2: typeof radix2; join: typeof join; padding: typeof padding; } = {\n  alphabet, chain, checksum, convertRadix, convertRadix2, radix, radix2, join, padding,\n};\n\n// RFC 4648 aka RFC 3548\n// ---------------------\n\n/**\n * base16 encoding from RFC 4648.\n * @example\n * ```js\n * base16.encode(Uint8Array.from([0x12, 0xab]));\n * // => '12AB'\n * ```\n */\nexport const base16: BytesCoder = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\n\n/**\n * base32 encoding from RFC 4648. Has padding.\n * Use `base32nopad` for unpadded version.\n * Also check out `base32hex`, `base32hexnopad`, `base32crockford`.\n * @example\n * ```js\n * base32.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'CKVQ===='\n * base32.decode('CKVQ====');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32: BytesCoder = chain(\n  radix2(5),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'),\n  padding(5),\n  join('')\n);\n\n/**\n * base32 encoding from RFC 4648. No padding.\n * Use `base32` for padded version.\n * Also check out `base32hex`, `base32hexnopad`, `base32crockford`.\n * @example\n * ```js\n * base32nopad.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'CKVQ'\n * base32nopad.decode('CKVQ');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32nopad: BytesCoder = chain(\n  radix2(5),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'),\n  join('')\n);\n/**\n * base32 encoding from RFC 4648. Padded. Compared to ordinary `base32`, slightly different alphabet.\n * Use `base32hexnopad` for unpadded version.\n * @example\n * ```js\n * base32hex.encode(Uint8Array.from([0x12, 0xab]));\n * // => '2ALG===='\n * base32hex.decode('2ALG====');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32hex: BytesCoder = chain(\n  radix2(5),\n  alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'),\n  padding(5),\n  join('')\n);\n\n/**\n * base32 encoding from RFC 4648. No padding. Compared to ordinary `base32`, slightly different alphabet.\n * Use `base32hex` for padded version.\n * @example\n * ```js\n * base32hexnopad.encode(Uint8Array.from([0x12, 0xab]));\n * // => '2ALG'\n * base32hexnopad.decode('2ALG');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32hexnopad: BytesCoder = chain(\n  radix2(5),\n  alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'),\n  join('')\n);\n/**\n * base32 encoding from RFC 4648. Doug Crockford's version.\n * https://www.crockford.com/base32.html\n * @example\n * ```js\n * base32crockford.encode(Uint8Array.from([0x12, 0xab]));\n * // => '2ANG'\n * base32crockford.decode('2ANG');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base32crockford: BytesCoder = chain(\n  radix2(5),\n  alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'),\n  join(''),\n  normalize((s: string) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1'))\n);\n\n// Built-in base64 conversion https://caniuse.com/mdn-javascript_builtins_uint8array_frombase64\n// prettier-ignore\nconst hasBase64Builtin: boolean = /* @__PURE__ */ (() =>\n  typeof (Uint8Array as any).from([]).toBase64 === 'function' &&\n  typeof (Uint8Array as any).fromBase64 === 'function')();\n\nconst decodeBase64Builtin = (s: string, isUrl: boolean) => {\n  astr('base64', s);\n  const re = isUrl ? /^[A-Za-z0-9=_-]+$/ : /^[A-Za-z0-9=+/]+$/;\n  const alphabet = isUrl ? 'base64url' : 'base64';\n  if (s.length > 0 && !re.test(s)) throw new Error('invalid base64');\n  return (Uint8Array as any).fromBase64(s, { alphabet, lastChunkHandling: 'strict' });\n};\n\n/**\n * base64 from RFC 4648. Padded.\n * Use `base64nopad` for unpadded version.\n * Also check out `base64url`, `base64urlnopad`.\n * Falls back to built-in function, when available.\n * @example\n * ```js\n * base64.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'Eqs='\n * base64.decode('Eqs=');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\n// prettier-ignore\nexport const base64: BytesCoder = hasBase64Builtin ? {\n  encode(b) { abytes(b); return (b as any).toBase64(); },\n  decode(s) { return decodeBase64Builtin(s, false); },\n} : chain(\n  radix2(6),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'),\n  padding(6),\n  join('')\n);\n/**\n * base64 from RFC 4648. No padding.\n * Use `base64` for padded version.\n * @example\n * ```js\n * base64nopad.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'Eqs'\n * base64nopad.decode('Eqs');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base64nopad: BytesCoder = chain(\n  radix2(6),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'),\n  join('')\n);\n\n/**\n * base64 from RFC 4648, using URL-safe alphabet. Padded.\n * Use `base64urlnopad` for unpadded version.\n * Falls back to built-in function, when available.\n * @example\n * ```js\n * base64url.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'Eqs='\n * base64url.decode('Eqs=');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\n// prettier-ignore\nexport const base64url: BytesCoder = hasBase64Builtin ? {\n  encode(b) { abytes(b); return (b as any).toBase64({ alphabet: 'base64url' }); },\n  decode(s) { return decodeBase64Builtin(s, true); },\n} : chain(\n  radix2(6),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'),\n  padding(6),\n  join('')\n);\n\n/**\n * base64 from RFC 4648, using URL-safe alphabet. No padding.\n * Use `base64url` for padded version.\n * @example\n * ```js\n * base64urlnopad.encode(Uint8Array.from([0x12, 0xab]));\n * // => 'Eqs'\n * base64urlnopad.decode('Eqs');\n * // => Uint8Array.from([0x12, 0xab])\n * ```\n */\nexport const base64urlnopad: BytesCoder = chain(\n  radix2(6),\n  alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'),\n  join('')\n);\n\n// base58 code\n// -----------\nconst genBase58 = /* @__NO_SIDE_EFFECTS__ */ (abc: string) =>\n  chain(radix(58), alphabet(abc), join(''));\n\n/**\n * base58: base64 without ambigous characters +, /, 0, O, I, l.\n * Quadratic (O(n^2)) - so, can't be used on large inputs.\n * @example\n * ```js\n * base58.decode('01abcdef');\n * // => '3UhJW'\n * ```\n */\nexport const base58: BytesCoder = genBase58(\n  '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n);\n/**\n * base58: flickr version. Check out `base58`.\n */\nexport const base58flickr: BytesCoder = genBase58(\n  '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n);\n/**\n * base58: XRP version. Check out `base58`.\n */\nexport const base58xrp: BytesCoder = genBase58(\n  'rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz'\n);\n\n// Data len (index) -> encoded block len\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\n\n/**\n * base58: XMR version. Check out `base58`.\n * Done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.\n * Block encoding significantly reduces quadratic complexity of base58.\n */\nexport const base58xmr: BytesCoder = {\n  encode(data: Uint8Array) {\n    let res = '';\n    for (let i = 0; i < data.length; i += 8) {\n      const block = data.subarray(i, i + 8);\n      res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length]!, '1');\n    }\n    return res;\n  },\n  decode(str: string) {\n    let res: number[] = [];\n    for (let i = 0; i < str.length; i += 11) {\n      const slice = str.slice(i, i + 11);\n      const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n      const block = base58.decode(slice);\n      for (let j = 0; j < block.length - blockLen; j++) {\n        if (block[j] !== 0) throw new Error('base58xmr: wrong padding');\n      }\n      res = res.concat(Array.from(block.slice(block.length - blockLen)));\n    }\n    return Uint8Array.from(res);\n  },\n};\n\n/**\n * Method, which creates base58check encoder.\n * Requires function, calculating sha256.\n */\nexport const createBase58check = (sha256: (data: Uint8Array) => Uint8Array): BytesCoder =>\n  chain(\n    checksum(4, (data) => sha256(sha256(data))),\n    base58\n  );\n\n/**\n * Use `createBase58check` instead.\n * @deprecated\n */\nexport const base58check: (sha256: (data: Uint8Array) => Uint8Array) => BytesCoder =\n  createBase58check;\n\n// Bech32 code\n// -----------\nexport interface Bech32Decoded<Prefix extends string = string> {\n  prefix: Prefix;\n  words: number[];\n}\nexport interface Bech32DecodedWithArray<Prefix extends string = string> {\n  prefix: Prefix;\n  words: number[];\n  bytes: Uint8Array;\n}\n\nconst BECH_ALPHABET: Coder<number[], string> = chain(\n  alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'),\n  join('')\n);\n\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre: number): number {\n  const b = pre >> 25;\n  let chk = (pre & 0x1ffffff) << 5;\n  for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n    if (((b >> i) & 1) === 1) chk ^= POLYMOD_GENERATORS[i]!;\n  }\n  return chk;\n}\n\nfunction bechChecksum(prefix: string, words: number[], encodingConst = 1): string {\n  const len = prefix.length;\n  let chk = 1;\n  for (let i = 0; i < len; i++) {\n    const c = prefix.charCodeAt(i);\n    if (c < 33 || c > 126) throw new Error(`Invalid prefix (${prefix})`);\n    chk = bech32Polymod(chk) ^ (c >> 5);\n  }\n  chk = bech32Polymod(chk);\n  for (let i = 0; i < len; i++) chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n  for (let v of words) chk = bech32Polymod(chk) ^ v;\n  for (let i = 0; i < 6; i++) chk = bech32Polymod(chk);\n  chk ^= encodingConst;\n  return BECH_ALPHABET.encode(convertRadix2([chk % powers[30]!], 30, 5, false));\n}\n\nexport interface Bech32 {\n  encode<Prefix extends string>(\n    prefix: Prefix,\n    words: number[] | Uint8Array,\n    limit?: number | false\n  ): `${Lowercase<Prefix>}1${string}`;\n  decode<Prefix extends string>(\n    str: `${Prefix}1${string}`,\n    limit?: number | false\n  ): Bech32Decoded<Prefix>;\n  encodeFromBytes(prefix: string, bytes: Uint8Array): string;\n  decodeToBytes(str: string): Bech32DecodedWithArray;\n  decodeUnsafe(str: string, limit?: number | false): void | Bech32Decoded<string>;\n  fromWords(to: number[]): Uint8Array;\n  fromWordsUnsafe(to: number[]): void | Uint8Array;\n  toWords(from: Uint8Array): number[];\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction genBech32(encoding: 'bech32' | 'bech32m'): Bech32 {\n  const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n  const _words = radix2(5);\n  const fromWords = _words.decode;\n  const toWords = _words.encode;\n  const fromWordsUnsafe = unsafeWrapper(fromWords);\n\n  function encode<Prefix extends string>(\n    prefix: Prefix,\n    words: number[] | Uint8Array,\n    limit: number | false = 90\n  ): `${Lowercase<Prefix>}1${string}` {\n    astr('bech32.encode prefix', prefix);\n    if (isBytes(words)) words = Array.from(words);\n    anumArr('bech32.encode', words);\n    const plen = prefix.length;\n    if (plen === 0) throw new TypeError(`Invalid prefix length ${plen}`);\n    const actualLength = plen + 7 + words.length;\n    if (limit !== false && actualLength > limit)\n      throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n    const lowered = prefix.toLowerCase();\n    const sum = bechChecksum(lowered, words, ENCODING_CONST);\n    return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}` as `${Lowercase<Prefix>}1${string}`;\n  }\n\n  function decode<Prefix extends string>(\n    str: `${Prefix}1${string}`,\n    limit?: number | false\n  ): Bech32Decoded<Prefix>;\n  function decode(str: string, limit?: number | false): Bech32Decoded;\n  function decode(str: string, limit: number | false = 90): Bech32Decoded {\n    astr('bech32.decode input', str);\n    const slen = str.length;\n    if (slen < 8 || (limit !== false && slen > limit))\n      throw new TypeError(`invalid string length: ${slen} (${str}). Expected (8..${limit})`);\n    // don't allow mixed case\n    const lowered = str.toLowerCase();\n    if (str !== lowered && str !== str.toUpperCase())\n      throw new Error(`String must be lowercase or uppercase`);\n    const sepIndex = lowered.lastIndexOf('1');\n    if (sepIndex === 0 || sepIndex === -1)\n      throw new Error(`Letter \"1\" must be present between prefix and data only`);\n    const prefix = lowered.slice(0, sepIndex);\n    const data = lowered.slice(sepIndex + 1);\n    if (data.length < 6) throw new Error('Data must be at least 6 characters long');\n    const words = BECH_ALPHABET.decode(data).slice(0, -6);\n    const sum = bechChecksum(prefix, words, ENCODING_CONST);\n    if (!data.endsWith(sum)) throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n    return { prefix, words };\n  }\n\n  const decodeUnsafe = unsafeWrapper(decode);\n\n  function decodeToBytes(str: string): Bech32DecodedWithArray {\n    const { prefix, words } = decode(str, false);\n    return { prefix, words, bytes: fromWords(words) };\n  }\n\n  function encodeFromBytes(prefix: string, bytes: Uint8Array) {\n    return encode(prefix, toWords(bytes));\n  }\n\n  return {\n    encode,\n    decode,\n    encodeFromBytes,\n    decodeToBytes,\n    decodeUnsafe,\n    fromWords,\n    fromWordsUnsafe,\n    toWords,\n  };\n}\n\n/**\n * bech32 from BIP 173. Operates on words.\n * For high-level, check out scure-btc-signer:\n * https://github.com/paulmillr/scure-btc-signer.\n */\nexport const bech32: Bech32 = genBech32('bech32');\n\n/**\n * bech32m from BIP 350. Operates on words.\n * It was to mitigate `bech32` weaknesses.\n * For high-level, check out scure-btc-signer:\n * https://github.com/paulmillr/scure-btc-signer.\n */\nexport const bech32m: Bech32 = genBech32('bech32m');\n\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\n/**\n * UTF-8-to-byte decoder. Uses built-in TextDecoder / TextEncoder.\n * @example\n * ```js\n * const b = utf8.decode(\"hey\"); // => new Uint8Array([ 104, 101, 121 ])\n * const str = utf8.encode(b); // \"hey\"\n * ```\n */\nexport const utf8: BytesCoder = {\n  encode: (data) => new TextDecoder().decode(data),\n  decode: (str) => new TextEncoder().encode(str),\n};\n\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\n// prettier-ignore\nconst hasHexBuiltin: boolean = /* @__PURE__ */ (() =>\n  typeof (Uint8Array as any).from([]).toHex === 'function' &&\n  typeof (Uint8Array as any).fromHex === 'function')();\n// prettier-ignore\nconst hexBuiltin: BytesCoder = {\n  encode(data) { abytes(data); return (data as any).toHex(); },\n  decode(s) { astr('hex', s); return (Uint8Array as any).fromHex(s); },\n};\n/**\n * hex string decoder. Uses built-in function, when available.\n * @example\n * ```js\n * const b = hex.decode(\"0102ff\"); // => new Uint8Array([ 1, 2, 255 ])\n * const str = hex.encode(b); // \"0102ff\"\n * ```\n */\nexport const hex: BytesCoder = hasHexBuiltin\n  ? hexBuiltin\n  : chain(\n      radix2(4),\n      alphabet('0123456789abcdef'),\n      join(''),\n      normalize((s: string) => {\n        if (typeof s !== 'string' || s.length % 2 !== 0)\n          throw new TypeError(\n            `hex.decode: expected string, got ${typeof s} with length ${s.length}`\n          );\n        return s.toLowerCase();\n      })\n    );\n\nexport type SomeCoders = {\n  utf8: BytesCoder;\n  hex: BytesCoder;\n  base16: BytesCoder;\n  base32: BytesCoder;\n  base64: BytesCoder;\n  base64url: BytesCoder;\n  base58: BytesCoder;\n  base58xmr: BytesCoder;\n};\n// prettier-ignore\nconst CODERS: SomeCoders = {\n  utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\ntype CoderType = keyof SomeCoders;\nconst coderTypeError =\n  'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';\n\n/** @deprecated */\nexport const bytesToString = (type: CoderType, bytes: Uint8Array): string => {\n  if (typeof type !== 'string' || !CODERS.hasOwnProperty(type)) throw new TypeError(coderTypeError);\n  if (!isBytes(bytes)) throw new TypeError('bytesToString() expects Uint8Array');\n  return CODERS[type].encode(bytes);\n};\n\n/** @deprecated */\nexport const str: (type: CoderType, bytes: Uint8Array) => string = bytesToString; // as in python, but for bytes only\n\n/** @deprecated */\nexport const stringToBytes = (type: CoderType, str: string): Uint8Array => {\n  if (!CODERS.hasOwnProperty(type)) throw new TypeError(coderTypeError);\n  if (typeof str !== 'string') throw new TypeError('stringToBytes() expects string');\n  return CODERS[type].decode(str);\n};\n/** @deprecated */\nexport const bytes: (type: CoderType, str: string) => Uint8Array = stringToBytes;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.baseDecode = exports.baseEncode = exports.parseNearAmount = exports.formatNearAmount = exports.NEAR_NOMINATION = exports.NEAR_NOMINATION_EXP = void 0;\nconst base_1 = require(\"@scure/base\");\n/**\n * Exponent for calculating how many indivisible units are there in one NEAR. See {@link NEAR_NOMINATION}.\n */\nexports.NEAR_NOMINATION_EXP = 24;\n/**\n * Number of indivisible units in one NEAR. Derived from {@link NEAR_NOMINATION_EXP}.\n */\nexports.NEAR_NOMINATION = 10n ** BigInt(exports.NEAR_NOMINATION_EXP);\n// Pre-calculate offsets used for rounding to different number of digits\nconst ROUNDING_OFFSETS = [];\nconst BN10 = 10n;\nfor (let i = 0, offset = 5n; i < exports.NEAR_NOMINATION_EXP; i++, offset = offset * BN10) {\n    ROUNDING_OFFSETS[i] = offset;\n}\n/**\n * Convert account balance value from internal indivisible units to NEAR. 1 NEAR is defined by {@link NEAR_NOMINATION}.\n * Effectively this divides given amount by {@link NEAR_NOMINATION}.\n *\n * @param balance decimal string representing balance in smallest non-divisible NEAR units (as specified by {@link NEAR_NOMINATION})\n * @param fracDigits number of fractional digits to preserve in formatted string. Balance is rounded to match given number of digits.\n * @returns Value in Ⓝ\n */\nfunction formatNearAmount(balance, fracDigits = exports.NEAR_NOMINATION_EXP) {\n    let balanceBN = BigInt(balance);\n    if (fracDigits !== exports.NEAR_NOMINATION_EXP) {\n        // Adjust balance for rounding at given number of digits\n        const roundingExp = exports.NEAR_NOMINATION_EXP - fracDigits - 1;\n        if (roundingExp > 0) {\n            balanceBN += ROUNDING_OFFSETS[roundingExp];\n        }\n    }\n    balance = balanceBN.toString();\n    const wholeStr = balance.substring(0, balance.length - exports.NEAR_NOMINATION_EXP) || \"0\";\n    const fractionStr = balance\n        .substring(balance.length - exports.NEAR_NOMINATION_EXP)\n        .padStart(exports.NEAR_NOMINATION_EXP, \"0\")\n        .substring(0, fracDigits);\n    return trimTrailingZeroes(`${formatWithCommas(wholeStr)}.${fractionStr}`);\n}\nexports.formatNearAmount = formatNearAmount;\n/**\n * Convert human readable NEAR amount to internal indivisible units.\n * Effectively this multiplies given amount by {@link NEAR_NOMINATION}.\n *\n * @param amt decimal string (potentially fractional) denominated in NEAR.\n * @returns The parsed yoctoⓃ amount or null if no amount was passed in\n */\nfunction parseNearAmount(amt) {\n    if (!amt) {\n        return null;\n    }\n    amt = cleanupAmount(amt);\n    const split = amt.split(\".\");\n    const wholePart = split[0];\n    const fracPart = split[1] || \"\";\n    if (split.length > 2 || fracPart.length > exports.NEAR_NOMINATION_EXP) {\n        throw new Error(`Cannot parse '${amt}' as NEAR amount`);\n    }\n    return trimLeadingZeroes(wholePart + fracPart.padEnd(exports.NEAR_NOMINATION_EXP, \"0\"));\n}\nexports.parseNearAmount = parseNearAmount;\n/**\n * Removes commas from the input\n * @param amount A value or amount that may contain commas\n * @returns string The cleaned value\n */\nfunction cleanupAmount(amount) {\n    return amount.replace(/,/g, \"\").trim();\n}\n/**\n * Removes .000… from an input\n * @param value A value that may contain trailing zeroes in the decimals place\n * @returns string The value without the trailing zeros\n */\nfunction trimTrailingZeroes(value) {\n    return value.replace(/\\.?0*$/, \"\");\n}\n/**\n * Removes leading zeroes from an input\n * @param value A value that may contain leading zeroes\n * @returns string The value without the leading zeroes\n */\nfunction trimLeadingZeroes(value) {\n    value = value.replace(/^0+/, \"\");\n    if (value === \"\") {\n        return \"0\";\n    }\n    return value;\n}\n/**\n * Returns a human-readable value with commas\n * @param value A value that may not contain commas\n * @returns string A value with commas\n */\nfunction formatWithCommas(value) {\n    const pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(value)) {\n        value = value.replace(pattern, \"$1,$2\");\n    }\n    return value;\n}\n/**\n * Encodes a Uint8Array or string into base58\n * @param value Uint8Array or string representing a borsh encoded object\n * @returns string base58 encoding of the value\n */\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        const bytes = [];\n        for (let c = 0; c < value.length; c++) {\n            bytes.push(value.charCodeAt(c));\n        }\n        value = new Uint8Array(bytes);\n    }\n    return base_1.base58.encode(value);\n}\nexports.baseEncode = baseEncode;\n/**\n * Decodes a base58 string into a Uint8Array\n * @param value base58 encoded string\n * @returns Uint8Array representing the decoded value\n */\nfunction baseDecode(value) {\n    return base_1.base58.decode(value);\n}\nexports.baseDecode = baseDecode;\n", "{\n    \"schema\": {\n        \"AccessKeyNotFound\": {\n            \"name\": \"AccessKeyNotFound\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\",\n                \"public_key\": \"\"\n            }\n        },\n        \"AccountAlreadyExists\": {\n            \"name\": \"AccountAlreadyExists\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\"\n            }\n        },\n        \"AccountDoesNotExist\": {\n            \"name\": \"AccountDoesNotExist\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\"\n            }\n        },\n        \"ActionError\": {\n            \"name\": \"ActionError\",\n            \"subtypes\": [\n                \"AccountAlreadyExists\",\n                \"AccountDoesNotExist\",\n                \"CreateAccountOnlyByRegistrar\",\n                \"CreateAccountNotAllowed\",\n                \"ActorNoPermission\",\n                \"DeleteKeyDoesNotExist\",\n                \"AddKeyAlreadyExists\",\n                \"DeleteAccountStaking\",\n                \"LackBalanceForState\",\n                \"TriesToUnstake\",\n                \"TriesToStake\",\n                \"InsufficientStake\",\n                \"FunctionCallError\",\n                \"NewReceiptValidationError\",\n                \"OnlyImplicitAccountCreationAllowed\",\n                \"DeleteAccountWithLargeState\",\n                \"DelegateActionInvalidSignature\",\n                \"DelegateActionSenderDoesNotMatchTxReceiver\",\n                \"DelegateActionExpired\",\n                \"DelegateActionAccessKeyError\",\n                \"DelegateActionInvalidNonce\",\n                \"DelegateActionNonceTooLarge\"\n            ],\n            \"props\": {\n                \"index\": \"\"\n            }\n        },\n        \"ActionsValidationError\": {\n            \"name\": \"ActionsValidationError\",\n            \"subtypes\": [\n                \"DeleteActionMustBeFinal\",\n                \"TotalPrepaidGasExceeded\",\n                \"TotalNumberOfActionsExceeded\",\n                \"AddKeyMethodNamesNumberOfBytesExceeded\",\n                \"AddKeyMethodNameLengthExceeded\",\n                \"IntegerOverflow\",\n                \"InvalidAccountId\",\n                \"ContractSizeExceeded\",\n                \"FunctionCallMethodNameLengthExceeded\",\n                \"FunctionCallArgumentsLengthExceeded\",\n                \"UnsuitableStakingKey\",\n                \"FunctionCallZeroAttachedGas\",\n                \"DelegateActionMustBeOnlyOne\",\n                \"UnsupportedProtocolFeature\"\n            ],\n            \"props\": {}\n        },\n        \"ActorNoPermission\": {\n            \"name\": \"ActorNoPermission\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\",\n                \"actor_id\": \"\"\n            }\n        },\n        \"AddKeyAlreadyExists\": {\n            \"name\": \"AddKeyAlreadyExists\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\",\n                \"public_key\": \"\"\n            }\n        },\n        \"AddKeyMethodNameLengthExceeded\": {\n            \"name\": \"AddKeyMethodNameLengthExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"length\": \"\",\n                \"limit\": \"\"\n            }\n        },\n        \"AddKeyMethodNamesNumberOfBytesExceeded\": {\n            \"name\": \"AddKeyMethodNamesNumberOfBytesExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"limit\": \"\",\n                \"total_number_of_bytes\": \"\"\n            }\n        },\n        \"AltBn128InvalidInput\": {\n            \"name\": \"AltBn128InvalidInput\",\n            \"subtypes\": [],\n            \"props\": {\n                \"msg\": \"\"\n            }\n        },\n        \"BadUTF16\": {\n            \"name\": \"BadUTF16\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"BadUTF8\": {\n            \"name\": \"BadUTF8\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"BalanceExceeded\": {\n            \"name\": \"BalanceExceeded\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"BalanceMismatchError\": {\n            \"name\": \"BalanceMismatchError\",\n            \"subtypes\": [],\n            \"props\": {\n                \"final_accounts_balance\": \"\",\n                \"final_postponed_receipts_balance\": \"\",\n                \"forwarded_buffered_receipts_balance\": \"\",\n                \"incoming_receipts_balance\": \"\",\n                \"incoming_validator_rewards\": \"\",\n                \"initial_accounts_balance\": \"\",\n                \"initial_postponed_receipts_balance\": \"\",\n                \"new_buffered_receipts_balance\": \"\",\n                \"new_delayed_receipts_balance\": \"\",\n                \"other_burnt_amount\": \"\",\n                \"outgoing_receipts_balance\": \"\",\n                \"processed_delayed_receipts_balance\": \"\",\n                \"slashed_burnt_amount\": \"\",\n                \"tx_burnt_amount\": \"\"\n            }\n        },\n        \"CallIndirectOOB\": {\n            \"name\": \"CallIndirectOOB\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"CannotAppendActionToJointPromise\": {\n            \"name\": \"CannotAppendActionToJointPromise\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"CannotReturnJointPromise\": {\n            \"name\": \"CannotReturnJointPromise\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"CodeDoesNotExist\": {\n            \"name\": \"CodeDoesNotExist\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\"\n            }\n        },\n        \"CompilationError\": {\n            \"name\": \"CompilationError\",\n            \"subtypes\": [\n                \"CodeDoesNotExist\",\n                \"PrepareError\",\n                \"WasmerCompileError\"\n            ],\n            \"props\": {}\n        },\n        \"ContractSizeExceeded\": {\n            \"name\": \"ContractSizeExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"limit\": \"\",\n                \"size\": \"\"\n            }\n        },\n        \"CostOverflow\": {\n            \"name\": \"CostOverflow\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"CreateAccountNotAllowed\": {\n            \"name\": \"CreateAccountNotAllowed\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\",\n                \"predecessor_id\": \"\"\n            }\n        },\n        \"CreateAccountOnlyByRegistrar\": {\n            \"name\": \"CreateAccountOnlyByRegistrar\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\",\n                \"predecessor_id\": \"\",\n                \"registrar_account_id\": \"\"\n            }\n        },\n        \"DelegateActionExpired\": {\n            \"name\": \"DelegateActionExpired\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"DelegateActionInvalidNonce\": {\n            \"name\": \"DelegateActionInvalidNonce\",\n            \"subtypes\": [],\n            \"props\": {\n                \"ak_nonce\": \"\",\n                \"delegate_nonce\": \"\"\n            }\n        },\n        \"DelegateActionInvalidSignature\": {\n            \"name\": \"DelegateActionInvalidSignature\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"DelegateActionMustBeOnlyOne\": {\n            \"name\": \"DelegateActionMustBeOnlyOne\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"DelegateActionNonceTooLarge\": {\n            \"name\": \"DelegateActionNonceTooLarge\",\n            \"subtypes\": [],\n            \"props\": {\n                \"delegate_nonce\": \"\",\n                \"upper_bound\": \"\"\n            }\n        },\n        \"DelegateActionSenderDoesNotMatchTxReceiver\": {\n            \"name\": \"DelegateActionSenderDoesNotMatchTxReceiver\",\n            \"subtypes\": [],\n            \"props\": {\n                \"receiver_id\": \"\",\n                \"sender_id\": \"\"\n            }\n        },\n        \"DeleteAccountStaking\": {\n            \"name\": \"DeleteAccountStaking\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\"\n            }\n        },\n        \"DeleteAccountWithLargeState\": {\n            \"name\": \"DeleteAccountWithLargeState\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\"\n            }\n        },\n        \"DeleteActionMustBeFinal\": {\n            \"name\": \"DeleteActionMustBeFinal\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"DeleteKeyDoesNotExist\": {\n            \"name\": \"DeleteKeyDoesNotExist\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\",\n                \"public_key\": \"\"\n            }\n        },\n        \"DepositWithFunctionCall\": {\n            \"name\": \"DepositWithFunctionCall\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"Deprecated\": {\n            \"name\": \"Deprecated\",\n            \"subtypes\": [],\n            \"props\": {\n                \"method_name\": \"\"\n            }\n        },\n        \"Deserialization\": {\n            \"name\": \"Deserialization\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"ECRecoverError\": {\n            \"name\": \"ECRecoverError\",\n            \"subtypes\": [],\n            \"props\": {\n                \"msg\": \"\"\n            }\n        },\n        \"Ed25519VerifyInvalidInput\": {\n            \"name\": \"Ed25519VerifyInvalidInput\",\n            \"subtypes\": [],\n            \"props\": {\n                \"msg\": \"\"\n            }\n        },\n        \"EmptyMethodName\": {\n            \"name\": \"EmptyMethodName\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"Expired\": {\n            \"name\": \"Expired\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"FunctionCallArgumentsLengthExceeded\": {\n            \"name\": \"FunctionCallArgumentsLengthExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"length\": \"\",\n                \"limit\": \"\"\n            }\n        },\n        \"FunctionCallMethodNameLengthExceeded\": {\n            \"name\": \"FunctionCallMethodNameLengthExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"length\": \"\",\n                \"limit\": \"\"\n            }\n        },\n        \"FunctionCallZeroAttachedGas\": {\n            \"name\": \"FunctionCallZeroAttachedGas\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"GasExceeded\": {\n            \"name\": \"GasExceeded\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"GasInstrumentation\": {\n            \"name\": \"GasInstrumentation\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"GasLimitExceeded\": {\n            \"name\": \"GasLimitExceeded\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"GenericTrap\": {\n            \"name\": \"GenericTrap\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"GuestPanic\": {\n            \"name\": \"GuestPanic\",\n            \"subtypes\": [],\n            \"props\": {\n                \"panic_msg\": \"\"\n            }\n        },\n        \"HostError\": {\n            \"name\": \"HostError\",\n            \"subtypes\": [\n                \"BadUTF16\",\n                \"BadUTF8\",\n                \"GasExceeded\",\n                \"GasLimitExceeded\",\n                \"BalanceExceeded\",\n                \"EmptyMethodName\",\n                \"GuestPanic\",\n                \"IntegerOverflow\",\n                \"InvalidPromiseIndex\",\n                \"CannotAppendActionToJointPromise\",\n                \"CannotReturnJointPromise\",\n                \"InvalidPromiseResultIndex\",\n                \"InvalidRegisterId\",\n                \"IteratorWasInvalidated\",\n                \"MemoryAccessViolation\",\n                \"InvalidReceiptIndex\",\n                \"InvalidIteratorIndex\",\n                \"InvalidAccountId\",\n                \"InvalidMethodName\",\n                \"InvalidPublicKey\",\n                \"ProhibitedInView\",\n                \"NumberOfLogsExceeded\",\n                \"KeyLengthExceeded\",\n                \"ValueLengthExceeded\",\n                \"TotalLogLengthExceeded\",\n                \"NumberPromisesExceeded\",\n                \"NumberInputDataDependenciesExceeded\",\n                \"ReturnedValueLengthExceeded\",\n                \"ContractSizeExceeded\",\n                \"Deprecated\",\n                \"ECRecoverError\",\n                \"AltBn128InvalidInput\",\n                \"Ed25519VerifyInvalidInput\"\n            ],\n            \"props\": {}\n        },\n        \"IllegalArithmetic\": {\n            \"name\": \"IllegalArithmetic\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"IncorrectCallIndirectSignature\": {\n            \"name\": \"IncorrectCallIndirectSignature\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"IndirectCallToNull\": {\n            \"name\": \"IndirectCallToNull\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"Instantiate\": {\n            \"name\": \"Instantiate\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"InsufficientStake\": {\n            \"name\": \"InsufficientStake\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\",\n                \"minimum_stake\": \"\",\n                \"stake\": \"\"\n            }\n        },\n        \"IntegerOverflow\": {\n            \"name\": \"IntegerOverflow\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"InternalMemoryDeclared\": {\n            \"name\": \"InternalMemoryDeclared\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"InvalidAccessKeyError\": {\n            \"name\": \"InvalidAccessKeyError\",\n            \"subtypes\": [\n                \"AccessKeyNotFound\",\n                \"ReceiverMismatch\",\n                \"MethodNameMismatch\",\n                \"RequiresFullAccess\",\n                \"NotEnoughAllowance\",\n                \"DepositWithFunctionCall\"\n            ],\n            \"props\": {}\n        },\n        \"InvalidAccountId\": {\n            \"name\": \"InvalidAccountId\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"InvalidChain\": {\n            \"name\": \"InvalidChain\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"InvalidDataReceiverId\": {\n            \"name\": \"InvalidDataReceiverId\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\"\n            }\n        },\n        \"InvalidIteratorIndex\": {\n            \"name\": \"InvalidIteratorIndex\",\n            \"subtypes\": [],\n            \"props\": {\n                \"iterator_index\": \"\"\n            }\n        },\n        \"InvalidMethodName\": {\n            \"name\": \"InvalidMethodName\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"InvalidNonce\": {\n            \"name\": \"InvalidNonce\",\n            \"subtypes\": [],\n            \"props\": {\n                \"ak_nonce\": \"\",\n                \"tx_nonce\": \"\"\n            }\n        },\n        \"InvalidPredecessorId\": {\n            \"name\": \"InvalidPredecessorId\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\"\n            }\n        },\n        \"InvalidPromiseIndex\": {\n            \"name\": \"InvalidPromiseIndex\",\n            \"subtypes\": [],\n            \"props\": {\n                \"promise_idx\": \"\"\n            }\n        },\n        \"InvalidPromiseResultIndex\": {\n            \"name\": \"InvalidPromiseResultIndex\",\n            \"subtypes\": [],\n            \"props\": {\n                \"result_idx\": \"\"\n            }\n        },\n        \"InvalidPublicKey\": {\n            \"name\": \"InvalidPublicKey\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"InvalidReceiptIndex\": {\n            \"name\": \"InvalidReceiptIndex\",\n            \"subtypes\": [],\n            \"props\": {\n                \"receipt_index\": \"\"\n            }\n        },\n        \"InvalidReceiverId\": {\n            \"name\": \"InvalidReceiverId\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\"\n            }\n        },\n        \"InvalidRegisterId\": {\n            \"name\": \"InvalidRegisterId\",\n            \"subtypes\": [],\n            \"props\": {\n                \"register_id\": \"\"\n            }\n        },\n        \"InvalidSignature\": {\n            \"name\": \"InvalidSignature\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"InvalidSignerId\": {\n            \"name\": \"InvalidSignerId\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\"\n            }\n        },\n        \"InvalidTxError\": {\n            \"name\": \"InvalidTxError\",\n            \"subtypes\": [\n                \"InvalidAccessKeyError\",\n                \"InvalidSignerId\",\n                \"SignerDoesNotExist\",\n                \"InvalidNonce\",\n                \"NonceTooLarge\",\n                \"InvalidReceiverId\",\n                \"InvalidSignature\",\n                \"NotEnoughBalance\",\n                \"LackBalanceForState\",\n                \"CostOverflow\",\n                \"InvalidChain\",\n                \"Expired\",\n                \"ActionsValidation\",\n                \"TransactionSizeExceeded\",\n                \"StorageError\",\n                \"ShardCongested\",\n                \"ShardStuck\"\n            ],\n            \"props\": {}\n        },\n        \"IteratorWasInvalidated\": {\n            \"name\": \"IteratorWasInvalidated\",\n            \"subtypes\": [],\n            \"props\": {\n                \"iterator_index\": \"\"\n            }\n        },\n        \"KeyLengthExceeded\": {\n            \"name\": \"KeyLengthExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"length\": \"\",\n                \"limit\": \"\"\n            }\n        },\n        \"LackBalanceForState\": {\n            \"name\": \"LackBalanceForState\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\",\n                \"amount\": \"\"\n            }\n        },\n        \"Memory\": {\n            \"name\": \"Memory\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"MemoryAccessViolation\": {\n            \"name\": \"MemoryAccessViolation\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"MemoryOutOfBounds\": {\n            \"name\": \"MemoryOutOfBounds\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"MethodEmptyName\": {\n            \"name\": \"MethodEmptyName\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"MethodInvalidSignature\": {\n            \"name\": \"MethodInvalidSignature\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"MethodNameMismatch\": {\n            \"name\": \"MethodNameMismatch\",\n            \"subtypes\": [],\n            \"props\": {\n                \"method_name\": \"\"\n            }\n        },\n        \"MethodNotFound\": {\n            \"name\": \"MethodNotFound\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"MethodResolveError\": {\n            \"name\": \"MethodResolveError\",\n            \"subtypes\": [\n                \"MethodEmptyName\",\n                \"MethodNotFound\",\n                \"MethodInvalidSignature\"\n            ],\n            \"props\": {}\n        },\n        \"MisalignedAtomicAccess\": {\n            \"name\": \"MisalignedAtomicAccess\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"NonceTooLarge\": {\n            \"name\": \"NonceTooLarge\",\n            \"subtypes\": [],\n            \"props\": {\n                \"tx_nonce\": \"\",\n                \"upper_bound\": \"\"\n            }\n        },\n        \"NotEnoughAllowance\": {\n            \"name\": \"NotEnoughAllowance\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\",\n                \"allowance\": \"\",\n                \"cost\": \"\",\n                \"public_key\": \"\"\n            }\n        },\n        \"NotEnoughBalance\": {\n            \"name\": \"NotEnoughBalance\",\n            \"subtypes\": [],\n            \"props\": {\n                \"balance\": \"\",\n                \"cost\": \"\",\n                \"signer_id\": \"\"\n            }\n        },\n        \"NumberInputDataDependenciesExceeded\": {\n            \"name\": \"NumberInputDataDependenciesExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"limit\": \"\",\n                \"number_of_input_data_dependencies\": \"\"\n            }\n        },\n        \"NumberOfLogsExceeded\": {\n            \"name\": \"NumberOfLogsExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"limit\": \"\"\n            }\n        },\n        \"NumberPromisesExceeded\": {\n            \"name\": \"NumberPromisesExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"limit\": \"\",\n                \"number_of_promises\": \"\"\n            }\n        },\n        \"OnlyImplicitAccountCreationAllowed\": {\n            \"name\": \"OnlyImplicitAccountCreationAllowed\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\"\n            }\n        },\n        \"PrepareError\": {\n            \"name\": \"PrepareError\",\n            \"subtypes\": [\n                \"Serialization\",\n                \"Deserialization\",\n                \"InternalMemoryDeclared\",\n                \"GasInstrumentation\",\n                \"StackHeightInstrumentation\",\n                \"Instantiate\",\n                \"Memory\",\n                \"TooManyFunctions\",\n                \"TooManyLocals\"\n            ],\n            \"props\": {}\n        },\n        \"ProhibitedInView\": {\n            \"name\": \"ProhibitedInView\",\n            \"subtypes\": [],\n            \"props\": {\n                \"method_name\": \"\"\n            }\n        },\n        \"ReceiptSizeExceeded\": {\n            \"name\": \"ReceiptSizeExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"limit\": \"\",\n                \"size\": \"\"\n            }\n        },\n        \"ReceiptValidationError\": {\n            \"name\": \"ReceiptValidationError\",\n            \"subtypes\": [\n                \"InvalidPredecessorId\",\n                \"InvalidReceiverId\",\n                \"InvalidSignerId\",\n                \"InvalidDataReceiverId\",\n                \"ReturnedValueLengthExceeded\",\n                \"NumberInputDataDependenciesExceeded\",\n                \"ActionsValidation\",\n                \"ReceiptSizeExceeded\"\n            ],\n            \"props\": {}\n        },\n        \"ReceiverMismatch\": {\n            \"name\": \"ReceiverMismatch\",\n            \"subtypes\": [],\n            \"props\": {\n                \"ak_receiver\": \"\",\n                \"tx_receiver\": \"\"\n            }\n        },\n        \"RequiresFullAccess\": {\n            \"name\": \"RequiresFullAccess\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"ReturnedValueLengthExceeded\": {\n            \"name\": \"ReturnedValueLengthExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"length\": \"\",\n                \"limit\": \"\"\n            }\n        },\n        \"Serialization\": {\n            \"name\": \"Serialization\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"ShardCongested\": {\n            \"name\": \"ShardCongested\",\n            \"subtypes\": [],\n            \"props\": {\n                \"congestion_level\": \"\",\n                \"shard_id\": \"\"\n            }\n        },\n        \"ShardStuck\": {\n            \"name\": \"ShardStuck\",\n            \"subtypes\": [],\n            \"props\": {\n                \"missed_chunks\": \"\",\n                \"shard_id\": \"\"\n            }\n        },\n        \"SignerDoesNotExist\": {\n            \"name\": \"SignerDoesNotExist\",\n            \"subtypes\": [],\n            \"props\": {\n                \"signer_id\": \"\"\n            }\n        },\n        \"StackHeightInstrumentation\": {\n            \"name\": \"StackHeightInstrumentation\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"StackOverflow\": {\n            \"name\": \"StackOverflow\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"TooManyFunctions\": {\n            \"name\": \"TooManyFunctions\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"TooManyLocals\": {\n            \"name\": \"TooManyLocals\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"TotalLogLengthExceeded\": {\n            \"name\": \"TotalLogLengthExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"length\": \"\",\n                \"limit\": \"\"\n            }\n        },\n        \"TotalNumberOfActionsExceeded\": {\n            \"name\": \"TotalNumberOfActionsExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"limit\": \"\",\n                \"total_number_of_actions\": \"\"\n            }\n        },\n        \"TotalPrepaidGasExceeded\": {\n            \"name\": \"TotalPrepaidGasExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"limit\": \"\",\n                \"total_prepaid_gas\": \"\"\n            }\n        },\n        \"TransactionSizeExceeded\": {\n            \"name\": \"TransactionSizeExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"limit\": \"\",\n                \"size\": \"\"\n            }\n        },\n        \"TriesToStake\": {\n            \"name\": \"TriesToStake\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\",\n                \"balance\": \"\",\n                \"locked\": \"\",\n                \"stake\": \"\"\n            }\n        },\n        \"TriesToUnstake\": {\n            \"name\": \"TriesToUnstake\",\n            \"subtypes\": [],\n            \"props\": {\n                \"account_id\": \"\"\n            }\n        },\n        \"TxExecutionError\": {\n            \"name\": \"TxExecutionError\",\n            \"subtypes\": [\n                \"ActionError\",\n                \"InvalidTxError\"\n            ],\n            \"props\": {}\n        },\n        \"Unreachable\": {\n            \"name\": \"Unreachable\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"UnsuitableStakingKey\": {\n            \"name\": \"UnsuitableStakingKey\",\n            \"subtypes\": [],\n            \"props\": {\n                \"public_key\": \"\"\n            }\n        },\n        \"UnsupportedProtocolFeature\": {\n            \"name\": \"UnsupportedProtocolFeature\",\n            \"subtypes\": [],\n            \"props\": {\n                \"protocol_feature\": \"\",\n                \"version\": \"\"\n            }\n        },\n        \"ValueLengthExceeded\": {\n            \"name\": \"ValueLengthExceeded\",\n            \"subtypes\": [],\n            \"props\": {\n                \"length\": \"\",\n                \"limit\": \"\"\n            }\n        },\n        \"WasmTrap\": {\n            \"name\": \"WasmTrap\",\n            \"subtypes\": [\n                \"Unreachable\",\n                \"IncorrectCallIndirectSignature\",\n                \"MemoryOutOfBounds\",\n                \"CallIndirectOOB\",\n                \"IllegalArithmetic\",\n                \"MisalignedAtomicAccess\",\n                \"IndirectCallToNull\",\n                \"StackOverflow\",\n                \"GenericTrap\"\n            ],\n            \"props\": {}\n        },\n        \"WasmerCompileError\": {\n            \"name\": \"WasmerCompileError\",\n            \"subtypes\": [],\n            \"props\": {\n                \"msg\": \"\"\n            }\n        },\n        \"Closed\": {\n            \"name\": \"Closed\",\n            \"subtypes\": [],\n            \"props\": {}\n        },\n        \"ServerError\": {\n            \"name\": \"ServerError\",\n            \"subtypes\": [\n                \"TxExecutionError\",\n                \"Timeout\",\n                \"Closed\"\n            ],\n            \"props\": {}\n        },\n        \"Timeout\": {\n            \"name\": \"Timeout\",\n            \"subtypes\": [],\n            \"props\": {}\n        }\n    }\n}\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getErrorTypeFromErrorMessage = exports.formatError = exports.parseResultError = exports.parseRpcError = exports.ServerError = void 0;\nconst types_1 = require(\"@near-js/types\");\nconst mustache_1 = __importDefault(require(\"mustache\"));\nconst format_1 = require(\"../format.cjs\");\nconst errors_1 = require(\"./errors.cjs\");\nconst rpc_error_schema_json_1 = __importDefault(require(\"./rpc_error_schema.json\"));\nconst mustacheHelpers = {\n    formatNear: () => (n, render) => (0, format_1.formatNearAmount)(render(n))\n};\nclass ServerError extends types_1.TypedError {\n}\nexports.ServerError = ServerError;\nclass ServerTransactionError extends ServerError {\n    transaction_outcome;\n}\nfunction parseRpcError(errorObj) {\n    const result = {};\n    const errorClassName = walkSubtype(errorObj, rpc_error_schema_json_1.default.schema, result, '');\n    // NOTE: This assumes that all errors extend TypedError\n    const error = new ServerError(formatError(errorClassName, result), errorClassName);\n    Object.assign(error, result);\n    return error;\n}\nexports.parseRpcError = parseRpcError;\nfunction parseResultError(result) {\n    const server_error = parseRpcError(result.status.Failure);\n    const server_tx_error = new ServerTransactionError();\n    Object.assign(server_tx_error, server_error);\n    server_tx_error.type = server_error.type;\n    server_tx_error.message = server_error.message;\n    server_tx_error.transaction_outcome = result.transaction_outcome;\n    return server_tx_error;\n}\nexports.parseResultError = parseResultError;\nfunction formatError(errorClassName, errorData) {\n    if (typeof errors_1.ErrorMessages[errorClassName] === 'string') {\n        return mustache_1.default.render(errors_1.ErrorMessages[errorClassName], {\n            ...errorData,\n            ...mustacheHelpers\n        });\n    }\n    return JSON.stringify(errorData);\n}\nexports.formatError = formatError;\n/**\n * Walks through defined schema returning error(s) recursively\n * @param errorObj The error to be parsed\n * @param schema A defined schema in JSON mapping to the RPC errors\n * @param result An object used in recursion or called directly\n * @param typeName The human-readable error type name as defined in the JSON mapping\n */\nfunction walkSubtype(errorObj, schema, result, typeName) {\n    let error;\n    let type;\n    let errorTypeName;\n    for (const errorName in schema) {\n        if (isString(errorObj[errorName])) {\n            // Return early if error type is in a schema\n            return errorObj[errorName];\n        }\n        if (isObject(errorObj[errorName])) {\n            error = errorObj[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else if (isObject(errorObj.kind) && isObject(errorObj.kind[errorName])) {\n            error = errorObj.kind[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else {\n            continue;\n        }\n    }\n    if (error && type) {\n        for (const prop of Object.keys(type.props)) {\n            result[prop] = error[prop];\n        }\n        return walkSubtype(error, schema, result, errorTypeName);\n    }\n    else {\n        // TODO: is this the right thing to do?\n        result.kind = errorObj;\n        return typeName;\n    }\n}\nfunction getErrorTypeFromErrorMessage(errorMessage, errorType) {\n    // This function should be removed when JSON RPC starts returning typed errors.\n    switch (true) {\n        case /^account .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^Account .*? doesn't exist$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^access key .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccessKeyDoesNotExist';\n        case /wasm execution failed with error: FunctionCallError\\(CompilationError\\(CodeDoesNotExist/.test(errorMessage):\n            return 'CodeDoesNotExist';\n        case /wasm execution failed with error: CompilationError\\(CodeDoesNotExist/.test(errorMessage):\n            return 'CodeDoesNotExist';\n        case /wasm execution failed with error: FunctionCallError\\(MethodResolveError\\(MethodNotFound/.test(errorMessage):\n            return 'MethodNotFound';\n        case /wasm execution failed with error: MethodResolveError\\(MethodNotFound/.test(errorMessage):\n            return 'MethodNotFound';\n        case /Transaction nonce \\d+ must be larger than nonce of the used access key \\d+/.test(errorMessage):\n            return 'InvalidNonce';\n        default:\n            return errorType;\n    }\n}\nexports.getErrorTypeFromErrorMessage = getErrorTypeFromErrorMessage;\n/**\n * Helper function determining if the argument is an object\n * @param n Value to check\n */\nfunction isObject(n) {\n    return Object.prototype.toString.call(n) === '[object Object]';\n}\n/**\n * Helper function determining if the argument is a string\n * @param n Value to check\n */\nfunction isString(n) {\n    return Object.prototype.toString.call(n) === '[object String]';\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseRpcError = exports.parseResultError = exports.getErrorTypeFromErrorMessage = exports.formatError = exports.ServerError = exports.ErrorMessages = void 0;\nvar errors_1 = require(\"./errors.cjs\");\nObject.defineProperty(exports, \"ErrorMessages\", { enumerable: true, get: function () { return errors_1.ErrorMessages; } });\nvar rpc_errors_1 = require(\"./rpc_errors.cjs\");\nObject.defineProperty(exports, \"ServerError\", { enumerable: true, get: function () { return rpc_errors_1.ServerError; } });\nObject.defineProperty(exports, \"formatError\", { enumerable: true, get: function () { return rpc_errors_1.formatError; } });\nObject.defineProperty(exports, \"getErrorTypeFromErrorMessage\", { enumerable: true, get: function () { return rpc_errors_1.getErrorTypeFromErrorMessage; } });\nObject.defineProperty(exports, \"parseResultError\", { enumerable: true, get: function () { return rpc_errors_1.parseResultError; } });\nObject.defineProperty(exports, \"parseRpcError\", { enumerable: true, get: function () { return rpc_errors_1.parseRpcError; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConsoleLogger = void 0;\nclass ConsoleLogger {\n    logLevels;\n    constructor(logLevels) {\n        this.logLevels = logLevels;\n    }\n    isLevelEnabled = (level) => {\n        return this.logLevels.includes(level);\n    };\n    print(level, message, ...optionalParams) {\n        switch (level) {\n            case 'error':\n            case 'fatal':\n                return console.error(message, ...optionalParams);\n            case 'warn':\n                return console.warn(message, ...optionalParams);\n            case 'log':\n                return console.log(message, ...optionalParams);\n            case 'debug':\n            case 'verbose':\n                return console.debug(message, ...optionalParams);\n        }\n    }\n    verbose(message, ...optionalParams) {\n        if (!this.isLevelEnabled('verbose'))\n            return;\n        this.print('verbose', message, ...optionalParams);\n    }\n    debug(message, ...optionalParams) {\n        if (!this.isLevelEnabled('debug'))\n            return;\n        this.print('debug', message, ...optionalParams);\n    }\n    log(message, ...optionalParams) {\n        if (!this.isLevelEnabled('log'))\n            return;\n        this.print('log', message, ...optionalParams);\n    }\n    warn(message, ...optionalParams) {\n        if (!this.isLevelEnabled('warn'))\n            return;\n        this.print('warn', message, ...optionalParams);\n    }\n    error(message, ...optionalParams) {\n        if (!this.isLevelEnabled('error'))\n            return;\n        this.print('error', message, ...optionalParams);\n    }\n    fatal(message, ...optionalParams) {\n        if (!this.isLevelEnabled('fatal'))\n            return;\n        this.print('fatal', message, ...optionalParams);\n    }\n}\nexports.ConsoleLogger = ConsoleLogger;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Logger = void 0;\nconst console_logger_1 = require(\"./console.logger.cjs\");\nconst DEFAULT_LOG_LEVELS = [\n    'verbose',\n    'debug',\n    'log',\n    'warn',\n    'error',\n    'fatal',\n];\nconst DEFAULT_LOGGER = new console_logger_1.ConsoleLogger(DEFAULT_LOG_LEVELS);\n/**\n * Used to log the library messages\n */\nclass Logger {\n    static instanceRef = DEFAULT_LOGGER;\n    static overrideLogger = (logger) => {\n        this.instanceRef = logger;\n    };\n    static error(message, ...optionalParams) {\n        this.instanceRef?.error(message, ...optionalParams);\n    }\n    /**\n     * Write a 'log' level log.\n     */\n    static log(message, ...optionalParams) {\n        this.instanceRef?.log(message, ...optionalParams);\n    }\n    /**\n     * Write a 'warn' level log.\n     */\n    static warn(message, ...optionalParams) {\n        this.instanceRef?.warn(message, ...optionalParams);\n    }\n    /**\n     * Write a 'debug' level log.\n     */\n    static debug(message, ...optionalParams) {\n        this.instanceRef?.debug?.(message, ...optionalParams);\n    }\n    /**\n     * Write a 'verbose' level log.\n     */\n    static verbose(message, ...optionalParams) {\n        this.instanceRef?.verbose?.(message, ...optionalParams);\n    }\n    static fatal(message, ...optionalParams) {\n        this.instanceRef?.fatal?.(message, ...optionalParams);\n    }\n}\nexports.Logger = Logger;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Logger = exports.ConsoleLogger = void 0;\nvar console_logger_1 = require(\"./console.logger.cjs\");\nObject.defineProperty(exports, \"ConsoleLogger\", { enumerable: true, get: function () { return console_logger_1.ConsoleLogger; } });\nvar logger_1 = require(\"./logger.cjs\");\nObject.defineProperty(exports, \"Logger\", { enumerable: true, get: function () { return logger_1.Logger; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.printTxOutcomeLogs = exports.printTxOutcomeLogsAndFailures = void 0;\nconst errors_1 = require(\"./errors/index.cjs\");\nconst logger_1 = require(\"./logger/index.cjs\");\n/**\n * Parse and print details from a query execution response\n * @param params\n * @param params.contractId ID of the account/contract which made the query\n * @param params.outcome the query execution response\n */\nfunction printTxOutcomeLogsAndFailures({ contractId, outcome, }) {\n    const flatLogs = [outcome.transaction_outcome, ...outcome.receipts_outcome]\n        .reduce((acc, it) => {\n        const isFailure = typeof it.outcome.status === 'object' && typeof it.outcome.status.Failure === 'object';\n        if (it.outcome.logs.length || isFailure) {\n            return acc.concat({\n                receiptIds: it.outcome.receipt_ids,\n                logs: it.outcome.logs,\n                failure: typeof it.outcome.status === 'object' && it.outcome.status.Failure !== undefined\n                    ? (0, errors_1.parseRpcError)(it.outcome.status.Failure)\n                    : null\n            });\n        }\n        else {\n            return acc;\n        }\n    }, []);\n    for (const result of flatLogs) {\n        logger_1.Logger.log(`Receipt${result.receiptIds.length > 1 ? 's' : ''}: ${result.receiptIds.join(', ')}`);\n        printTxOutcomeLogs({\n            contractId,\n            logs: result.logs,\n            prefix: '\\t',\n        });\n        if (result.failure) {\n            logger_1.Logger.warn(`\\tFailure [${contractId}]: ${result.failure}`);\n        }\n    }\n}\nexports.printTxOutcomeLogsAndFailures = printTxOutcomeLogsAndFailures;\n/**\n * Format and print log output from a query execution response\n * @param params\n * @param params.contractId ID of the account/contract which made the query\n * @param params.logs log output from a query execution response\n * @param params.prefix string to append to the beginning of each log\n */\nfunction printTxOutcomeLogs({ contractId, logs, prefix = '', }) {\n    for (const log of logs) {\n        logger_1.Logger.log(`${prefix}Log [${contractId}]: ${log}`);\n    }\n}\nexports.printTxOutcomeLogs = printTxOutcomeLogs;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTransactionLastResult = void 0;\n/** @hidden */\nfunction getTransactionLastResult(txResult) {\n    if (typeof txResult.status === 'object' && typeof txResult.status.SuccessValue === 'string') {\n        const value = Buffer.from(txResult.status.SuccessValue, 'base64').toString();\n        try {\n            return JSON.parse(value);\n        }\n        catch (e) {\n            return value;\n        }\n    }\n    return null;\n}\nexports.getTransactionLastResult = getTransactionLastResult;\n", "/*!\n * depd\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = depd\n\n/**\n * Create deprecate for namespace in caller.\n */\n\nfunction depd (namespace) {\n  if (!namespace) {\n    throw new TypeError('argument namespace is required')\n  }\n\n  function deprecate (message) {\n    // no-op in browser\n  }\n\n  deprecate._file = undefined\n  deprecate._ignored = true\n  deprecate._namespace = namespace\n  deprecate._traced = false\n  deprecate._warned = Object.create(null)\n\n  deprecate.function = wrapfunction\n  deprecate.property = wrapproperty\n\n  return deprecate\n}\n\n/**\n * Return a wrapped function in a deprecation message.\n *\n * This is a no-op version of the wrapper, which does nothing but call\n * validation.\n */\n\nfunction wrapfunction (fn, message) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('argument fn must be a function')\n  }\n\n  return fn\n}\n\n/**\n * Wrap property in a deprecation message.\n *\n * This is a no-op version of the wrapper, which does nothing but call\n * validation.\n */\n\nfunction wrapproperty (obj, prop, message) {\n  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    throw new TypeError('argument obj must be object')\n  }\n\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n\n  if (!descriptor) {\n    throw new TypeError('must call property on owner object')\n  }\n\n  if (!descriptor.configurable) {\n    throw new TypeError('property must be configurable')\n  }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sortBigIntAsc = void 0;\nfunction sortBigIntAsc(a, b) {\n    return (a < b ? -1 : a > b ? 1 : 0);\n}\nexports.sortBigIntAsc = sortBigIntAsc;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.diffEpochValidators = exports.findSeatPrice = void 0;\nconst depd_1 = __importDefault(require(\"depd\"));\nconst utils_1 = require(\"./utils.cjs\");\n/** Finds seat price given validators stakes and number of seats.\n *  Calculation follow the spec: https://nomicon.io/Economics/README.html#validator-selection\n * @param validators: current or next epoch validators.\n * @param maxNumberOfSeats: maximum number of seats in the network.\n * @param minimumStakeRatio: minimum stake ratio\n * @param protocolVersion: version of the protocol from genesis config\n */\nfunction findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio, protocolVersion) {\n    if (protocolVersion && protocolVersion < 49) {\n        return findSeatPriceForProtocolBefore49(validators, maxNumberOfSeats);\n    }\n    if (!minimumStakeRatio) {\n        const deprecate = (0, depd_1.default)('findSeatPrice(validators, maxNumberOfSeats)');\n        deprecate('`use `findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio)` instead');\n        minimumStakeRatio = [1, 6250]; // hardcoded minimumStakeRation from 12/7/21\n    }\n    return findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio);\n}\nexports.findSeatPrice = findSeatPrice;\nfunction findSeatPriceForProtocolBefore49(validators, numSeats) {\n    const stakes = validators.map(v => BigInt(v.stake)).sort(utils_1.sortBigIntAsc);\n    const num = BigInt(numSeats);\n    const stakesSum = stakes.reduce((a, b) => a + b);\n    if (stakesSum < num) {\n        throw new Error('Stakes are below seats');\n    }\n    // assert stakesSum >= numSeats\n    let left = 1n, right = stakesSum + 1n;\n    while (left !== right - 1n) {\n        const mid = (left + right) / 2n;\n        let found = false;\n        let currentSum = 0n;\n        for (let i = 0; i < stakes.length; ++i) {\n            currentSum = currentSum + (stakes[i] / mid);\n            if (currentSum >= num) {\n                left = mid;\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            right = mid;\n        }\n    }\n    return left;\n}\n// nearcore reference: https://github.com/near/nearcore/blob/5a8ae263ec07930cd34d0dcf5bcee250c67c02aa/chain/epoch_manager/src/validator_selection.rs#L308;L315\nfunction findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio) {\n    if (minimumStakeRatio.length != 2) {\n        throw Error('minimumStakeRatio should have 2 elements');\n    }\n    const stakes = validators.map(v => BigInt(v.stake)).sort(utils_1.sortBigIntAsc);\n    const stakesSum = stakes.reduce((a, b) => a + b);\n    if (validators.length < maxNumberOfSeats) {\n        return stakesSum * BigInt(minimumStakeRatio[0]) / BigInt(minimumStakeRatio[1]);\n    }\n    else {\n        return stakes[0] + 1n;\n    }\n}\n/** Diff validators between current and next epoch.\n * Returns additions, subtractions and changes to validator set.\n * @param currentValidators: list of current validators.\n * @param nextValidators: list of next validators.\n */\nfunction diffEpochValidators(currentValidators, nextValidators) {\n    const validatorsMap = new Map();\n    currentValidators.forEach(v => validatorsMap.set(v.account_id, v));\n    const nextValidatorsSet = new Set(nextValidators.map(v => v.account_id));\n    return {\n        newValidators: nextValidators.filter(v => !validatorsMap.has(v.account_id)),\n        removedValidators: currentValidators.filter(v => !nextValidatorsSet.has(v.account_id)),\n        changedValidators: nextValidators.filter(v => (validatorsMap.has(v.account_id) && validatorsMap.get(v.account_id).stake != v.stake))\n            .map(v => ({ current: validatorsMap.get(v.account_id), next: v }))\n    };\n}\nexports.diffEpochValidators = diffEpochValidators;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./constants.cjs\"), exports);\n__exportStar(require(\"./errors/index.cjs\"), exports);\n__exportStar(require(\"./format.cjs\"), exports);\n__exportStar(require(\"./logging.cjs\"), exports);\n__exportStar(require(\"./provider.cjs\"), exports);\n__exportStar(require(\"./validators.cjs\"), exports);\n__exportStar(require(\"./logger/index.cjs\"), exports);\n__exportStar(require(\"./utils.cjs\"), exports);\n", "/**\n * Internal assertion helpers.\n * @module\n */\n\n/** Asserts something is positive integer. */\nfunction anumber(n: number): void {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\n}\n\n/** Is number an Uint8Array? Copied from utils for perf. */\nfunction isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n/** Asserts something is Uint8Array. */\nfunction abytes(b: Uint8Array | undefined, ...lengths: number[]): void {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n\n/** Hash interface. */\nexport type Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\n\n/** Asserts something is hash */\nfunction ahash(h: Hash): void {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  anumber(h.outputLen);\n  anumber(h.blockLen);\n}\n\n/** Asserts a hash instance has not been destroyed / finished */\nfunction aexists(instance: any, checkFinished = true): void {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n\n/** Asserts output is properly-sized byte array */\nfunction aoutput(out: any, instance: any): void {\n  abytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\n  }\n}\n\nexport { anumber, abytes, ahash, aexists, aoutput };\n", "/**\n * Internal webcrypto alias.\n * We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n * See utils.ts for details.\n * @module\n */\ndeclare const globalThis: Record<string, any> | undefined;\nexport const crypto: any =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport function u8(arr: TypedArray): Uint8Array {\n  return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\nexport function u32(arr: TypedArray): Uint32Array {\n  return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n\n// Cast array to view\nexport function createView(arr: TypedArray): DataView {\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word: number, shift: number): number {\n  return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word: number, shift: number): number {\n  return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE: boolean = /* @__PURE__ */ (() =>\n  new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n// The byte swap operation for uint32\nexport function byteSwap(word: number): number {\n  return (\n    ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff)\n  );\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const byteSwapIfBE: (n: number) => number = isLE\n  ? (n: number) => n\n  : (n: number) => byteSwap(n);\n\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr: Uint32Array): void {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * Convert byte array to hex string.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 } as const;\nfunction asciiToBase16(ch: number): number | undefined {\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n  return;\n}\n\n/**\n * Convert hex string to byte array.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n  }\n  return array;\n}\n\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async (): Promise<void> => {};\n\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(\n  iters: number,\n  tick: number,\n  cb: (i: number) => void\n): Promise<void> {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * Convert JS string to byte array.\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error('utf8ToBytes expected string, got ' + typeof str);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n/** Accepted input of hash functions. Strings are converted to byte arrays. */\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n/** For runtime check if class implements interface */\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\n/** Hash function */\nexport type CHash = ReturnType<typeof wrapConstructor>;\n/** Hash function with output */\nexport type CHashO = ReturnType<typeof wrapConstructorWithOpts>;\n/** XOF with output */\nexport type CHashXO = ReturnType<typeof wrapXOFConstructorWithOpts>;\n\n/** Wraps hash function, creating an interface on top of it */\nexport function wrapConstructor<T extends Hash<T>>(\n  hashCons: () => Hash<T>\n): {\n  (msg: Input): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(): Hash<T>;\n} {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts: T): Hash<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts: T): HashXOF<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  // Legacy Node.js compatibility\n  if (crypto && typeof crypto.randomBytes === 'function') {\n    return crypto.randomBytes(bytesLength);\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { aexists, aoutput } from './_assert.js';\nimport { type Input, Hash, createView, toBytes } from './utils.js';\n\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(\n  view: DataView,\n  byteOffset: number,\n  value: bigint,\n  isLE: boolean\n): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n/** Choice: a ? b : c */\nexport function Chi(a: number, b: number, c: number): number {\n  return (a & b) ^ (~a & c);\n}\n\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a: number, b: number, c: number): number {\n  return (a & b) ^ (a & c) ^ (b & c);\n}\n\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport abstract class HashMD<T extends HashMD<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    aexists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array): void {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in\n    // current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest(): Uint8Array {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\nfunction fromBig(\n  n: bigint,\n  le = false\n): {\n  h: number;\n  l: number;\n} {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false): Uint32Array[] {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number): bigint => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number): number => h >>> s;\nconst shrSL = (h: number, l: number, s: number): number => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number): number => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number): number => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number): number => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number): number => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number): number => l;\nconst rotr32L = (h: number, _l: number): number => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number): number => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number): number => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number): number => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number): number => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(\n  Ah: number,\n  Al: number,\n  Bh: number,\n  Bl: number\n): {\n  h: number;\n  l: number;\n} {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number): number => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number): number =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number): number =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number): number =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number): number =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number): number =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64: { fromBig: typeof fromBig; split: typeof split; toBig: (h: number, l: number) => bigint; shrSH: (h: number, _l: number, s: number) => number; shrSL: (h: number, l: number, s: number) => number; rotrSH: (h: number, l: number, s: number) => number; rotrSL: (h: number, l: number, s: number) => number; rotrBH: (h: number, l: number, s: number) => number; rotrBL: (h: number, l: number, s: number) => number; rotr32H: (_h: number, l: number) => number; rotr32L: (h: number, _l: number) => number; rotlSH: (h: number, l: number, s: number) => number; rotlSL: (h: number, l: number, s: number) => number; rotlBH: (h: number, l: number, s: number) => number; rotlBL: (h: number, l: number, s: number) => number; add: typeof add; add3L: (Al: number, Bl: number, Cl: number) => number; add3H: (low: number, Ah: number, Bh: number, Ch: number) => number; add4L: (Al: number, Bl: number, Cl: number, Dl: number) => number; add4H: (low: number, Ah: number, Bh: number, Ch: number, Dh: number) => number; add5H: (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) => number; add5L: (Al: number, Bl: number, Cl: number, Dl: number, El: number) => number; } = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n", "/**\n * SHA2-512 a.k.a. sha512 and sha384. It is slower than sha256 in js because u64 operations are slow.\n *\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [the paper on truncated SHA512/256](https://eprint.iacr.org/2010/548.pdf).\n * @module\n */\nimport { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { type CHash, wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  protected Ah: number = 0x6a09e667 | 0;\n  protected Al: number = 0xf3bcc908 | 0;\n  protected Bh: number = 0xbb67ae85 | 0;\n  protected Bl: number = 0x84caa73b | 0;\n  protected Ch: number = 0x3c6ef372 | 0;\n  protected Cl: number = 0xfe94f82b | 0;\n  protected Dh: number = 0xa54ff53a | 0;\n  protected Dl: number = 0x5f1d36f1 | 0;\n  protected Eh: number = 0x510e527f | 0;\n  protected El: number = 0xade682d1 | 0;\n  protected Fh: number = 0x9b05688c | 0;\n  protected Fl: number = 0x2b3e6c1f | 0;\n  protected Gh: number = 0x1f83d9ab | 0;\n  protected Gl: number = 0xfb41bd6b | 0;\n  protected Hh: number = 0x5be0cd19 | 0;\n  protected Hl: number = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ): void {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean(): void {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy(): void {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nexport class SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  protected Ah: number = 0x8c3d37c8 | 0;\n  protected Al: number = 0x19544da2 | 0;\n  protected Bh: number = 0x73e19966 | 0;\n  protected Bl: number = 0x89dcd4d6 | 0;\n  protected Ch: number = 0x1dfab7ae | 0;\n  protected Cl: number = 0x32ff9c82 | 0;\n  protected Dh: number = 0x679dd514 | 0;\n  protected Dl: number = 0x582f9fcf | 0;\n  protected Eh: number = 0x0f6d2b69 | 0;\n  protected El: number = 0x7bd44da8 | 0;\n  protected Fh: number = 0x77e36f73 | 0;\n  protected Fl: number = 0x04c48942 | 0;\n  protected Gh: number = 0x3f9d85a8 | 0;\n  protected Gl: number = 0x6a1d36c8 | 0;\n  protected Hh: number = 0x1112e6ad | 0;\n  protected Hl: number = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nexport class SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  protected Ah: number = 0x22312194 | 0;\n  protected Al: number = 0xfc2bf72c | 0;\n  protected Bh: number = 0x9f555fa3 | 0;\n  protected Bl: number = 0xc84c64c2 | 0;\n  protected Ch: number = 0x2393b86b | 0;\n  protected Cl: number = 0x6f53b151 | 0;\n  protected Dh: number = 0x96387719 | 0;\n  protected Dl: number = 0x5940eabd | 0;\n  protected Eh: number = 0x96283ee2 | 0;\n  protected El: number = 0xa88effe3 | 0;\n  protected Fh: number = 0xbe5e1e25 | 0;\n  protected Fl: number = 0x53863992 | 0;\n  protected Gh: number = 0x2b0199fc | 0;\n  protected Gl: number = 0x2c85b8aa | 0;\n  protected Hh: number = 0x0eb72ddc | 0;\n  protected Hl: number = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nexport class SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  protected Ah: number = 0xcbbb9d5d | 0;\n  protected Al: number = 0xc1059ed8 | 0;\n  protected Bh: number = 0x629a292a | 0;\n  protected Bl: number = 0x367cd507 | 0;\n  protected Ch: number = 0x9159015a | 0;\n  protected Cl: number = 0x3070dd17 | 0;\n  protected Dh: number = 0x152fecd8 | 0;\n  protected Dl: number = 0xf70e5939 | 0;\n  protected Eh: number = 0x67332667 | 0;\n  protected El: number = 0xffc00b31 | 0;\n  protected Fh: number = 0x8eb44a87 | 0;\n  protected Fl: number = 0x68581511 | 0;\n  protected Gh: number = 0xdb0c2e0d | 0;\n  protected Gl: number = 0x64f98fa7 | 0;\n  protected Hh: number = 0x47b5481d | 0;\n  protected Hl: number = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\n/** SHA2-512 hash function. */\nexport const sha512: CHash = /* @__PURE__ */ wrapConstructor(() => new SHA512());\n/** SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks. */\nexport const sha512_224: CHash = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\n/** SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks. */\nexport const sha512_256: CHash = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\n/** SHA2-384 hash function. */\nexport const sha384: CHash = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n", "/**\n * Hex, bytes and number utilities.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nexport function isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\nexport function abytes(item: unknown): void {\n  if (!isBytes(item)) throw new Error('Uint8Array expected');\n}\n\nexport function abool(title: string, value: boolean): void {\n  if (typeof value !== 'boolean') throw new Error(title + ' boolean expected, got ' + value);\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? '0' + hex : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  return hex === '' ? _0n : BigInt('0x' + hex); // Big Endian\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 } as const;\nfunction asciiToBase16(ch: number): number | undefined {\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  abytes(bytes);\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(title + ' must be hex string or Uint8Array, cause: ' + e);\n    }\n  } else if (isBytes(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(title + ' must be hex string or Uint8Array');\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(title + ' of length ' + expectedLength + ' expected, got ' + len);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a: Uint8Array, b: Uint8Array): boolean {\n  if (a.length !== b.length) return false;\n  let diff = 0;\n  for (let i = 0; i < a.length; i++) diff |= a[i] ^ b[i];\n  return diff === 0;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error('string expected');\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Is positive bigint\nconst isPosBig = (n: bigint) => typeof n === 'bigint' && _0n <= n;\n\nexport function inRange(n: bigint, min: bigint, max: bigint): boolean {\n  return isPosBig(n) && isPosBig(min) && isPosBig(max) && min <= n && n < max;\n}\n\n/**\n * Asserts min <= n < max. NOTE: It's < max and not <= max.\n * @example\n * aInRange('x', x, 1n, 256n); // would assume x is in (1n..255n)\n */\nexport function aInRange(title: string, n: bigint, min: bigint, max: bigint): void {\n  // Why min <= n < max and not a (min < n < max) OR b (min <= n <= max)?\n  // consider P=256n, min=0n, max=P\n  // - a for min=0 would require -1:          `inRange('x', x, -1n, P)`\n  // - b would commonly require subtraction:  `inRange('x', x, 0n, P - 1n)`\n  // - our way is the cleanest:               `inRange('x', x, 0n, P)\n  if (!inRange(n, min, max))\n    throw new Error('expected valid ' + title + ': ' + min + ' <= n < ' + max + ', got ' + n);\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n: bigint): number {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number): bigint {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n: bigint, pos: number, value: boolean): bigint {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number): bigint => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any): boolean => typeof val === 'bigint',\n  function: (val: any): boolean => typeof val === 'function',\n  boolean: (val: any): boolean => typeof val === 'boolean',\n  string: (val: any): boolean => typeof val === 'string',\n  stringOrUint8Array: (val: any): boolean => typeof val === 'string' || isBytes(val),\n  isSafeInteger: (val: any): boolean => Number.isSafeInteger(val),\n  array: (val: any): boolean => Array.isArray(val),\n  field: (val: any, object: any): any => (object as any).Fp.isValid(val),\n  hash: (val: any): boolean => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n): T {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function') throw new Error('invalid validator function');\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        'param ' + String(fieldName) + ' is invalid. Expected ' + type + ', got ' + val\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n\n/**\n * throws not implemented error\n */\nexport const notImplemented = (): never => {\n  throw new Error('not implemented');\n};\n\n/**\n * Memoizes (caches) computation result.\n * Uses WeakMap: the value is going auto-cleaned by GC after last reference is removed.\n */\nexport function memoized<T extends object, R, O extends any[]>(\n  fn: (arg: T, ...args: O) => R\n): (arg: T, ...args: O) => R {\n  const map = new WeakMap<T, R>();\n  return (arg: T, ...args: O): R => {\n    const val = map.get(arg);\n    if (val !== undefined) return val;\n    const computed = fn(arg, ...args);\n    map.set(arg, computed);\n    return computed;\n  };\n}\n", "/**\n * Utils for modular division and finite fields.\n * A finite field over 11 is integer number operations `mod 11`.\n * There is no division: it is replaced by modular multiplicative inverse.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport {\n  bitMask,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  numberToBytesBE,\n  numberToBytesLE,\n  validateObject,\n} from './utils.js';\n\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = /* @__PURE__ */ BigInt(2), _3n = /* @__PURE__ */ BigInt(3);\n// prettier-ignore\nconst _4n = /* @__PURE__ */ BigInt(4), _5n = /* @__PURE__ */ BigInt(5), _8n = /* @__PURE__ */ BigInt(8);\n// prettier-ignore\nconst _9n =/* @__PURE__ */ BigInt(9), _16n = /* @__PURE__ */ BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @todo use field version && remove\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (power < _0n) throw new Error('invalid exponent, negatives unsupported');\n  if (modulo <= _0n) throw new Error('invalid modulus');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n/** Does `x^(2^power)` mod p. `pow2(30, 4)` == `30^(2^4)` */\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n/**\n * Inverses number over modulo.\n * Implemented using [Euclidean GCD](https://brilliant.org/wiki/extended-euclidean-algorithm/).\n */\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n) throw new Error('invert: expected non-zero number');\n  if (modulo <= _0n) throw new Error('invert: expected positive modulus, got ' + modulo);\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P: bigint): <T>(Fp: IField<T>, n: T) => T {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) ≡ 1    if a is a square (mod p)\n  // (a | p) ≡ -1   if a is not a square (mod p)\n  // (a | p) ≡ 0    if a ≡ 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++) {\n    // Crash instead of infinity loop, we cannot reasonable count until P.\n    if (Z > 1000) throw new Error('Cannot find square root: likely non-prime P');\n  }\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\n/**\n * Square root for a finite field. It will try to check if optimizations are applicable and fall back to 4:\n *\n * 1. P ≡ 3 (mod 4)\n * 2. P ≡ 5 (mod 8)\n * 3. P ≡ 9 (mod 16)\n * 4. Tonelli-Shanks algorithm\n *\n * Different algorithms can give different roots, it is up to user to decide which one they want.\n * For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n */\nexport function FpSqrt(P: bigint): <T>(Fp: IField<T>, n: T) => T {\n  // P ≡ 3 (mod 4)\n  // √n = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P ≡ 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint): boolean =>\n  (mod(num, modulo) & _1n) === _1n;\n\n/** Field is not always over prime: for example, Fp2 has ORDER(q)=p^m. */\nexport interface IField<T> {\n  ORDER: bigint;\n  isLE: boolean;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in\n  // [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#section-4.1).\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>): IField<T> {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\n\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('invalid exponent, negatives unsupported');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n/**\n * Legendre symbol.\n * * (a | p) ≡ 1    if a is a square (mod p), quadratic residue\n * * (a | p) ≡ -1   if a is not a square (mod p), quadratic non residue\n * * (a | p) ≡ 0    if a ≡ 0 (mod p)\n */\nexport function FpLegendre(order: bigint): <T>(f: IField<T>, x: T) => T {\n  const legendreConst = (order - _1n) / _2n; // Integer arithmetic\n  return <T>(f: IField<T>, x: T): T => f.pow(x, legendreConst);\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>): (x: T) => boolean {\n  const legendre = FpLegendre(f.ORDER);\n  return (x: T): boolean => {\n    const p = legendre(f, x);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(\n  n: bigint,\n  nBitLength?: number\n): {\n  nBitLength: number;\n  nByteLength: number;\n} {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a finite field over prime.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * Fragile: always run a benchmark on a change.\n * Security note: operations don't check 'isValid' for all elements for performance reasons,\n * it is caller responsibility to check this.\n * This is low-level code, please make sure you know what you're doing.\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error('invalid field: expected ORDER > 0, got ' + ORDER);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('invalid field: expected ORDER of <= 2048 bytes');\n  let sqrtP: ReturnType<typeof FpSqrt>; // cached sqrtP\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    isLE,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error('invalid field element: expected bigint, got ' + typeof num);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt:\n      redef.sqrt ||\n      ((n) => {\n        if (!sqrtP) sqrtP = FpSqrt(ORDER);\n        return sqrtP(f, n);\n      }),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error('Field.fromBytes: expected ' + BYTES + ' bytes, got ' + bytes.length);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T): T {\n  if (!Fp.isOdd) throw new Error(\"Field doesn't have isOdd\");\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T): T {\n  if (!Fp.isOdd) throw new Error(\"Field doesn't have isOdd\");\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use `mapKeyToField` instead\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(\n      'hashToPrivateScalar: expected ' + minLen + '-1024 bytes of input, got ' + hashLen\n    );\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder: bigint): number {\n  if (typeof fieldOrder !== 'bigint') throw new Error('field order must be bigint');\n  const bitLength = fieldOrder.toString(2).length;\n  return Math.ceil(bitLength / 8);\n}\n\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder: bigint): number {\n  const length = getFieldBytesLength(fieldOrder);\n  return length + Math.ceil(length / 2);\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key: Uint8Array, fieldOrder: bigint, isLE = false): Uint8Array {\n  const len = key.length;\n  const fieldLen = getFieldBytesLength(fieldOrder);\n  const minLen = getMinHashLength(fieldOrder);\n  // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n  if (len < 16 || len < minLen || len > 1024)\n    throw new Error('expected ' + minLen + '-1024 bytes of input, got ' + len);\n  const num = isLE ? bytesToNumberLE(key) : bytesToNumberBE(key);\n  // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n  const reduced = mod(num, fieldOrder - _1n) + _1n;\n  return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n", "/**\n * Methods for elliptic curve multiplication by scalars.\n * Contains wNAF, pippenger\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { type IField, nLength, validateField } from './modular.js';\nimport { bitLen, validateObject } from './utils.js';\n\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\nfunction constTimeNegate<T extends Group<T>>(condition: boolean, item: T): T {\n  const neg = item.negate();\n  return condition ? neg : item;\n}\n\nfunction validateW(W: number, bits: number) {\n  if (!Number.isSafeInteger(W) || W <= 0 || W > bits)\n    throw new Error('invalid window size, expected [1..' + bits + '], got W=' + W);\n}\n\nfunction calcWOpts(W: number, bits: number) {\n  validateW(W, bits);\n  const windows = Math.ceil(bits / W) + 1; // +1, because\n  const windowSize = 2 ** (W - 1); // -1 because we skip zero\n  return { windows, windowSize };\n}\n\nfunction validateMSMPoints(points: any[], c: any) {\n  if (!Array.isArray(points)) throw new Error('array expected');\n  points.forEach((p, i) => {\n    if (!(p instanceof c)) throw new Error('invalid point at index ' + i);\n  });\n}\nfunction validateMSMScalars(scalars: any[], field: any) {\n  if (!Array.isArray(scalars)) throw new Error('array of scalars expected');\n  scalars.forEach((s, i) => {\n    if (!field.isValid(s)) throw new Error('invalid scalar at index ' + i);\n  });\n}\n\n// Since points in different groups cannot be equal (different object constructor),\n// we can have single place to store precomputes\nconst pointPrecomputes = new WeakMap<any, any[]>();\nconst pointWindowSizes = new WeakMap<any, number>(); // This allows use make points immutable (nothing changes inside)\n\nfunction getW(P: any): number {\n  return pointWindowSizes.get(P) || 1;\n}\n\nexport type IWNAF<T extends Group<T>> = {\n  constTimeNegate: <T extends Group<T>>(condition: boolean, item: T) => T;\n  hasPrecomputes(elm: T): boolean;\n  unsafeLadder(elm: T, n: bigint, p?: T): T;\n  precomputeWindow(elm: T, W: number): Group<T>[];\n  wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T };\n  wNAFUnsafe(W: number, precomputes: T[], n: bigint, acc?: T): T;\n  getPrecomputes(W: number, P: T, transform: Mapper<T>): T[];\n  wNAFCached(P: T, n: bigint, transform: Mapper<T>): { p: T; f: T };\n  wNAFCachedUnsafe(P: T, n: bigint, transform: Mapper<T>, prev?: T): T;\n  setWindowSize(P: T, W: number): void;\n};\n\n/**\n * Elliptic curve multiplication of Point by scalar. Fragile.\n * Scalars should always be less than curve order: this should be checked inside of a curve itself.\n * Creates precomputation tables for fast multiplication:\n * - private scalar is split by fixed size windows of W bits\n * - every window point is collected from window's table & added to accumulator\n * - since windows are different, same point inside tables won't be accessed more than once per calc\n * - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n * - +1 window is neccessary for wNAF\n * - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n *\n * @todo Research returning 2d JS array of windows, instead of a single window.\n * This would allow windows to be in different memory locations\n */\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number): IWNAF<T> {\n  return {\n    constTimeNegate,\n\n    hasPrecomputes(elm: T) {\n      return getW(elm) !== 1;\n    },\n\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint, p = c.ZERO) {\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @param elm Point instance\n     * @param W window size\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = calcWOpts(W, bits);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = calcWOpts(W, bits);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    /**\n     * Implements ec unsafe (non const-time) multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @param acc accumulator point to add result of multiplication\n     * @returns point\n     */\n    wNAFUnsafe(W: number, precomputes: T[], n: bigint, acc: T = c.ZERO): T {\n      const { windows, windowSize } = calcWOpts(W, bits);\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        if (n === _0n) break; // No need to go over empty scalar\n        // Extract W bits.\n        let wbits = Number(n & mask);\n        // Shift number by W bits.\n        n >>= shiftBy;\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n        if (wbits === 0) continue;\n        let curr = precomputes[offset + Math.abs(wbits) - 1]; // -1 because we skip zero\n        if (wbits < 0) curr = curr.negate();\n        // NOTE: by re-using acc, we can save a lot of additions in case of MSM\n        acc = acc.add(curr);\n      }\n      return acc;\n    },\n\n    getPrecomputes(W: number, P: T, transform: Mapper<T>): T[] {\n      // Calculate precomputes on a first run, reuse them after\n      let comp = pointPrecomputes.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) pointPrecomputes.set(P, transform(comp));\n      }\n      return comp;\n    },\n\n    wNAFCached(P: T, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      const W = getW(P);\n      return this.wNAF(W, this.getPrecomputes(W, P, transform), n);\n    },\n\n    wNAFCachedUnsafe(P: T, n: bigint, transform: Mapper<T>, prev?: T): T {\n      const W = getW(P);\n      if (W === 1) return this.unsafeLadder(P, n, prev); // For W=1 ladder is ~x2 faster\n      return this.wNAFUnsafe(W, this.getPrecomputes(W, P, transform), n, prev);\n    },\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n\n    setWindowSize(P: T, W: number) {\n      validateW(W, bits);\n      pointWindowSizes.set(P, W);\n      pointPrecomputes.delete(P);\n    },\n  };\n}\n\n/**\n * Pippenger algorithm for multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * 30x faster vs naive addition on L=4096, 10x faster with precomputes.\n * For N=254bit, L=1, it does: 1024 ADD + 254 DBL. For L=5: 1536 ADD + 254 DBL.\n * Algorithmically constant-time (for same L), even when 1 point + scalar, or when scalar = 0.\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @param scalars array of L scalars (aka private keys / bigints)\n */\nexport function pippenger<T extends Group<T>>(\n  c: GroupConstructor<T>,\n  fieldN: IField<bigint>,\n  points: T[],\n  scalars: bigint[]\n): T {\n  // If we split scalars by some window (let's say 8 bits), every chunk will only\n  // take 256 buckets even if there are 4096 scalars, also re-uses double.\n  // TODO:\n  // - https://eprint.iacr.org/2024/750.pdf\n  // - https://tches.iacr.org/index.php/TCHES/article/view/10287\n  // 0 is accepted in scalars\n  validateMSMPoints(points, c);\n  validateMSMScalars(scalars, fieldN);\n  if (points.length !== scalars.length)\n    throw new Error('arrays of points and scalars must have equal length');\n  const zero = c.ZERO;\n  const wbits = bitLen(BigInt(points.length));\n  const windowSize = wbits > 12 ? wbits - 3 : wbits > 4 ? wbits - 2 : wbits ? 2 : 1; // in bits\n  const MASK = (1 << windowSize) - 1;\n  const buckets = new Array(MASK + 1).fill(zero); // +1 for zero array\n  const lastBits = Math.floor((fieldN.BITS - 1) / windowSize) * windowSize;\n  let sum = zero;\n  for (let i = lastBits; i >= 0; i -= windowSize) {\n    buckets.fill(zero);\n    for (let j = 0; j < scalars.length; j++) {\n      const scalar = scalars[j];\n      const wbits = Number((scalar >> BigInt(i)) & BigInt(MASK));\n      buckets[wbits] = buckets[wbits].add(points[j]);\n    }\n    let resI = zero; // not using this will do small speed-up, but will lose ct\n    // Skip first bucket, because it is zero\n    for (let j = buckets.length - 1, sumI = zero; j > 0; j--) {\n      sumI = sumI.add(buckets[j]);\n      resI = resI.add(sumI);\n    }\n    sum = sum.add(resI);\n    if (i !== 0) for (let j = 0; j < windowSize; j++) sum = sum.double();\n  }\n  return sum as T;\n}\n/**\n * Precomputed multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @returns function which multiplies points with scaars\n */\nexport function precomputeMSMUnsafe<T extends Group<T>>(\n  c: GroupConstructor<T>,\n  fieldN: IField<bigint>,\n  points: T[],\n  windowSize: number\n): (scalars: bigint[]) => T {\n  /**\n   * Performance Analysis of Window-based Precomputation\n   *\n   * Base Case (256-bit scalar, 8-bit window):\n   * - Standard precomputation requires:\n   *   - 31 additions per scalar × 256 scalars = 7,936 ops\n   *   - Plus 255 summary additions = 8,191 total ops\n   *   Note: Summary additions can be optimized via accumulator\n   *\n   * Chunked Precomputation Analysis:\n   * - Using 32 chunks requires:\n   *   - 255 additions per chunk\n   *   - 256 doublings\n   *   - Total: (255 × 32) + 256 = 8,416 ops\n   *\n   * Memory Usage Comparison:\n   * Window Size | Standard Points | Chunked Points\n   * ------------|-----------------|---------------\n   *     4-bit   |     520         |      15\n   *     8-bit   |    4,224        |     255\n   *    10-bit   |   13,824        |   1,023\n   *    16-bit   |  557,056        |  65,535\n   *\n   * Key Advantages:\n   * 1. Enables larger window sizes due to reduced memory overhead\n   * 2. More efficient for smaller scalar counts:\n   *    - 16 chunks: (16 × 255) + 256 = 4,336 ops\n   *    - ~2x faster than standard 8,191 ops\n   *\n   * Limitations:\n   * - Not suitable for plain precomputes (requires 256 constant doublings)\n   * - Performance degrades with larger scalar counts:\n   *   - Optimal for ~256 scalars\n   *   - Less efficient for 4096+ scalars (Pippenger preferred)\n   */\n  validateW(windowSize, fieldN.BITS);\n  validateMSMPoints(points, c);\n  const zero = c.ZERO;\n  const tableSize = 2 ** windowSize - 1; // table size (without zero)\n  const chunks = Math.ceil(fieldN.BITS / windowSize); // chunks of item\n  const MASK = BigInt((1 << windowSize) - 1);\n  const tables = points.map((p: T) => {\n    const res = [];\n    for (let i = 0, acc = p; i < tableSize; i++) {\n      res.push(acc);\n      acc = acc.add(p);\n    }\n    return res;\n  });\n  return (scalars: bigint[]): T => {\n    validateMSMScalars(scalars, fieldN);\n    if (scalars.length > points.length)\n      throw new Error('array of scalars must be smaller than array of points');\n    let res = zero;\n    for (let i = 0; i < chunks; i++) {\n      // No need to double if accumulator is still zero.\n      if (res !== zero) for (let j = 0; j < windowSize; j++) res = res.double();\n      const shiftBy = BigInt(chunks * windowSize - (i + 1) * windowSize);\n      for (let j = 0; j < scalars.length; j++) {\n        const n = scalars[j];\n        const curr = Number((n >> shiftBy) & MASK);\n        if (!curr) continue; // skip zero scalars chunks\n        res = res.add(tables[j][curr - 1]);\n      }\n    }\n    return res;\n  };\n}\n\n/**\n * Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n * Though generator can be different (Fp2 / Fp6 for BLS).\n */\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(\n  curve: BasicCurve<FP> & T\n): Readonly<\n  {\n    readonly nBitLength: number;\n    readonly nByteLength: number;\n  } & BasicCurve<FP> &\n    T & {\n      p: bigint;\n    }\n> {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n", "/**\n * Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y².\n * For design rationale of types / exports, see weierstrass module documentation.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport {\n  type AffinePoint,\n  type BasicCurve,\n  type Group,\n  type GroupConstructor,\n  pippenger,\n  validateBasic,\n  wNAF,\n} from './curve.js';\nimport { Field, mod } from './modular.js';\nimport * as ut from './utils.js';\nimport { abool, ensureBytes, type FHash, type Hex, memoized } from './utils.js';\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n\n/** Edwards curves must declare params a & d. */\nexport type CurveType = BasicCurve<bigint> & {\n  a: bigint; // curve param a\n  d: bigint; // curve param d\n  hash: FHash; // Hashing\n  randomBytes: (bytesLength?: number) => Uint8Array; // CSPRNG\n  adjustScalarBytes?: (bytes: Uint8Array) => Uint8Array; // clears bits to get valid field elemtn\n  domain?: (data: Uint8Array, ctx: Uint8Array, phflag: boolean) => Uint8Array; // Used for hashing\n  uvRatio?: (u: bigint, v: bigint) => { isValid: boolean; value: bigint }; // Ratio √(u/v)\n  prehash?: FHash; // RFC 8032 pre-hashing of messages to sign() / verify()\n  mapToCurve?: (scalar: bigint[]) => AffinePoint<bigint>; // for hash-to-curve standard\n};\n\nexport type CurveTypeWithLength = Readonly<CurveType & { nByteLength: number; nBitLength: number }>;\n\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\n\nfunction validateOpts(curve: CurveType): CurveTypeWithLength {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    curve,\n    {\n      hash: 'function',\n      a: 'bigint',\n      d: 'bigint',\n      randomBytes: 'function',\n    },\n    {\n      adjustScalarBytes: 'function',\n      domain: 'function',\n      uvRatio: 'function',\n      mapToCurve: 'function',\n    }\n  );\n  // Set defaults\n  return Object.freeze({ ...opts } as const);\n}\n\n/** Instance of Extended Point with coordinates in X, Y, Z, T. */\nexport interface ExtPointType extends Group<ExtPointType> {\n  readonly ex: bigint;\n  readonly ey: bigint;\n  readonly ez: bigint;\n  readonly et: bigint;\n  get x(): bigint;\n  get y(): bigint;\n  assertValidity(): void;\n  multiply(scalar: bigint): ExtPointType;\n  multiplyUnsafe(scalar: bigint): ExtPointType;\n  isSmallOrder(): boolean;\n  isTorsionFree(): boolean;\n  clearCofactor(): ExtPointType;\n  toAffine(iz?: bigint): AffinePoint<bigint>;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n  _setWindowSize(windowSize: number): void;\n}\n/** Static methods of Extended Point with coordinates in X, Y, Z, T. */\nexport interface ExtPointConstructor extends GroupConstructor<ExtPointType> {\n  new (x: bigint, y: bigint, z: bigint, t: bigint): ExtPointType;\n  fromAffine(p: AffinePoint<bigint>): ExtPointType;\n  fromHex(hex: Hex): ExtPointType;\n  fromPrivateKey(privateKey: Hex): ExtPointType;\n  msm(points: ExtPointType[], scalars: bigint[]): ExtPointType;\n}\n\n/**\n * Edwards Curve interface.\n * Main methods: `getPublicKey(priv)`, `sign(msg, priv)`, `verify(sig, msg, pub)`.\n */\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: Hex) => Uint8Array;\n  sign: (message: Hex, privateKey: Hex, options?: { context?: Hex }) => Uint8Array;\n  verify: (\n    sig: Hex,\n    message: Hex,\n    publicKey: Hex,\n    options?: { context?: Hex; zip215: boolean }\n  ) => boolean;\n  ExtendedPoint: ExtPointConstructor;\n  utils: {\n    randomPrivateKey: () => Uint8Array;\n    getExtendedPublicKey: (key: Hex) => {\n      head: Uint8Array;\n      prefix: Uint8Array;\n      scalar: bigint;\n      point: ExtPointType;\n      pointBytes: Uint8Array;\n    };\n    precompute: (windowSize?: number, point?: ExtPointType) => ExtPointType;\n  };\n};\n\n/**\n * Creates Twisted Edwards curve with EdDSA signatures.\n * @example\n * import { Field } from '@noble/curves/abstract/modular';\n * // Before that, define BigInt-s: a, d, p, n, Gx, Gy, h\n * const curve = twistedEdwards({ a, d, Fp: Field(p), n, Gx, Gy, h })\n */\nexport function twistedEdwards(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const {\n    Fp,\n    n: CURVE_ORDER,\n    prehash: prehash,\n    hash: cHash,\n    randomBytes,\n    nByteLength,\n    h: cofactor,\n  } = CURVE;\n  // Important:\n  // There are some places where Fp.BYTES is used instead of nByteLength.\n  // So far, everything has been tested with curves of Fp.BYTES == nByteLength.\n  // TODO: test and find curves which behave otherwise.\n  const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n  const modP = Fp.create; // Function overrides\n  const Fn = Field(CURVE.n, CURVE.nBitLength);\n\n  // sqrt(u/v)\n  const uvRatio =\n    CURVE.uvRatio ||\n    ((u: bigint, v: bigint) => {\n      try {\n        return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n      } catch (e) {\n        return { isValid: false, value: _0n };\n      }\n    });\n  const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes: Uint8Array) => bytes); // NOOP\n  const domain =\n    CURVE.domain ||\n    ((data: Uint8Array, ctx: Uint8Array, phflag: boolean) => {\n      abool('phflag', phflag);\n      if (ctx.length || phflag) throw new Error('Contexts/pre-hash are not supported');\n      return data;\n    }); // NOOP\n  // 0 <= n < MASK\n  // Coordinates larger than Fp.ORDER are allowed for zip215\n  function aCoordinate(title: string, n: bigint) {\n    ut.aInRange('coordinate ' + title, n, _0n, MASK);\n  }\n\n  function assertPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ExtendedPoint expected');\n  }\n  // Converts Extended point to default (x, y) coordinates.\n  // Can accept precomputed Z^-1 - for example, from invertBatch.\n  const toAffineMemo = memoized((p: Point, iz?: bigint): AffinePoint<bigint> => {\n    const { ex: x, ey: y, ez: z } = p;\n    const is0 = p.is0();\n    if (iz == null) iz = is0 ? _8n : (Fp.inv(z) as bigint); // 8 was chosen arbitrarily\n    const ax = modP(x * iz);\n    const ay = modP(y * iz);\n    const zz = modP(z * iz);\n    if (is0) return { x: _0n, y: _1n };\n    if (zz !== _1n) throw new Error('invZ was invalid');\n    return { x: ax, y: ay };\n  });\n  const assertValidMemo = memoized((p: Point) => {\n    const { a, d } = CURVE;\n    if (p.is0()) throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n    // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n    // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n    const { ex: X, ey: Y, ez: Z, et: T } = p;\n    const X2 = modP(X * X); // X²\n    const Y2 = modP(Y * Y); // Y²\n    const Z2 = modP(Z * Z); // Z²\n    const Z4 = modP(Z2 * Z2); // Z⁴\n    const aX2 = modP(X2 * a); // aX²\n    const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n    const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n    if (left !== right) throw new Error('bad point: equation left != right (1)');\n    // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n    const XY = modP(X * Y);\n    const ZT = modP(Z * T);\n    if (XY !== ZT) throw new Error('bad point: equation left != right (2)');\n    return true;\n  });\n\n  // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n  // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n  class Point implements ExtPointType {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    static readonly ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n\n    constructor(\n      readonly ex: bigint,\n      readonly ey: bigint,\n      readonly ez: bigint,\n      readonly et: bigint\n    ) {\n      aCoordinate('x', ex);\n      aCoordinate('y', ey);\n      aCoordinate('z', ez);\n      aCoordinate('t', et);\n      Object.freeze(this);\n    }\n\n    get x(): bigint {\n      return this.toAffine().x;\n    }\n    get y(): bigint {\n      return this.toAffine().y;\n    }\n\n    static fromAffine(p: AffinePoint<bigint>): Point {\n      if (p instanceof Point) throw new Error('extended point not allowed');\n      const { x, y } = p || {};\n      aCoordinate('x', x);\n      aCoordinate('y', y);\n      return new Point(x, y, _1n, modP(x * y));\n    }\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.ez));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n    // Multiscalar Multiplication\n    static msm(points: Point[], scalars: bigint[]): Point {\n      return pippenger(Point, Fn, points, scalars);\n    }\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      wnaf.setWindowSize(this, windowSize);\n    }\n    // Not required for fromHex(), which always creates valid points.\n    // Could be useful for fromAffine().\n    assertValidity(): void {\n      assertValidMemo(this);\n    }\n\n    // Compare one point to another.\n    equals(other: Point): boolean {\n      assertPoint(other);\n      const { ex: X1, ey: Y1, ez: Z1 } = this;\n      const { ex: X2, ey: Y2, ez: Z2 } = other;\n      const X1Z2 = modP(X1 * Z2);\n      const X2Z1 = modP(X2 * Z1);\n      const Y1Z2 = modP(Y1 * Z2);\n      const Y2Z1 = modP(Y2 * Z1);\n      return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n\n    is0(): boolean {\n      return this.equals(Point.ZERO);\n    }\n\n    negate(): Point {\n      // Flips point sign to a negative one (-x, y in affine coords)\n      return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n    }\n\n    // Fast algo for doubling Extended Point.\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n    // Cost: 4M + 4S + 1*a + 6add + 1*2.\n    double(): Point {\n      const { a } = CURVE;\n      const { ex: X1, ey: Y1, ez: Z1 } = this;\n      const A = modP(X1 * X1); // A = X12\n      const B = modP(Y1 * Y1); // B = Y12\n      const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n      const D = modP(a * A); // D = a*A\n      const x1y1 = X1 + Y1;\n      const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n      const G = D + B; // G = D+B\n      const F = G - C; // F = G-C\n      const H = D - B; // H = D-B\n      const X3 = modP(E * F); // X3 = E*F\n      const Y3 = modP(G * H); // Y3 = G*H\n      const T3 = modP(E * H); // T3 = E*H\n      const Z3 = modP(F * G); // Z3 = F*G\n      return new Point(X3, Y3, Z3, T3);\n    }\n\n    // Fast algo for adding 2 Extended Points.\n    // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n    // Cost: 9M + 1*a + 1*d + 7add.\n    add(other: Point) {\n      assertPoint(other);\n      const { a, d } = CURVE;\n      const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n      const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n      // Faster algo for adding 2 Extended Points when curve's a=-1.\n      // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n      // Cost: 8M + 8add + 2*2.\n      // Note: It does not check whether the `other` point is valid.\n      if (a === BigInt(-1)) {\n        const A = modP((Y1 - X1) * (Y2 + X2));\n        const B = modP((Y1 + X1) * (Y2 - X2));\n        const F = modP(B - A);\n        if (F === _0n) return this.double(); // Same point. Tests say it doesn't affect timing\n        const C = modP(Z1 * _2n * T2);\n        const D = modP(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = modP(E * F);\n        const Y3 = modP(G * H);\n        const T3 = modP(E * H);\n        const Z3 = modP(F * G);\n        return new Point(X3, Y3, Z3, T3);\n      }\n      const A = modP(X1 * X2); // A = X1*X2\n      const B = modP(Y1 * Y2); // B = Y1*Y2\n      const C = modP(T1 * d * T2); // C = T1*d*T2\n      const D = modP(Z1 * Z2); // D = Z1*Z2\n      const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n      const F = D - C; // F = D-C\n      const G = D + C; // G = D+C\n      const H = modP(B - a * A); // H = B-a*A\n      const X3 = modP(E * F); // X3 = E*F\n      const Y3 = modP(G * H); // Y3 = G*H\n      const T3 = modP(E * H); // T3 = E*H\n      const Z3 = modP(F * G); // Z3 = F*G\n\n      return new Point(X3, Y3, Z3, T3);\n    }\n\n    subtract(other: Point): Point {\n      return this.add(other.negate());\n    }\n\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, n, Point.normalizeZ);\n    }\n\n    // Constant-time multiplication.\n    multiply(scalar: bigint): Point {\n      const n = scalar;\n      ut.aInRange('scalar', n, _1n, CURVE_ORDER); // 1 <= scalar < L\n      const { p, f } = this.wNAF(n);\n      return Point.normalizeZ([p, f])[0];\n    }\n\n    // Non-constant-time multiplication. Uses double-and-add algorithm.\n    // It's faster, but should only be used when you don't care about\n    // an exposed private key e.g. sig verification.\n    // Does NOT allow scalars higher than CURVE.n.\n    // Accepts optional accumulator to merge with multiply (important for sparse scalars)\n    multiplyUnsafe(scalar: bigint, acc = Point.ZERO): Point {\n      const n = scalar;\n      ut.aInRange('scalar', n, _0n, CURVE_ORDER); // 0 <= scalar < L\n      if (n === _0n) return I;\n      if (this.is0() || n === _1n) return this;\n      return wnaf.wNAFCachedUnsafe(this, n, Point.normalizeZ, acc);\n    }\n\n    // Checks if point is of small order.\n    // If you add something to small order point, you will have \"dirty\"\n    // point with torsion component.\n    // Multiplies point by cofactor and checks if the result is 0.\n    isSmallOrder(): boolean {\n      return this.multiplyUnsafe(cofactor).is0();\n    }\n\n    // Multiplies point by curve order and checks if the result is 0.\n    // Returns `false` is the point is dirty.\n    isTorsionFree(): boolean {\n      return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n    }\n\n    // Converts Extended point to default (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    toAffine(iz?: bigint): AffinePoint<bigint> {\n      return toAffineMemo(this, iz);\n    }\n\n    clearCofactor(): Point {\n      const { h: cofactor } = CURVE;\n      if (cofactor === _1n) return this;\n      return this.multiplyUnsafe(cofactor);\n    }\n\n    // Converts hash string or Uint8Array to Point.\n    // Uses algo from RFC8032 5.1.3.\n    static fromHex(hex: Hex, zip215 = false): Point {\n      const { d, a } = CURVE;\n      const len = Fp.BYTES;\n      hex = ensureBytes('pointHex', hex, len); // copy hex to a new array\n      abool('zip215', zip215);\n      const normed = hex.slice(); // copy again, we'll manipulate it\n      const lastByte = hex[len - 1]; // select last byte\n      normed[len - 1] = lastByte & ~0x80; // clear last bit\n      const y = ut.bytesToNumberLE(normed);\n\n      // zip215=true is good for consensus-critical apps. =false follows RFC8032 / NIST186-5.\n      // RFC8032 prohibits >= p, but ZIP215 doesn't\n      // zip215=true:  0 <= y < MASK (2^256 for ed25519)\n      // zip215=false: 0 <= y < P (2^255-19 for ed25519)\n      const max = zip215 ? MASK : Fp.ORDER;\n      ut.aInRange('pointHex.y', y, _0n, max);\n\n      // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n      // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n      const y2 = modP(y * y); // denominator is always non-0 mod p.\n      const u = modP(y2 - _1n); // u = y² - 1\n      const v = modP(d * y2 - a); // v = d y² + 1.\n      let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n      if (!isValid) throw new Error('Point.fromHex: invalid y coordinate');\n      const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n      const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n      if (!zip215 && x === _0n && isLastByteOdd)\n        // if x=0 and x_0 = 1, fail\n        throw new Error('Point.fromHex: x=0 and x_0=1');\n      if (isLastByteOdd !== isXOdd) x = modP(-x); // if x_0 != x mod 2, set x = p-x\n      return Point.fromAffine({ x, y });\n    }\n    static fromPrivateKey(privKey: Hex) {\n      return getExtendedPublicKey(privKey).point;\n    }\n    toRawBytes(): Uint8Array {\n      const { x, y } = this.toAffine();\n      const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n      bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n      return bytes; // and use the last byte to encode sign of x\n    }\n    toHex(): string {\n      return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n    }\n  }\n  const { BASE: G, ZERO: I } = Point;\n  const wnaf = wNAF(Point, nByteLength * 8);\n\n  function modN(a: bigint) {\n    return mod(a, CURVE_ORDER);\n  }\n  // Little-endian SHA512 with modulo n\n  function modN_LE(hash: Uint8Array): bigint {\n    return modN(ut.bytesToNumberLE(hash));\n  }\n\n  /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n  function getExtendedPublicKey(key: Hex) {\n    const len = Fp.BYTES;\n    key = ensureBytes('private key', key, len);\n    // Hash private key with curve's hash function to produce uniformingly random input\n    // Check byte lengths: ensure(64, h(ensure(32, key)))\n    const hashed = ensureBytes('hashed private key', cHash(key), 2 * len);\n    const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n    const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n    const scalar = modN_LE(head); // The actual private scalar\n    const point = G.multiply(scalar); // Point on Edwards curve aka public key\n    const pointBytes = point.toRawBytes(); // Uint8Array representation\n    return { head, prefix, scalar, point, pointBytes };\n  }\n\n  // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n  function getPublicKey(privKey: Hex): Uint8Array {\n    return getExtendedPublicKey(privKey).pointBytes;\n  }\n\n  // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n  function hashDomainToScalar(context: Hex = new Uint8Array(), ...msgs: Uint8Array[]) {\n    const msg = ut.concatBytes(...msgs);\n    return modN_LE(cHash(domain(msg, ensureBytes('context', context), !!prehash)));\n  }\n\n  /** Signs message with privateKey. RFC8032 5.1.6 */\n  function sign(msg: Hex, privKey: Hex, options: { context?: Hex } = {}): Uint8Array {\n    msg = ensureBytes('message', msg);\n    if (prehash) msg = prehash(msg); // for ed25519ph etc.\n    const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n    const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n    const R = G.multiply(r).toRawBytes(); // R = rG\n    const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n    const s = modN(r + k * scalar); // S = (r + k * s) mod L\n    ut.aInRange('signature.s', s, _0n, CURVE_ORDER); // 0 <= s < l\n    const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n    return ensureBytes('result', res, Fp.BYTES * 2); // 64-byte signature\n  }\n\n  const verifyOpts: { context?: Hex; zip215?: boolean } = VERIFY_DEFAULT;\n\n  /**\n   * Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n   * An extended group equation is checked.\n   */\n  function verify(sig: Hex, msg: Hex, publicKey: Hex, options = verifyOpts): boolean {\n    const { context, zip215 } = options;\n    const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n    sig = ensureBytes('signature', sig, 2 * len); // An extended group equation is checked.\n    msg = ensureBytes('message', msg);\n    publicKey = ensureBytes('publicKey', publicKey, len);\n    if (zip215 !== undefined) abool('zip215', zip215);\n    if (prehash) msg = prehash(msg); // for ed25519ph, etc\n\n    const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n    let A, R, SB;\n    try {\n      // zip215=true is good for consensus-critical apps. =false follows RFC8032 / NIST186-5.\n      // zip215=true:  0 <= y < MASK (2^256 for ed25519)\n      // zip215=false: 0 <= y < P (2^255-19 for ed25519)\n      A = Point.fromHex(publicKey, zip215);\n      R = Point.fromHex(sig.slice(0, len), zip215);\n      SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n    } catch (error) {\n      return false;\n    }\n    if (!zip215 && A.isSmallOrder()) return false;\n\n    const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n    const RkA = R.add(A.multiplyUnsafe(k));\n    // Extended group equation\n    // [8][S]B = [8]R + [8][k]A'\n    return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n  }\n\n  G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n\n  const utils = {\n    getExtendedPublicKey,\n    // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n    randomPrivateKey: (): Uint8Array => randomBytes(Fp.BYTES),\n\n    /**\n     * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n     * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n     * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n     * @param windowSize 2, 4, 8, 16\n     */\n    precompute(windowSize = 8, point: ExtPointType = Point.BASE): ExtPointType {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3));\n      return point;\n    },\n  };\n\n  return {\n    CURVE,\n    getPublicKey,\n    sign,\n    verify,\n    ExtendedPoint: Point,\n    utils,\n  };\n}\n", "/**\n * hash-to-curve from [RFC 9380](https://www.rfc-editor.org/rfc/rfc9380).\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport type { AffinePoint, Group, GroupConstructor } from './curve.js';\nimport { type IField, mod } from './modular.js';\nimport type { CHash } from './utils.js';\nimport { abytes, bytesToNumberBE, concatBytes, utf8ToBytes, validateObject } from './utils.js';\n\nexport type UnicodeOrBytes = string | Uint8Array;\n\n/**\n * * `DST` is a domain separation tag, defined in section 2.2.5\n * * `p` characteristic of F, where F is a finite field of characteristic p and order q = p^m\n * * `m` is extension degree (1 for prime fields)\n * * `k` is the target security target in bits (e.g. 128), from section 5.1\n * * `expand` is `xmd` (SHA2, SHA3, BLAKE) or `xof` (SHAKE, BLAKE-XOF)\n * * `hash` conforming to `utils.CHash` interface, with `outputLen` / `blockLen` props\n */\nexport type Opts = {\n  DST: UnicodeOrBytes;\n  p: bigint;\n  m: number;\n  k: number;\n  expand: 'xmd' | 'xof';\n  hash: CHash;\n};\n\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value: number, length: number): Uint8Array {\n  anum(value);\n  anum(length);\n  if (value < 0 || value >= 1 << (8 * length)) throw new Error('invalid I2OSP input: ' + value);\n  const res = Array.from({ length }).fill(0) as number[];\n  for (let i = length - 1; i >= 0; i--) {\n    res[i] = value & 0xff;\n    value >>>= 8;\n  }\n  return new Uint8Array(res);\n}\n\nfunction strxor(a: Uint8Array, b: Uint8Array): Uint8Array {\n  const arr = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    arr[i] = a[i] ^ b[i];\n  }\n  return arr;\n}\n\nfunction anum(item: unknown): void {\n  if (!Number.isSafeInteger(item)) throw new Error('number expected');\n}\n\n/**\n * Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits.\n * [RFC 9380 5.3.1](https://www.rfc-editor.org/rfc/rfc9380#section-5.3.1).\n */\nexport function expand_message_xmd(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  H: CHash\n): Uint8Array {\n  abytes(msg);\n  abytes(DST);\n  anum(lenInBytes);\n  // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n  if (DST.length > 255) DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n  const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n  const ell = Math.ceil(lenInBytes / b_in_bytes);\n  if (lenInBytes > 65535 || ell > 255) throw new Error('expand_message_xmd: invalid lenInBytes');\n  const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n  const Z_pad = i2osp(0, r_in_bytes);\n  const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n  const b = new Array<Uint8Array>(ell);\n  const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n  b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n  for (let i = 1; i <= ell; i++) {\n    const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n    b[i] = H(concatBytes(...args));\n  }\n  const pseudo_random_bytes = concatBytes(...b);\n  return pseudo_random_bytes.slice(0, lenInBytes);\n}\n\n/**\n * Produces a uniformly random byte string using an extendable-output function (XOF) H.\n * 1. The collision resistance of H MUST be at least k bits.\n * 2. H MUST be an XOF that has been proved indifferentiable from\n *    a random oracle under a reasonable cryptographic assumption.\n * [RFC 9380 5.3.2](https://www.rfc-editor.org/rfc/rfc9380#section-5.3.2).\n */\nexport function expand_message_xof(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  k: number,\n  H: CHash\n): Uint8Array {\n  abytes(msg);\n  abytes(DST);\n  anum(lenInBytes);\n  // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n  // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n  if (DST.length > 255) {\n    const dkLen = Math.ceil((2 * k) / 8);\n    DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n  }\n  if (lenInBytes > 65535 || DST.length > 255)\n    throw new Error('expand_message_xof: invalid lenInBytes');\n  return (\n    H.create({ dkLen: lenInBytes })\n      .update(msg)\n      .update(i2osp(lenInBytes, 2))\n      // 2. DST_prime = DST || I2OSP(len(DST), 1)\n      .update(DST)\n      .update(i2osp(DST.length, 1))\n      .digest()\n  );\n}\n\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F.\n * [RFC 9380 5.2](https://www.rfc-editor.org/rfc/rfc9380#section-5.2).\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg: Uint8Array, count: number, options: Opts): bigint[][] {\n  validateObject(options, {\n    DST: 'stringOrUint8Array',\n    p: 'bigint',\n    m: 'isSafeInteger',\n    k: 'isSafeInteger',\n    hash: 'hash',\n  });\n  const { p, k, m, hash, expand, DST: _DST } = options;\n  abytes(msg);\n  anum(count);\n  const DST = typeof _DST === 'string' ? utf8ToBytes(_DST) : _DST;\n  const log2p = p.toString(2).length;\n  const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n  const len_in_bytes = count * m * L;\n  let prb; // pseudo_random_bytes\n  if (expand === 'xmd') {\n    prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n  } else if (expand === 'xof') {\n    prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n  } else if (expand === '_internal_pass') {\n    // for internal tests only\n    prb = msg;\n  } else {\n    throw new Error('expand must be \"xmd\" or \"xof\"');\n  }\n  const u = new Array(count);\n  for (let i = 0; i < count; i++) {\n    const e = new Array(m);\n    for (let j = 0; j < m; j++) {\n      const elm_offset = L * (j + i * m);\n      const tv = prb.subarray(elm_offset, elm_offset + L);\n      e[j] = mod(os2ip(tv), p);\n    }\n    u[i] = e;\n  }\n  return u;\n}\n\nexport type XY<T> = (\n  x: T,\n  y: T\n) => {\n  x: T;\n  y: T;\n};\nexport function isogenyMap<T, F extends IField<T>>(field: F, map: [T[], T[], T[], T[]]): XY<T> {\n  // Make same order as in spec\n  const COEFF = map.map((i) => Array.from(i).reverse());\n  return (x: T, y: T) => {\n    const [xNum, xDen, yNum, yDen] = COEFF.map((val) =>\n      val.reduce((acc, i) => field.add(field.mul(acc, x), i))\n    );\n    x = field.div(xNum, xDen); // xNum / xDen\n    y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n    return { x: x, y: y };\n  };\n}\n\n/** Point interface, which curves must implement to work correctly with the module. */\nexport interface H2CPoint<T> extends Group<H2CPoint<T>> {\n  add(rhs: H2CPoint<T>): H2CPoint<T>;\n  toAffine(iz?: bigint): AffinePoint<T>;\n  clearCofactor(): H2CPoint<T>;\n  assertValidity(): void;\n}\n\nexport interface H2CPointConstructor<T> extends GroupConstructor<H2CPoint<T>> {\n  fromAffine(ap: AffinePoint<T>): H2CPoint<T>;\n}\n\nexport type MapToCurve<T> = (scalar: bigint[]) => AffinePoint<T>;\n\n// Separated from initialization opts, so users won't accidentally change per-curve parameters\n// (changing DST is ok!)\nexport type htfBasicOpts = { DST: UnicodeOrBytes };\nexport type HTFMethod<T> = (msg: Uint8Array, options?: htfBasicOpts) => H2CPoint<T>;\nexport type MapMethod<T> = (scalars: bigint[]) => H2CPoint<T>;\n\n/** Creates hash-to-curve methods from EC Point and mapToCurve function. */\nexport function createHasher<T>(\n  Point: H2CPointConstructor<T>,\n  mapToCurve: MapToCurve<T>,\n  def: Opts & { encodeDST?: UnicodeOrBytes }\n): {\n  hashToCurve: HTFMethod<T>;\n  encodeToCurve: HTFMethod<T>;\n  mapToCurve: MapMethod<T>;\n} {\n  if (typeof mapToCurve !== 'function') throw new Error('mapToCurve() must be defined');\n  return {\n    // Encodes byte string to elliptic curve.\n    // hash_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n    hashToCurve(msg: Uint8Array, options?: htfBasicOpts): H2CPoint<T> {\n      const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options } as Opts);\n      const u0 = Point.fromAffine(mapToCurve(u[0]));\n      const u1 = Point.fromAffine(mapToCurve(u[1]));\n      const P = u0.add(u1).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n\n    // Encodes byte string to elliptic curve.\n    // encode_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n    encodeToCurve(msg: Uint8Array, options?: htfBasicOpts): H2CPoint<T> {\n      const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options } as Opts);\n      const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n    // Same as encodeToCurve, but without hash\n    mapToCurve(scalars: bigint[]): H2CPoint<T> {\n      if (!Array.isArray(scalars)) throw new Error('mapToCurve: expected array of bigints');\n      for (const i of scalars)\n        if (typeof i !== 'bigint') throw new Error('mapToCurve: expected array of bigints');\n      const P = Point.fromAffine(mapToCurve(scalars)).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n  };\n}\n", "/**\n * Montgomery curve methods. It's not really whole montgomery curve,\n * just bunch of very specific methods for X25519 / X448 from\n * [RFC 7748](https://www.rfc-editor.org/rfc/rfc7748)\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { mod, pow } from './modular.js';\nimport {\n  aInRange,\n  bytesToNumberLE,\n  ensureBytes,\n  numberToBytesLE,\n  validateObject,\n} from './utils.js';\n\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\ntype Hex = string | Uint8Array;\n\nexport type CurveType = {\n  P: bigint; // finite field prime\n  nByteLength: number;\n  adjustScalarBytes?: (bytes: Uint8Array) => Uint8Array;\n  domain?: (data: Uint8Array, ctx: Uint8Array, phflag: boolean) => Uint8Array;\n  a: bigint;\n  montgomeryBits: number;\n  powPminus2?: (x: bigint) => bigint;\n  xyToU?: (x: bigint, y: bigint) => bigint;\n  Gu: bigint;\n  randomBytes?: (bytesLength?: number) => Uint8Array;\n};\n\nexport type CurveFn = {\n  scalarMult: (scalar: Hex, u: Hex) => Uint8Array;\n  scalarMultBase: (scalar: Hex) => Uint8Array;\n  getSharedSecret: (privateKeyA: Hex, publicKeyB: Hex) => Uint8Array;\n  getPublicKey: (privateKey: Hex) => Uint8Array;\n  utils: { randomPrivateKey: () => Uint8Array };\n  GuBytes: Uint8Array;\n};\n\nfunction validateOpts(curve: CurveType) {\n  validateObject(\n    curve,\n    {\n      a: 'bigint',\n    },\n    {\n      montgomeryBits: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n      adjustScalarBytes: 'function',\n      domain: 'function',\n      powPminus2: 'function',\n      Gu: 'bigint',\n    }\n  );\n  // Set defaults\n  return Object.freeze({ ...curve } as const);\n}\n\n// Uses only one coordinate instead of two\nexport function montgomery(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef);\n  const { P } = CURVE;\n  const modP = (n: bigint) => mod(n, P);\n  const montgomeryBits = CURVE.montgomeryBits;\n  const montgomeryBytes = Math.ceil(montgomeryBits / 8);\n  const fieldLen = CURVE.nByteLength;\n  const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes: Uint8Array) => bytes);\n  const powPminus2 = CURVE.powPminus2 || ((x: bigint) => pow(x, P - BigInt(2), P));\n\n  // cswap from RFC7748. But it is not from RFC7748!\n  /*\n    cswap(swap, x_2, x_3):\n         dummy = mask(swap) AND (x_2 XOR x_3)\n         x_2 = x_2 XOR dummy\n         x_3 = x_3 XOR dummy\n         Return (x_2, x_3)\n  Where mask(swap) is the all-1 or all-0 word of the same length as x_2\n   and x_3, computed, e.g., as mask(swap) = 0 - swap.\n  */\n  function cswap(swap: bigint, x_2: bigint, x_3: bigint): [bigint, bigint] {\n    const dummy = modP(swap * (x_2 - x_3));\n    x_2 = modP(x_2 - dummy);\n    x_3 = modP(x_3 + dummy);\n    return [x_2, x_3];\n  }\n\n  // x25519 from 4\n  // The constant a24 is (486662 - 2) / 4 = 121665 for curve25519/X25519\n  const a24 = (CURVE.a - BigInt(2)) / BigInt(4);\n  /**\n   *\n   * @param pointU u coordinate (x) on Montgomery Curve 25519\n   * @param scalar by which the point would be multiplied\n   * @returns new Point on Montgomery curve\n   */\n  function montgomeryLadder(u: bigint, scalar: bigint): bigint {\n    aInRange('u', u, _0n, P);\n    aInRange('scalar', scalar, _0n, P);\n    // Section 5: Implementations MUST accept non-canonical values and process them as\n    // if they had been reduced modulo the field prime.\n    const k = scalar;\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw: [bigint, bigint];\n    for (let t = BigInt(montgomeryBits - 1); t >= _0n; t--) {\n      const k_t = (k >> t) & _1n;\n      swap ^= k_t;\n      sw = cswap(swap, x_2, x_3);\n      x_2 = sw[0];\n      x_3 = sw[1];\n      sw = cswap(swap, z_2, z_3);\n      z_2 = sw[0];\n      z_3 = sw[1];\n      swap = k_t;\n\n      const A = x_2 + z_2;\n      const AA = modP(A * A);\n      const B = x_2 - z_2;\n      const BB = modP(B * B);\n      const E = AA - BB;\n      const C = x_3 + z_3;\n      const D = x_3 - z_3;\n      const DA = modP(D * A);\n      const CB = modP(C * B);\n      const dacb = DA + CB;\n      const da_cb = DA - CB;\n      x_3 = modP(dacb * dacb);\n      z_3 = modP(x_1 * modP(da_cb * da_cb));\n      x_2 = modP(AA * BB);\n      z_2 = modP(E * (AA + modP(a24 * E)));\n    }\n    // (x_2, x_3) = cswap(swap, x_2, x_3)\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    // (z_2, z_3) = cswap(swap, z_2, z_3)\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    // z_2^(p - 2)\n    const z2 = powPminus2(z_2);\n    // Return x_2 * (z_2^(p - 2))\n    return modP(x_2 * z2);\n  }\n\n  function encodeUCoordinate(u: bigint): Uint8Array {\n    return numberToBytesLE(modP(u), montgomeryBytes);\n  }\n\n  function decodeUCoordinate(uEnc: Hex): bigint {\n    // Section 5: When receiving such an array, implementations of X25519\n    // MUST mask the most significant bit in the final byte.\n    const u = ensureBytes('u coordinate', uEnc, montgomeryBytes);\n    if (fieldLen === 32) u[31] &= 127; // 0b0111_1111\n    return bytesToNumberLE(u);\n  }\n  function decodeScalar(n: Hex): bigint {\n    const bytes = ensureBytes('scalar', n);\n    const len = bytes.length;\n    if (len !== montgomeryBytes && len !== fieldLen) {\n      let valid = '' + montgomeryBytes + ' or ' + fieldLen;\n      throw new Error('invalid scalar, expected ' + valid + ' bytes, got ' + len);\n    }\n    return bytesToNumberLE(adjustScalarBytes(bytes));\n  }\n  function scalarMult(scalar: Hex, u: Hex): Uint8Array {\n    const pointU = decodeUCoordinate(u);\n    const _scalar = decodeScalar(scalar);\n    const pu = montgomeryLadder(pointU, _scalar);\n    // The result was not contributory\n    // https://cr.yp.to/ecdh.html#validate\n    if (pu === _0n) throw new Error('invalid private or public key received');\n    return encodeUCoordinate(pu);\n  }\n  // Computes public key from private. By doing scalar multiplication of base point.\n  const GuBytes = encodeUCoordinate(CURVE.Gu);\n  function scalarMultBase(scalar: Hex): Uint8Array {\n    return scalarMult(scalar, GuBytes);\n  }\n\n  return {\n    scalarMult,\n    scalarMultBase,\n    getSharedSecret: (privateKey: Hex, publicKey: Hex) => scalarMult(privateKey, publicKey),\n    getPublicKey: (privateKey: Hex): Uint8Array => scalarMultBase(privateKey),\n    utils: { randomPrivateKey: () => CURVE.randomBytes!(CURVE.nByteLength) },\n    GuBytes: GuBytes,\n  };\n}\n", "/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha512 } from '@noble/hashes/sha512';\nimport { concatBytes, randomBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport { type AffinePoint, type Group, pippenger } from './abstract/curve.js';\nimport { type CurveFn, type ExtPointType, twistedEdwards } from './abstract/edwards.js';\nimport {\n  createHasher,\n  expand_message_xmd,\n  type htfBasicOpts,\n  type HTFMethod,\n} from './abstract/hash-to-curve.js';\nimport { Field, FpSqrtEven, isNegativeLE, mod, pow2 } from './abstract/modular.js';\nimport { montgomery, type CurveFn as XCurveFn } from './abstract/montgomery.js';\nimport {\n  bytesToHex,\n  bytesToNumberLE,\n  ensureBytes,\n  equalBytes,\n  type Hex,\n  numberToBytesLE,\n} from './abstract/utils.js';\n\nconst ED25519_P = BigInt(\n  '57896044618658097711785492504343953926634992332820282019728792003956564819949'\n);\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = /* @__PURE__ */ BigInt(\n  '19681161376707505956807079304988542015446066515923890162744021073123829784752'\n);\n\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _5n = BigInt(5), _8n = BigInt(8);\n\nfunction ed25519_pow_2_252_3(x: bigint) {\n  // prettier-ignore\n  const _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\n  const P = ED25519_P;\n  const x2 = (x * x) % P;\n  const b2 = (x2 * x) % P; // x^3, 11\n  const b4 = (pow2(b2, _2n, P) * b2) % P; // x^15, 1111\n  const b5 = (pow2(b4, _1n, P) * x) % P; // x^31\n  const b10 = (pow2(b5, _5n, P) * b5) % P;\n  const b20 = (pow2(b10, _10n, P) * b10) % P;\n  const b40 = (pow2(b20, _20n, P) * b20) % P;\n  const b80 = (pow2(b40, _40n, P) * b40) % P;\n  const b160 = (pow2(b80, _80n, P) * b80) % P;\n  const b240 = (pow2(b160, _80n, P) * b80) % P;\n  const b250 = (pow2(b240, _10n, P) * b10) % P;\n  const pow_p_5_8 = (pow2(b250, _2n, P) * x) % P;\n  // ^ To pow to (p+3)/8, multiply it by x.\n  return { pow_p_5_8, b2 };\n}\n\nfunction adjustScalarBytes(bytes: Uint8Array): Uint8Array {\n  // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n  // set the three least significant bits of the first byte\n  bytes[0] &= 248; // 0b1111_1000\n  // and the most significant bit of the last to zero,\n  bytes[31] &= 127; // 0b0111_1111\n  // set the second most significant bit of the last byte to 1\n  bytes[31] |= 64; // 0b0100_0000\n  return bytes;\n}\n\n// sqrt(u/v)\nfunction uvRatio(u: bigint, v: bigint): { isValid: boolean; value: bigint } {\n  const P = ED25519_P;\n  const v3 = mod(v * v * v, P); // v³\n  const v7 = mod(v3 * v3 * v, P); // v⁷\n  // (p+3)/8 and (p-5)/8\n  const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n  let x = mod(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n  const vx2 = mod(v * x * x, P); // vx²\n  const root1 = x; // First root candidate\n  const root2 = mod(x * ED25519_SQRT_M1, P); // Second root candidate\n  const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n  const useRoot2 = vx2 === mod(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n  const noRoot = vx2 === mod(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n  if (useRoot1) x = root1;\n  if (useRoot2 || noRoot) x = root2; // We return root2 anyway, for const-time\n  if (isNegativeLE(x, P)) x = mod(-x, P);\n  return { isValid: useRoot1 || useRoot2, value: x };\n}\n\n// Just in case\nexport const ED25519_TORSION_SUBGROUP: string[] = [\n  '0100000000000000000000000000000000000000000000000000000000000000',\n  'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n  '0000000000000000000000000000000000000000000000000000000000000080',\n  '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n  'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n  '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n  '0000000000000000000000000000000000000000000000000000000000000000',\n  'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\n\nconst Fp = /* @__PURE__ */ (() => Field(ED25519_P, undefined, true))();\n\nconst ed25519Defaults = /* @__PURE__ */ (() =>\n  ({\n    // Param: a\n    a: BigInt(-1), // Fp.create(-1) is proper; our way still works and is faster\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n**252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: _8n,\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: sha512,\n    randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n  }) as const)();\n\n/**\n * ed25519 curve with EdDSA signatures.\n * @example\n * import { ed25519 } from '@noble/curves/ed25519';\n * const priv = ed25519.utils.randomPrivateKey();\n * const pub = ed25519.getPublicKey(priv);\n * const msg = new TextEncoder().encode('hello');\n * const sig = ed25519.sign(msg, priv);\n * ed25519.verify(sig, msg, pub); // Default mode: follows ZIP215\n * ed25519.verify(sig, msg, pub, { zip215: false }); // RFC8032 / FIPS 186-5\n */\nexport const ed25519: CurveFn = /* @__PURE__ */ (() => twistedEdwards(ed25519Defaults))();\n\nfunction ed25519_domain(data: Uint8Array, ctx: Uint8Array, phflag: boolean) {\n  if (ctx.length > 255) throw new Error('Context is too big');\n  return concatBytes(\n    utf8ToBytes('SigEd25519 no Ed25519 collisions'),\n    new Uint8Array([phflag ? 1 : 0, ctx.length]),\n    ctx,\n    data\n  );\n}\n\nexport const ed25519ctx: CurveFn = /* @__PURE__ */ (() =>\n  twistedEdwards({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n  }))();\nexport const ed25519ph: CurveFn = /* @__PURE__ */ (() =>\n  twistedEdwards(\n    Object.assign({}, ed25519Defaults, {\n      domain: ed25519_domain,\n      prehash: sha512,\n    })\n  ))();\n\n/**\n * ECDH using curve25519 aka x25519.\n * @example\n * import { x25519 } from '@noble/curves/ed25519';\n * const priv = 'a546e36bf0527c9d3b16154b82465edd62144c0ac1fc5a18506a2244ba449ac4';\n * const pub = 'e6db6867583030db3594c1a424b15f7c726624ec26b3353b10a903a6d0ab1c4c';\n * x25519.getSharedSecret(priv, pub) === x25519.scalarMult(priv, pub); // aliases\n * x25519.getPublicKey(priv) === x25519.scalarMultBase(priv);\n * x25519.getPublicKey(x25519.utils.randomPrivateKey());\n */\nexport const x25519: XCurveFn = /* @__PURE__ */ (() =>\n  montgomery({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255, // n is 253 bits\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x: bigint): bigint => {\n      const P = ED25519_P;\n      // x^(p-2) aka x^(2^255-21)\n      const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n      return mod(pow2(pow_p_5_8, _3n, P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes,\n  }))();\n\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nexport function edwardsToMontgomeryPub(edwardsPub: Hex): Uint8Array {\n  const { y } = ed25519.ExtendedPoint.fromHex(edwardsPub);\n  const _1n = BigInt(1);\n  return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexport const edwardsToMontgomery: typeof edwardsToMontgomeryPub = edwardsToMontgomeryPub; // deprecated\n\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nexport function edwardsToMontgomeryPriv(edwardsPriv: Uint8Array): Uint8Array {\n  const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n  return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\n\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\n\nconst ELL2_C1 = /* @__PURE__ */ (() => (Fp.ORDER + _3n) / _8n)(); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = /* @__PURE__ */ (() => Fp.pow(_2n, ELL2_C1))(); // 2. c2 = 2^c1\nconst ELL2_C3 = /* @__PURE__ */ (() => Fp.sqrt(Fp.neg(Fp.ONE)))(); // 3. c3 = sqrt(-1)\n\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u: bigint) {\n  const ELL2_C4 = (Fp.ORDER - _5n) / _8n; // 4. c4 = (q - 5) / 8       # Integer arithmetic\n  const ELL2_J = BigInt(486662);\n\n  let tv1 = Fp.sqr(u);          //  1.  tv1 = u^2\n  tv1 = Fp.mul(tv1, _2n);       //  2.  tv1 = 2 * tv1\n  let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n  let x1n = Fp.neg(ELL2_J);     //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n  let tv2 = Fp.sqr(xd);         //  5.  tv2 = xd^2\n  let gxd = Fp.mul(tv2, xd);    //  6.  gxd = tv2 * xd        # gxd = xd^3\n  let gx1 = Fp.mul(tv1, ELL2_J);//  7.  gx1 = J * tv1         # x1n + J * xd\n  gx1 = Fp.mul(gx1, x1n);       //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n  gx1 = Fp.add(gx1, tv2);       //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n  gx1 = Fp.mul(gx1, x1n);       //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n  let tv3 = Fp.sqr(gxd);        //  11. tv3 = gxd^2\n  tv2 = Fp.sqr(tv3);            //  12. tv2 = tv3^2           # gxd^4\n  tv3 = Fp.mul(tv3, gxd);       //  13. tv3 = tv3 * gxd       # gxd^3\n  tv3 = Fp.mul(tv3, gx1);       //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n  tv2 = Fp.mul(tv2, tv3);       //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n  let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n  y11 = Fp.mul(y11, tv3);       //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n  let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n  tv2 = Fp.sqr(y11);            //  19. tv2 = y11^2\n  tv2 = Fp.mul(tv2, gxd);       //  20. tv2 = tv2 * gxd\n  let e1 = Fp.eql(tv2, gx1);    //  21.  e1 = tv2 == gx1\n  let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n  let x2n = Fp.mul(x1n, tv1);   //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n  let y21 = Fp.mul(y11, u);     //  24. y21 = y11 * u\n  y21 = Fp.mul(y21, ELL2_C2);   //  25. y21 = y21 * c2\n  let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n  let gx2 = Fp.mul(gx1, tv1);   //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n  tv2 = Fp.sqr(y21);            //  28. tv2 = y21^2\n  tv2 = Fp.mul(tv2, gxd);       //  29. tv2 = tv2 * gxd\n  let e2 = Fp.eql(tv2, gx2);    //  30.  e2 = tv2 == gx2\n  let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n  tv2 = Fp.sqr(y1);             //  32. tv2 = y1^2\n  tv2 = Fp.mul(tv2, gxd);       //  33. tv2 = tv2 * gxd\n  let e3 = Fp.eql(tv2, gx1);    //  34.  e3 = tv2 == gx1\n  let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n  let y = Fp.cmov(y2, y1, e3);  //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n  let e4 = Fp.isOdd(y);         //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n  y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n  return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\n\nconst ELL2_C1_EDWARDS = /* @__PURE__ */ (() => FpSqrtEven(Fp, Fp.neg(BigInt(486664))))(); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u: bigint) {\n  const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n  // map_to_curve_elligator2_curve25519(u)\n  let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n  xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n  let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n  let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n  let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n  let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n  let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n  xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n  xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n  yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n  yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n\n  const inv = Fp.invertBatch([xd, yd]); // batch division\n  return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\n\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    ed25519.ExtendedPoint,\n    (scalars: bigint[]) => map_to_curve_elligator2_edwards25519(scalars[0]),\n    {\n      DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n      encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha512,\n    }\n  ))();\nexport const hashToCurve: HTFMethod<bigint> = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve: HTFMethod<bigint> = /* @__PURE__ */ (() => htf.encodeToCurve)();\n\nfunction assertRstPoint(other: unknown) {\n  if (!(other instanceof RistPoint)) throw new Error('RistrettoPoint expected');\n}\n\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = /* @__PURE__ */ BigInt(\n  '25063068953384623474111414158702152701244531502492656460079210482610430750235'\n);\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = /* @__PURE__ */ BigInt(\n  '54469307008909316920995813868745141605393597292927456921205312896311721017578'\n);\n// 1-d²\nconst ONE_MINUS_D_SQ = /* @__PURE__ */ BigInt(\n  '1159843021668779879193775521855586647937357759715417654439879720876111806838'\n);\n// (d-1)²\nconst D_MINUS_ONE_SQ = /* @__PURE__ */ BigInt(\n  '40440834346308536858101042469323190826248399146238708352240133220865137265952'\n);\n// Calculates 1/√(number)\nconst invertSqrt = (number: bigint) => uvRatio(_1n, number);\n\nconst MAX_255B = /* @__PURE__ */ BigInt(\n  '0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\n);\nconst bytes255ToNumberLE = (bytes: Uint8Array) =>\n  ed25519.CURVE.Fp.create(bytesToNumberLE(bytes) & MAX_255B);\n\ntype ExtendedPoint = ExtPointType;\n\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0: bigint): ExtendedPoint {\n  const { d } = ed25519.CURVE;\n  const P = ed25519.CURVE.Fp.ORDER;\n  const mod = ed25519.CURVE.Fp.create;\n  const r = mod(SQRT_M1 * r0 * r0); // 1\n  const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n  let c = BigInt(-1); // 3\n  const D = mod((c - d * r) * mod(r + d)); // 4\n  let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n  let s_ = mod(s * r0); // 6\n  if (!isNegativeLE(s_, P)) s_ = mod(-s_);\n  if (!Ns_D_is_sq) s = s_; // 7\n  if (!Ns_D_is_sq) c = r; // 8\n  const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n  const s2 = s * s;\n  const W0 = mod((s + s) * D); // 10\n  const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n  const W2 = mod(_1n - s2); // 12\n  const W3 = mod(_1n + s2); // 13\n  return new ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint implements Group<RistPoint> {\n  static BASE: RistPoint;\n  static ZERO: RistPoint;\n  // Private property to discourage combining ExtendedPoint + RistrettoPoint\n  // Always use Ristretto encoding/decoding instead.\n  constructor(private readonly ep: ExtendedPoint) {}\n\n  static fromAffine(ap: AffinePoint<bigint>): RistPoint {\n    return new RistPoint(ed25519.ExtendedPoint.fromAffine(ap));\n  }\n\n  /**\n   * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n   * The hash-to-group operation applies Elligator twice and adds the results.\n   * **Note:** this is one-way map, there is no conversion from point to hash.\n   * https://ristretto.group/formulas/elligator.html\n   * @param hex 64-byte output of a hash function\n   */\n  static hashToCurve(hex: Hex): RistPoint {\n    hex = ensureBytes('ristrettoHash', hex, 64);\n    const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n    const R1 = calcElligatorRistrettoMap(r1);\n    const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n    const R2 = calcElligatorRistrettoMap(r2);\n    return new RistPoint(R1.add(R2));\n  }\n\n  /**\n   * Converts ristretto-encoded string to ristretto point.\n   * https://ristretto.group/formulas/decoding.html\n   * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n   */\n  static fromHex(hex: Hex): RistPoint {\n    hex = ensureBytes('ristrettoHex', hex, 32);\n    const { a, d } = ed25519.CURVE;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n    const s = bytes255ToNumberLE(hex);\n    // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n    // 3. Check that s is non-negative, or else abort\n    if (!equalBytes(numberToBytesLE(s, 32), hex) || isNegativeLE(s, P)) throw new Error(emsg);\n    const s2 = mod(s * s);\n    const u1 = mod(_1n + a * s2); // 4 (a is -1)\n    const u2 = mod(_1n - a * s2); // 5\n    const u1_2 = mod(u1 * u1);\n    const u2_2 = mod(u2 * u2);\n    const v = mod(a * d * u1_2 - u2_2); // 6\n    const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n    const Dx = mod(I * u2); // 8\n    const Dy = mod(I * Dx * v); // 9\n    let x = mod((s + s) * Dx); // 10\n    if (isNegativeLE(x, P)) x = mod(-x); // 10\n    const y = mod(u1 * Dy); // 11\n    const t = mod(x * y); // 12\n    if (!isValid || isNegativeLE(t, P) || y === _0n) throw new Error(emsg);\n    return new RistPoint(new ed25519.ExtendedPoint(x, y, _1n, t));\n  }\n\n  static msm(points: RistPoint[], scalars: bigint[]): RistPoint {\n    const Fn = Field(ed25519.CURVE.n, ed25519.CURVE.nBitLength);\n    return pippenger(RistPoint, Fn, points, scalars);\n  }\n\n  /**\n   * Encodes ristretto point to Uint8Array.\n   * https://ristretto.group/formulas/encoding.html\n   */\n  toRawBytes(): Uint8Array {\n    let { ex: x, ey: y, ez: z, et: t } = this.ep;\n    const P = ed25519.CURVE.Fp.ORDER;\n    const mod = ed25519.CURVE.Fp.create;\n    const u1 = mod(mod(z + y) * mod(z - y)); // 1\n    const u2 = mod(x * y); // 2\n    // Square root always exists\n    const u2sq = mod(u2 * u2);\n    const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n    const D1 = mod(invsqrt * u1); // 4\n    const D2 = mod(invsqrt * u2); // 5\n    const zInv = mod(D1 * D2 * t); // 6\n    let D: bigint; // 7\n    if (isNegativeLE(t * zInv, P)) {\n      let _x = mod(y * SQRT_M1);\n      let _y = mod(x * SQRT_M1);\n      x = _x;\n      y = _y;\n      D = mod(D1 * INVSQRT_A_MINUS_D);\n    } else {\n      D = D2; // 8\n    }\n    if (isNegativeLE(x * zInv, P)) y = mod(-y); // 9\n    let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n    if (isNegativeLE(s, P)) s = mod(-s);\n    return numberToBytesLE(s, 32); // 11\n  }\n\n  toHex(): string {\n    return bytesToHex(this.toRawBytes());\n  }\n\n  toString(): string {\n    return this.toHex();\n  }\n\n  // Compare one point to another.\n  equals(other: RistPoint): boolean {\n    assertRstPoint(other);\n    const { ex: X1, ey: Y1 } = this.ep;\n    const { ex: X2, ey: Y2 } = other.ep;\n    const mod = ed25519.CURVE.Fp.create;\n    // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n    const one = mod(X1 * Y2) === mod(Y1 * X2);\n    const two = mod(Y1 * Y2) === mod(X1 * X2);\n    return one || two;\n  }\n\n  add(other: RistPoint): RistPoint {\n    assertRstPoint(other);\n    return new RistPoint(this.ep.add(other.ep));\n  }\n\n  subtract(other: RistPoint): RistPoint {\n    assertRstPoint(other);\n    return new RistPoint(this.ep.subtract(other.ep));\n  }\n\n  multiply(scalar: bigint): RistPoint {\n    return new RistPoint(this.ep.multiply(scalar));\n  }\n\n  multiplyUnsafe(scalar: bigint): RistPoint {\n    return new RistPoint(this.ep.multiplyUnsafe(scalar));\n  }\n\n  double(): RistPoint {\n    return new RistPoint(this.ep.double());\n  }\n\n  negate(): RistPoint {\n    return new RistPoint(this.ep.negate());\n  }\n}\nexport const RistrettoPoint: typeof RistPoint = /* @__PURE__ */ (() => {\n  if (!RistPoint.BASE) RistPoint.BASE = new RistPoint(ed25519.ExtendedPoint.BASE);\n  if (!RistPoint.ZERO) RistPoint.ZERO = new RistPoint(ed25519.ExtendedPoint.ZERO);\n  return RistPoint;\n})();\n\n// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B\nexport const hashToRistretto255 = (msg: Uint8Array, options: htfBasicOpts): RistPoint => {\n  const d = options.DST;\n  const DST = typeof d === 'string' ? utf8ToBytes(d) : d;\n  const uniform_bytes = expand_message_xmd(msg, DST, 64, sha512);\n  const P = RistPoint.hashToCurve(uniform_bytes);\n  return P;\n};\nexport const hash_to_ristretto255: (msg: Uint8Array, options: htfBasicOpts) => RistPoint =\n  hashToRistretto255; // legacy\n", "/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n", "'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n", "const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n", "{\n  \"name\": \"elliptic\",\n  \"version\": \"6.6.1\",\n  \"description\": \"EC cryptography\",\n  \"main\": \"lib/elliptic.js\",\n  \"files\": [\n    \"lib\"\n  ],\n  \"scripts\": {\n    \"lint\": \"eslint lib test\",\n    \"lint:fix\": \"npm run lint -- --fix\",\n    \"unit\": \"istanbul test _mocha --reporter=spec test/index.js\",\n    \"test\": \"npm run lint && npm run unit\",\n    \"version\": \"grunt dist && git add dist/\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git@github.com:indutny/elliptic\"\n  },\n  \"keywords\": [\n    \"EC\",\n    \"Elliptic\",\n    \"curve\",\n    \"Cryptography\"\n  ],\n  \"author\": \"Fedor Indutny <fedor@indutny.com>\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/indutny/elliptic/issues\"\n  },\n  \"homepage\": \"https://github.com/indutny/elliptic\",\n  \"devDependencies\": {\n    \"brfs\": \"^2.0.2\",\n    \"coveralls\": \"^3.1.0\",\n    \"eslint\": \"^7.6.0\",\n    \"grunt\": \"^1.2.1\",\n    \"grunt-browserify\": \"^5.3.0\",\n    \"grunt-cli\": \"^1.3.2\",\n    \"grunt-contrib-connect\": \"^3.0.0\",\n    \"grunt-contrib-copy\": \"^1.0.0\",\n    \"grunt-contrib-uglify\": \"^5.0.0\",\n    \"grunt-mocha-istanbul\": \"^5.0.2\",\n    \"grunt-saucelabs\": \"^9.0.1\",\n    \"istanbul\": \"^0.4.5\",\n    \"mocha\": \"^8.0.1\"\n  },\n  \"dependencies\": {\n    \"bn.js\": \"^4.11.9\",\n    \"brorand\": \"^1.1.0\",\n    \"hash.js\": \"^1.0.0\",\n    \"hmac-drbg\": \"^1.0.1\",\n    \"inherits\": \"^2.0.4\",\n    \"minimalistic-assert\": \"^1.0.1\",\n    \"minimalistic-crypto-utils\": \"^1.0.1\"\n  }\n}\n", "(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    this.length = num === 0 ? 1 : this.length;\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n", "module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n", "'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n", "'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  var i;\n  for (i = 0; i < naf.length; i += 1) {\n    naf[i] = 0;\n  }\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n", "var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n", "'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n", "'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n", "'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n", "'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n", "'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n", "'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n", "'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n", "'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n", "'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n", "'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n", "var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n", "module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',\n      ],\n    ],\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',\n      ],\n    ],\n  },\n};\n", "'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n", "'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature, options) {\n  return this.ec.verify(msg, signature, this, undefined, options);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n", "'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  if(buf[p.place] === 0x00) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  if ((data[p.place] & 128) !== 0) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  if ((data[p.place] & 128) !== 0) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly, bitLength) {\n  var byteLength;\n  if (BN.isBN(msg) || typeof msg === 'number') {\n    msg = new BN(msg, 16);\n    byteLength = msg.byteLength();\n  } else if (typeof msg === 'object') {\n    // BN assumes an array-like input and asserts length\n    byteLength = msg.length;\n    msg = new BN(msg, 16);\n  } else {\n    // BN converts the value to string\n    var str = msg.toString();\n    // HEX encoding\n    byteLength = (str.length + 1) >>> 1;\n    msg = new BN(str, 16);\n  }\n  // Allow overriding\n  if (typeof bitLength !== 'number') {\n    bitLength = byteLength * 8;\n  }\n  var delta = bitLength - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  if (typeof msg !== 'string' && typeof msg !== 'number' && !BN.isBN(msg)) {\n    assert(typeof msg === 'object' && msg && typeof msg.length === 'number',\n      'Expected message to be an array-like, a hex string, or a BN instance');\n    assert((msg.length >>> 0) === msg.length); // non-negative 32-bit integer\n    for (var i = 0; i < msg.length; i++) assert((msg[i] & 255) === msg[i]);\n  }\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(msg, false, options.msgBitLength);\n\n  // Would fail further checks, but let's make the error message clear\n  assert(!msg.isNeg(), 'Can not sign a negative message');\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Recheck nonce to be bijective to msg\n  assert((new BN(nonce)).eq(msg), 'Can not sign message');\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc, options) {\n  if (!options)\n    options = {};\n\n  msg = this._truncateToN(msg, false, options.msgBitLength);\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    assert(sig.length === eddsa.encodingLength * 2, 'Signature has invalid size');\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n", "'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  if (sig.S().gte(sig.eddsa.curve.n) || sig.S().isNeg()) {\n    return false;\n  }\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n", "'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n", "const EC = require('elliptic').ec\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n", "module.exports = require('./lib')(require('./lib/elliptic'))\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PublicKey = void 0;\nconst utils_1 = require(\"@near-js/utils\");\nconst ed25519_1 = require(\"@noble/curves/ed25519\");\nconst secp256k1_1 = __importDefault(require(\"secp256k1\"));\nconst constants_1 = require(\"./constants.cjs\");\nfunction key_type_to_str(keyType) {\n    switch (keyType) {\n        case constants_1.KeyType.ED25519: return 'ed25519';\n        case constants_1.KeyType.SECP256K1: return 'secp256k1';\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\nfunction str_to_key_type(keyType) {\n    switch (keyType.toLowerCase()) {\n        case 'ed25519': return constants_1.KeyType.ED25519;\n        case 'secp256k1': return constants_1.KeyType.SECP256K1;\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\nclass ED25519PublicKey {\n    keyType = constants_1.KeyType.ED25519;\n    data;\n}\nclass SECP256K1PublicKey {\n    keyType = constants_1.KeyType.SECP256K1;\n    data;\n}\nfunction resolveEnumKeyName(keyType) {\n    switch (keyType) {\n        case constants_1.KeyType.ED25519: {\n            return 'ed25519Key';\n        }\n        case constants_1.KeyType.SECP256K1: {\n            return 'secp256k1Key';\n        }\n        default: {\n            throw Error(`unknown type ${keyType}`);\n        }\n    }\n}\n/**\n * DUPLICATED FROM @near-js/types - REPLACE WITH IMPORTED REFERENCE AND DELETE\n * This ends up being necessary for Wallet Selector dependencies with\n * outdated peer dependencies and should only be temporary\n */\nclass Enum {\n    constructor(properties) {\n        if (Object.keys(properties).length !== 1) {\n            throw new Error('Enum can only take single value');\n        }\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n        });\n    }\n}\n/**\n * PublicKey representation that has type and bytes of the key.\n */\nclass PublicKey extends Enum {\n    enum;\n    ed25519Key;\n    secp256k1Key;\n    constructor(publicKey) {\n        const keyName = resolveEnumKeyName(publicKey.keyType);\n        super({ [keyName]: publicKey });\n        this[keyName] = publicKey;\n        this.enum = keyName;\n    }\n    /**\n     * Creates a PublicKey instance from a string or an existing PublicKey instance.\n     * @param value The string or PublicKey instance to create a PublicKey from.\n     * @returns {PublicKey} The PublicKey instance.\n     */\n    static from(value) {\n        if (typeof value === 'string') {\n            return PublicKey.fromString(value);\n        }\n        return value;\n    }\n    /**\n     * Creates a PublicKey instance from an encoded key string.\n     * @param encodedKey The encoded key string.\n     * @returns {PublicKey} The PublicKey instance created from the encoded key string.\n     */\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        let publicKey;\n        let keyType;\n        if (parts.length === 1) {\n            publicKey = parts[0];\n        }\n        else if (parts.length === 2) {\n            publicKey = parts[1];\n            keyType = str_to_key_type(parts[0]);\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n        const decodedPublicKey = (0, utils_1.baseDecode)(publicKey);\n        if (!keyType) {\n            keyType = decodedPublicKey.length === constants_1.KeySize.SECP256k1_PUBLIC_KEY ? constants_1.KeyType.SECP256K1 : constants_1.KeyType.ED25519;\n        }\n        const keySize = keyType === constants_1.KeyType.ED25519 ? constants_1.KeySize.ED25519_PUBLIC_KEY : constants_1.KeySize.SECP256k1_PUBLIC_KEY;\n        if (decodedPublicKey.length !== keySize) {\n            throw new Error(`Invalid public key size (${decodedPublicKey.length}), must be ${keySize}`);\n        }\n        return new PublicKey({ keyType, data: decodedPublicKey });\n    }\n    /**\n     * Returns a string representation of the public key.\n     * @returns {string} The string representation of the public key.\n     */\n    toString() {\n        const encodedKey = (0, utils_1.baseEncode)(this.data);\n        return `${key_type_to_str(this.keyType)}:${encodedKey}`;\n    }\n    /**\n     * Verifies a message signature using the public key.\n     * @param message The message to be verified.\n     * @param signature The signature to be verified.\n     * @returns {boolean} `true` if the signature is valid, otherwise `false`.\n     */\n    verify(message, signature) {\n        const keyType = this.keyType;\n        const data = this.data;\n        switch (keyType) {\n            case constants_1.KeyType.ED25519:\n                return ed25519_1.ed25519.verify(signature, message, data);\n            case constants_1.KeyType.SECP256K1:\n                return secp256k1_1.default.ecdsaVerify(signature.subarray(0, 64), message, new Uint8Array([0x04, ...data]));\n            default:\n                throw new Error(`Unknown key type: ${keyType}`);\n        }\n    }\n    get keyPair() {\n        return this.ed25519Key || this.secp256k1Key;\n    }\n    get keyType() {\n        return this.keyPair.keyType;\n    }\n    get data() {\n        return this.keyPair.data;\n    }\n}\nexports.PublicKey = PublicKey;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyPairEd25519 = void 0;\nconst utils_1 = require(\"@near-js/utils\");\nconst ed25519_1 = require(\"@noble/curves/ed25519\");\nconst randombytes_1 = __importDefault(require(\"randombytes\"));\nconst constants_1 = require(\"./constants.cjs\");\nconst key_pair_base_1 = require(\"./key_pair_base.cjs\");\nconst public_key_1 = require(\"./public_key.cjs\");\n/**\n * This class provides key pair functionality for Ed25519 curve:\n * generating key pairs, encoding key pairs, signing and verifying.\n */\nclass KeyPairEd25519 extends key_pair_base_1.KeyPairBase {\n    publicKey;\n    secretKey;\n    extendedSecretKey;\n    /**\n     * Construct an instance of key pair given a secret key.\n     * It's generally assumed that these are encoded in base58.\n     * @param extendedSecretKey\n     */\n    constructor(extendedSecretKey) {\n        super();\n        const decoded = (0, utils_1.baseDecode)(extendedSecretKey);\n        const secretKey = new Uint8Array(decoded.slice(0, constants_1.KeySize.SECRET_KEY));\n        const publicKey = ed25519_1.ed25519.getPublicKey(new Uint8Array(secretKey));\n        this.publicKey = new public_key_1.PublicKey({ keyType: constants_1.KeyType.ED25519, data: publicKey });\n        this.secretKey = (0, utils_1.baseEncode)(secretKey);\n        this.extendedSecretKey = extendedSecretKey;\n    }\n    /**\n     * Generate a new random keypair.\n     * @example\n     * const keyRandom = KeyPair.fromRandom();\n     * keyRandom.publicKey\n     * // returns [PUBLIC_KEY]\n     *\n     * keyRandom.secretKey\n     * // returns [SECRET_KEY]\n     */\n    static fromRandom() {\n        const secretKey = (0, randombytes_1.default)(constants_1.KeySize.SECRET_KEY);\n        const publicKey = ed25519_1.ed25519.getPublicKey(new Uint8Array(secretKey));\n        const extendedSecretKey = new Uint8Array([...secretKey, ...publicKey]);\n        return new KeyPairEd25519((0, utils_1.baseEncode)(extendedSecretKey));\n    }\n    /**\n     * Signs a message using the key pair's secret key.\n     * @param message The message to be signed.\n     * @returns {Signature} The signature object containing the signature and the public key.\n     */\n    sign(message) {\n        const signature = ed25519_1.ed25519.sign(message, (0, utils_1.baseDecode)(this.secretKey));\n        return { signature, publicKey: this.publicKey };\n    }\n    /**\n     * Verifies the signature of a message using the key pair's public key.\n     * @param message The message to be verified.\n     * @param signature The signature to be verified.\n     * @returns {boolean} `true` if the signature is valid, otherwise `false`.\n     */\n    verify(message, signature) {\n        return this.publicKey.verify(message, signature);\n    }\n    /**\n     * Returns a string representation of the key pair in the format 'ed25519:[extendedSecretKey]'.\n     * @returns {string} The string representation of the key pair.\n     */\n    toString() {\n        return `ed25519:${this.extendedSecretKey}`;\n    }\n    /**\n     * Retrieves the public key associated with the key pair.\n     * @returns {PublicKey} The public key.\n     */\n    getPublicKey() {\n        return this.publicKey;\n    }\n}\nexports.KeyPairEd25519 = KeyPairEd25519;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyPairSecp256k1 = void 0;\nconst utils_1 = require(\"@near-js/utils\");\nconst randombytes_1 = __importDefault(require(\"randombytes\"));\nconst secp256k1_1 = __importDefault(require(\"secp256k1\"));\nconst constants_1 = require(\"./constants.cjs\");\nconst key_pair_base_1 = require(\"./key_pair_base.cjs\");\nconst public_key_1 = require(\"./public_key.cjs\");\n/**\n * This class provides key pair functionality for secp256k1 curve:\n * generating key pairs, encoding key pairs, signing and verifying.\n * nearcore expects secp256k1 public keys to be 64 bytes at all times,\n * even when string encoded the secp256k1 library returns 65 byte keys\n * (including a 1 byte header that indicates how the pubkey was encoded).\n * We'll force the secp256k1 library to always encode uncompressed\n * keys with the corresponding 0x04 header byte, then manually\n * insert/remove that byte as needed.\n */\nclass KeyPairSecp256k1 extends key_pair_base_1.KeyPairBase {\n    publicKey;\n    secretKey;\n    extendedSecretKey;\n    /**\n     * Construct an instance of key pair given a secret key.\n     * It's generally assumed that these are encoded in base58.\n     * @param {string} extendedSecretKey\n     */\n    constructor(extendedSecretKey) {\n        super();\n        const decoded = (0, utils_1.baseDecode)(extendedSecretKey);\n        const secretKey = new Uint8Array(decoded.slice(0, constants_1.KeySize.SECRET_KEY));\n        const withHeader = secp256k1_1.default.publicKeyCreate(new Uint8Array(secretKey), false);\n        const data = withHeader.subarray(1, withHeader.length); // remove the 0x04 header byte\n        this.publicKey = new public_key_1.PublicKey({\n            keyType: constants_1.KeyType.SECP256K1,\n            data\n        });\n        this.secretKey = (0, utils_1.baseEncode)(secretKey);\n        this.extendedSecretKey = extendedSecretKey;\n    }\n    /**\n     * Generate a new random keypair.\n     * @example\n     * const keyRandom = KeyPair.fromRandom();\n     * keyRandom.publicKey\n     * // returns [PUBLIC_KEY]\n     *\n     * keyRandom.secretKey\n     * // returns [SECRET_KEY]\n     */\n    static fromRandom() {\n        // TODO: find better way to generate PK\n        const secretKey = (0, randombytes_1.default)(constants_1.KeySize.SECRET_KEY);\n        const withHeader = secp256k1_1.default.publicKeyCreate(new Uint8Array(secretKey), false);\n        const publicKey = withHeader.subarray(1, withHeader.length);\n        const extendedSecretKey = new Uint8Array([...secretKey, ...publicKey]);\n        return new KeyPairSecp256k1((0, utils_1.baseEncode)(extendedSecretKey));\n    }\n    sign(message) {\n        // nearcore expects 65 byte signatures formed by appending the recovery id to the 64 byte signature\n        const { signature, recid } = secp256k1_1.default.ecdsaSign(message, (0, utils_1.baseDecode)(this.secretKey));\n        return { signature: new Uint8Array([...signature, recid]), publicKey: this.publicKey };\n    }\n    verify(message, signature) {\n        return this.publicKey.verify(message, signature);\n    }\n    toString() {\n        return `secp256k1:${this.extendedSecretKey}`;\n    }\n    getPublicKey() {\n        return this.publicKey;\n    }\n}\nexports.KeyPairSecp256k1 = KeyPairSecp256k1;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyPair = void 0;\nconst key_pair_base_1 = require(\"./key_pair_base.cjs\");\nconst key_pair_ed25519_1 = require(\"./key_pair_ed25519.cjs\");\nconst key_pair_secp256k1_1 = require(\"./key_pair_secp256k1.cjs\");\nclass KeyPair extends key_pair_base_1.KeyPairBase {\n    /**\n     * @param curve Name of elliptical curve, case-insensitive\n     * @returns Random KeyPair based on the curve\n     */\n    static fromRandom(curve) {\n        switch (curve.toUpperCase()) {\n            case 'ED25519': return key_pair_ed25519_1.KeyPairEd25519.fromRandom();\n            case 'SECP256K1': return key_pair_secp256k1_1.KeyPairSecp256k1.fromRandom();\n            default: throw new Error(`Unknown curve ${curve}`);\n        }\n    }\n    /**\n     * Creates a key pair from an encoded key string.\n     * @param encodedKey The encoded key string.\n     * @returns {KeyPair} The key pair created from the encoded key string.\n     */\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        if (parts.length === 2) {\n            switch (parts[0].toUpperCase()) {\n                case 'ED25519': return new key_pair_ed25519_1.KeyPairEd25519(parts[1]);\n                case 'SECP256K1': return new key_pair_secp256k1_1.KeyPairSecp256k1(parts[1]);\n                default: throw new Error(`Unknown curve: ${parts[0]}`);\n            }\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n    }\n}\nexports.KeyPair = KeyPair;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PublicKey = exports.KeyPairSecp256k1 = exports.KeyPairEd25519 = exports.KeyPair = exports.KeyType = void 0;\nvar constants_1 = require(\"./constants.cjs\");\nObject.defineProperty(exports, \"KeyType\", { enumerable: true, get: function () { return constants_1.KeyType; } });\nvar key_pair_1 = require(\"./key_pair.cjs\");\nObject.defineProperty(exports, \"KeyPair\", { enumerable: true, get: function () { return key_pair_1.KeyPair; } });\nvar key_pair_ed25519_1 = require(\"./key_pair_ed25519.cjs\");\nObject.defineProperty(exports, \"KeyPairEd25519\", { enumerable: true, get: function () { return key_pair_ed25519_1.KeyPairEd25519; } });\nvar key_pair_secp256k1_1 = require(\"./key_pair_secp256k1.cjs\");\nObject.defineProperty(exports, \"KeyPairSecp256k1\", { enumerable: true, get: function () { return key_pair_secp256k1_1.KeyPairSecp256k1; } });\nvar public_key_1 = require(\"./public_key.cjs\");\nObject.defineProperty(exports, \"PublicKey\", { enumerable: true, get: function () { return public_key_1.PublicKey; } });\n", "import * as borsh from \"borsh\";\nimport js_sha256 from \"js-sha256\";\nimport { PublicKey } from \"@near-js/crypto\";\n\nexport type SignMessageOptionsNEP0413 = {\n  message: string; // The message that wants to be transmitted.\n  recipient: string; // The recipient to whom the message is destined (e.g. \"alice.near\" or \"myapp.com\").\n  nonce: number[]; // A nonce that uniquely identifies this instance of the message, denoted as a 32 bytes array (a fixed `Buffer` in JS/TS).\n};\n\nexport type SignedMessageNEP0413 = {\n  signature: string;\n  publicKey: string;\n  accountId: string;\n};\n\nexport class AuthPayload implements SignMessageOptionsNEP0413 {\n  readonly message: string;\n  readonly recipient: string;\n  readonly nonce: number[];\n  readonly callbackUrl?: string | undefined;\n  readonly tag: number;\n\n  constructor({ message, nonce, recipient }: SignMessageOptionsNEP0413) {\n    this.tag = 2147484061;\n    this.message = message;\n    this.nonce = nonce;\n    this.recipient = recipient;\n  }\n}\n\nexport const authPayloadSchema: borsh.Schema = {\n  struct: {\n    tag: \"u32\",\n    message: \"string\",\n    nonce: { array: { type: \"u8\", len: 32 } },\n    recipient: \"string\",\n    callbackUrl: { option: \"string\" },\n  },\n};\n\nexport function verifySignature(request: SignMessageOptionsNEP0413, result: SignedMessageNEP0413) {\n  // Reconstruct the payload that was **actually signed**\n  const payload = new AuthPayload(request);\n  const borsh_payload = borsh.serialize(authPayloadSchema, payload);\n  const to_sign = Uint8Array.from(js_sha256.sha256.array(borsh_payload));\n\n  // Reconstruct the signature from the parameter given in the URL\n  let real_signature = new Uint8Array(Buffer.from(result.signature, \"base64\"));\n\n  // Use the public Key to verify that the private-counterpart signed the message\n  const myPK = PublicKey.from(result.publicKey);\n  return myPK.verify(to_sign, real_signature);\n}\n", "const uuidPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\nfunction valid(uuid) {\n  return uuidPattern.test(uuid);\n}\n\n// Based on https://abhishekdutta.org/blog/standalone_uuid_generator_in_javascript.html\n// IE11 and Modern Browsers Only\nfunction uuid4() {\n  var temp_url = URL.createObjectURL(new Blob());\n  var uuid = temp_url.toString();\n  URL.revokeObjectURL(temp_url);\n  return uuid.split(/[:\\/]/g).pop().toLowerCase(); // remove prefixes\n}\nuuid4.valid = valid;\n\nexport default uuid4;\nexport { uuid4, valid };\n", "(function() {\n  var base64map\n      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n\n  crypt = {\n    // Bit-wise rotation left\n    rotl: function(n, b) {\n      return (n << b) | (n >>> (32 - b));\n    },\n\n    // Bit-wise rotation right\n    rotr: function(n, b) {\n      return (n << (32 - b)) | (n >>> b);\n    },\n\n    // Swap big-endian to little-endian and vice versa\n    endian: function(n) {\n      // If number given, swap endian\n      if (n.constructor == Number) {\n        return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;\n      }\n\n      // Else, assume array and swap all items\n      for (var i = 0; i < n.length; i++)\n        n[i] = crypt.endian(n[i]);\n      return n;\n    },\n\n    // Generate an array of any length of random bytes\n    randomBytes: function(n) {\n      for (var bytes = []; n > 0; n--)\n        bytes.push(Math.floor(Math.random() * 256));\n      return bytes;\n    },\n\n    // Convert a byte array to big-endian 32-bit words\n    bytesToWords: function(bytes) {\n      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)\n        words[b >>> 5] |= bytes[i] << (24 - b % 32);\n      return words;\n    },\n\n    // Convert big-endian 32-bit words to a byte array\n    wordsToBytes: function(words) {\n      for (var bytes = [], b = 0; b < words.length * 32; b += 8)\n        bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a hex string\n    bytesToHex: function(bytes) {\n      for (var hex = [], i = 0; i < bytes.length; i++) {\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n      }\n      return hex.join('');\n    },\n\n    // Convert a hex string to a byte array\n    hexToBytes: function(hex) {\n      for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n      return bytes;\n    },\n\n    // Convert a byte array to a base-64 string\n    bytesToBase64: function(bytes) {\n      for (var base64 = [], i = 0; i < bytes.length; i += 3) {\n        var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n        for (var j = 0; j < 4; j++)\n          if (i * 8 + j * 6 <= bytes.length * 8)\n            base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));\n          else\n            base64.push('=');\n      }\n      return base64.join('');\n    },\n\n    // Convert a base-64 string to a byte array\n    base64ToBytes: function(base64) {\n      // Remove non-base-64 characters\n      base64 = base64.replace(/[^A-Z0-9+\\/]/ig, '');\n\n      for (var bytes = [], i = 0, imod4 = 0; i < base64.length;\n          imod4 = ++i % 4) {\n        if (imod4 == 0) continue;\n        bytes.push(((base64map.indexOf(base64.charAt(i - 1))\n            & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))\n            | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));\n      }\n      return bytes;\n    }\n  };\n\n  module.exports = crypt;\n})();\n", "var charenc = {\n  // UTF-8 encoding\n  utf8: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));\n    }\n  },\n\n  // Binary encoding\n  bin: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      for (var bytes = [], i = 0; i < str.length; i++)\n        bytes.push(str.charCodeAt(i) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      for (var str = [], i = 0; i < bytes.length; i++)\n        str.push(String.fromCharCode(bytes[i]));\n      return str.join('');\n    }\n  }\n};\n\nmodule.exports = charenc;\n", "(function() {\n  var crypt = require('crypt'),\n      utf8 = require('charenc').utf8,\n      bin = require('charenc').bin,\n\n  // The core\n  sha1 = function (message) {\n    // Convert to byte array\n    if (message.constructor == String)\n      message = utf8.stringToBytes(message);\n    else if (typeof Buffer !== 'undefined' && typeof Buffer.isBuffer == 'function' && Buffer.isBuffer(message))\n      message = Array.prototype.slice.call(message, 0);\n    else if (!Array.isArray(message))\n      message = message.toString();\n\n    // otherwise assume byte array\n\n    var m  = crypt.bytesToWords(message),\n        l  = message.length * 8,\n        w  = [],\n        H0 =  1732584193,\n        H1 = -271733879,\n        H2 = -1732584194,\n        H3 =  271733878,\n        H4 = -1009589776;\n\n    // Padding\n    m[l >> 5] |= 0x80 << (24 - l % 32);\n    m[((l + 64 >>> 9) << 4) + 15] = l;\n\n    for (var i = 0; i < m.length; i += 16) {\n      var a = H0,\n          b = H1,\n          c = H2,\n          d = H3,\n          e = H4;\n\n      for (var j = 0; j < 80; j++) {\n\n        if (j < 16)\n          w[j] = m[i + j];\n        else {\n          var n = w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16];\n          w[j] = (n << 1) | (n >>> 31);\n        }\n\n        var t = ((H0 << 5) | (H0 >>> 27)) + H4 + (w[j] >>> 0) + (\n                j < 20 ? (H1 & H2 | ~H1 & H3) + 1518500249 :\n                j < 40 ? (H1 ^ H2 ^ H3) + 1859775393 :\n                j < 60 ? (H1 & H2 | H1 & H3 | H2 & H3) - 1894007588 :\n                         (H1 ^ H2 ^ H3) - 899497514);\n\n        H4 = H3;\n        H3 = H2;\n        H2 = (H1 << 30) | (H1 >>> 2);\n        H1 = H0;\n        H0 = t;\n      }\n\n      H0 += a;\n      H1 += b;\n      H2 += c;\n      H3 += d;\n      H4 += e;\n    }\n\n    return [H0, H1, H2, H3, H4];\n  },\n\n  // Public API\n  api = function (message, options) {\n    var digestbytes = crypt.wordsToBytes(sha1(message));\n    return options && options.asBytes ? digestbytes :\n        options && options.asString ? bin.bytesToString(digestbytes) :\n        crypt.bytesToHex(digestbytes);\n  };\n\n  api._blocksize = 16;\n  api._digestsize = 20;\n\n  module.exports = api;\n})();\n", "import sha1 from \"sha1\";\nimport uuid4 from \"uuid4\";\nimport { baseEncode } from \"@near-js/utils\";\n\nexport const proxyApi = \"https://h4n.app\";\n\nexport const getResponse = async (id: string): Promise<object> => {\n  const res = await fetch(`${proxyApi}/${id}/response`, {\n    headers: { \"content-type\": \"application/json\" },\n    method: \"GET\",\n  });\n\n  if (res.ok === false) {\n    throw Error(await res.text());\n  }\n\n  const { data } = await res.json();\n  return JSON.parse(data);\n};\n\nexport const deleteRequest = async (id: string) => {\n  const res = await fetch(`${proxyApi}/${id}`, {\n    headers: { \"content-type\": \"application/json\" },\n    method: \"DELETE\",\n  });\n\n  if (res.ok === false) {\n    throw Error(await res.text());\n  }\n};\n\nexport const computeRequestId = async (request: object) => {\n  const query = baseEncode(JSON.stringify({ ...request, _id: uuid4() }));\n  const hashsum = sha1(query);\n  const id = Buffer.from(hashsum, \"hex\").toString(\"base64\");\n  const requestId = id.replaceAll(\"/\", \"_\").replaceAll(\"-\", \"+\").slice(0, 13);\n  return { requestId, query };\n};\n\nexport const createRequest = async (request: object, signal?: AbortSignal) => {\n  const { query, requestId } = await computeRequestId(request);\n  const res = await fetch(`${proxyApi}/${requestId}/request`, {\n    body: JSON.stringify({ data: query }),\n    headers: { \"content-type\": \"application/json\" },\n    method: \"POST\",\n    signal,\n  });\n\n  if (res.ok === false) {\n    throw Error(await res.text());\n  }\n\n  return requestId;\n};\n", "import uuid4 from \"uuid4\";\nimport { baseEncode } from \"@near-js/utils\";\nimport type { InjectedState, HotRequest, HotResponse } from \"./helpers/types\";\nimport { createRequest, getResponse } from \"./helpers/proxy\";\n\ndeclare global {\n  interface Window {\n    hotExtension?: {\n      autoRun: boolean;\n      request: (method: string, args: any) => any;\n      subscribe: (event: string, args: any) => () => void;\n      evm: any;\n    };\n  }\n}\n\nexport const wait = (timeout: number) => {\n  return new Promise<void>((resolve) => setTimeout(resolve, timeout));\n};\n\nexport class RequestFailed extends Error {\n  name = \"RequestFailed\";\n  constructor(readonly payload: any) {\n    super();\n  }\n}\n\nexport const getExtension = () => {\n  if (typeof window === \"undefined\") return null;\n  return window.hotExtension;\n};\n\nlet connector: HTMLDivElement | undefined;\nif (typeof window !== \"undefined\") {\n  window.addEventListener(\"message\", (e: any) => {\n    if (e.data === \"hot-close\") {\n      connector?.remove();\n      connector = undefined;\n    }\n  });\n}\n\nconst createIframe = (widget: string) => {\n  connector?.remove();\n  connector = document.createElement(\"div\");\n\n  const iframe = document.createElement(\"iframe\");\n  connector?.appendChild(iframe);\n\n  iframe.src = widget;\n  iframe.allow = \"usb\";\n  iframe.style.border = \"none\";\n  iframe.style.borderRadius = \"16px\";\n  iframe.style.background = \"#fff\";\n  iframe.style.overflow = \"hidden\";\n  iframe.style.background = \"#1D1F20\";\n  iframe.style.border = \"1px solid #2C3034\";\n  iframe.style.width = \"375px\";\n  iframe.style.height = \"560px\";\n  iframe.onclick = (e) => e.stopPropagation();\n\n  connector.style.padding = \"16px\";\n  connector.style.zIndex = \"100000000000000\";\n  connector.style.position = \"fixed\";\n  connector.style.display = \"flex\";\n  connector.style.justifyContent = \"center\";\n  connector.style.alignItems = \"center\";\n  connector.style.top = \"0\";\n  connector.style.left = \"0\";\n  connector.style.width = \"100%\";\n  connector.style.height = \"100%\";\n  connector.style.background = \"rgba(0, 0, 0, 0.1)\";\n  connector.style.backdropFilter = \"blur(24px)\";\n  connector.onclick = () => {\n    connector?.remove();\n    connector = undefined;\n  };\n\n  document.body.appendChild(connector);\n  return connector;\n};\n\nclass HOT {\n  walletId = \"https://t.me/herewalletbot/app\";\n  ancestorOrigins = [\n    \"http://localhost:1234\",\n    \"https://my.herewallet.app\",\n    \"https://tgapp-dev.herewallet.app\",\n    \"https://tgapp.herewallet.app\",\n    \"https://beta.herewallet.app\",\n  ];\n\n  readonly connection = new Promise<InjectedState | null>((resolve) => {\n    if (typeof window === \"undefined\") return resolve(null);\n    if (window?.self === window?.top) return resolve(null);\n    this.injectedRequest(\"initialized\", {})\n      .then(resolve)\n      .catch(() => resolve(null));\n  });\n\n  get isInjected() {\n    if (typeof window === \"undefined\") return false;\n    if (window.hotExtension != null) return window.hotExtension.autoRun;\n    return this.ancestorOrigins.includes(window.location.ancestorOrigins?.[0]);\n  }\n\n  openInHotBrowserUrl: string | null = null;\n  toggleOpenInHotBrowser(url: string | null) {\n    this.openInHotBrowserUrl = url;\n  }\n\n  customProvider?: (data: any, chain: number, address?: string | null) => Promise<any>;\n  setupEthProvider(provider?: (data: any, chain: number, address?: string | null) => Promise<any>) {\n    this.customProvider = provider;\n  }\n\n  async injectedRequest<T extends keyof HotResponse>(method: T, request: HotRequest[T]): Promise<HotResponse[T]> {\n    const id = uuid4();\n    return new Promise<HotResponse[T]>((resolve, reject) => {\n      const handler = (e: any) => {\n        if (e.data.id !== id) return;\n        window?.removeEventListener(\"message\", handler);\n        if (e.data.success) return resolve(e.data.payload);\n        else return reject(e.data.payload);\n      };\n\n      window?.parent.postMessage({ $hot: true, method, request, id }, \"*\");\n      window?.addEventListener(\"message\", handler);\n    });\n  }\n\n  subscribe(event: string, cb: (e: any) => void) {\n    if (!window.hotExtension) return () => {};\n    return window.hotExtension.subscribe(event, cb);\n  }\n\n  async request<T extends keyof HotResponse>(method: T, request: HotRequest[T]): Promise<HotResponse[T]> {\n    if (window.hotExtension != null) return window.hotExtension.request(method, request);\n    if (this.isInjected) return this.injectedRequest(method, request);\n\n    const id = uuid4();\n    const WebApp: any = (window as any)?.Telegram?.WebApp;\n\n    const requestId = await createRequest({\n      inside: !!this.openInHotBrowserUrl || (method === \"ethereum\" && this.customProvider == null),\n      origin: typeof this.openInHotBrowserUrl === \"string\" ? this.openInHotBrowserUrl : location.href,\n      $hot: true,\n      method,\n      request,\n      id,\n    });\n\n    const link = `${this.walletId}?startapp=hotconnect-${baseEncode(requestId)}`;\n    if (WebApp) WebApp?.openTelegramLink(link);\n    else {\n      const origin = `https://hot-labs.org/hot-widget/index.html`;\n      createIframe(`${origin}?hotconnect-${baseEncode(requestId)}`);\n    }\n\n    const poolResponse = async () => {\n      await wait(3000);\n      const data: any = await getResponse(requestId).catch(() => null);\n      if (data == null) return await poolResponse();\n      if (data.success) return data.payload;\n      throw new RequestFailed(data.payload);\n    };\n\n    const result = await poolResponse();\n    connector?.remove();\n    return result;\n  }\n}\n\nexport default new HOT();\n", "export type { HotRequest, HotResponse, InjectedState } from \"./helpers/types\";\nexport { verifySignature, AuthPayload, authPayloadSchema } from \"./helpers/nep0314\";\nexport { default as HOT, RequestFailed } from \"./hot\";\n", "export { StellarWalletsKit } from './stellar-wallets-kit.mjs';\nexport { ModalThemes, StellarWalletsModal } from './components/modal/stellar-wallets-modal.mjs';\nexport { ButtonThemes, StellarWalletsButton } from './components/button/stellar-wallets-button.mjs';\nexport { StellarSelectorModal } from './components/selector-modal/stellar-selector-modal.mjs';\nexport { ModuleType, WalletNetwork } from './types.mjs';\nexport { allowAllModules, parseError, sep43Modules } from './utils.mjs';\nexport { XBULL_ID, xBullModule } from './modules/xbull.module.mjs';\nexport { FREIGHTER_ID, FreighterModule } from './modules/freighter.module.mjs';\nexport { ALBEDO_ID, AlbedoModule, AlbedoNetwork } from './modules/albedo.module.mjs';\nexport { RABET_ID, RabetModule, RabetNetwork } from './modules/rabet.module.mjs';\nexport { LOBSTR_ID, LobstrModule } from './modules/lobstr.module.mjs';\nexport { HANA_ID, HanaModule } from './modules/hana.module.mjs';\nexport { HOTWALLET_ID, HotWalletModule } from './modules/hotwallet.module.mjs';\nexport { KLEVER_ID, KleverModule } from './modules/klever.module.mjs';\n//# sourceMappingURL=index.mjs.map\n", "import { BehaviorSubject, isObservable, firstValueFrom, Subject, Observable, pipe, asapScheduler } from 'rxjs';\nimport { filter, take, map, distinctUntilChanged, debounceTime } from 'rxjs/operators';\n\nfunction createState(...propsFactories) {\n  const result = {\n    config: {},\n    state: {}\n  };\n  for (const {\n    config,\n    props\n  } of propsFactories) {\n    Object.assign(result.config, config);\n    Object.assign(result.state, props);\n  }\n  return result;\n}\n\nlet asyncBatchesInProgress = 0;\nconst batchInProgress = new BehaviorSubject(false);\nconst batchDone$ = batchInProgress.asObservable().pipe(filter(inProgress => !inProgress), take(1));\nfunction emitOnce(cb) {\n  if (!batchInProgress.getValue()) {\n    batchInProgress.next(true);\n    const value = cb();\n    if (asyncBatchesInProgress === 0) {\n      batchInProgress.next(false);\n    }\n    return value;\n  }\n  return cb();\n}\nasync function emitOnceAsync(cb) {\n  asyncBatchesInProgress++;\n  if (!batchInProgress.getValue()) {\n    batchInProgress.next(true);\n  }\n  const callbackReturnValue = cb();\n  const value = await (isObservable(callbackReturnValue) ? firstValueFrom(callbackReturnValue) : callbackReturnValue);\n  if (--asyncBatchesInProgress === 0) {\n    batchInProgress.next(false);\n  }\n  return value;\n}\n\n// this is internal object that's not exported to public API\nconst elfHooksRegistry = {};\nclass ElfHooks {\n  registerPreStoreUpdate(fn) {\n    elfHooksRegistry.preStoreUpdate = fn;\n  }\n  registerPreStateInit(fn) {\n    elfHooksRegistry.preStateInit = fn;\n  }\n}\nconst elfHooks = new ElfHooks();\n\nconst registry = new Map();\nconst registryActions = new Subject();\nconst registry$ = registryActions.asObservable();\n\n// @internal\nfunction addStore(store) {\n  registry.set(store.name, store);\n  registryActions.next({\n    type: 'add',\n    store\n  });\n}\n\n// @internal\nfunction removeStore(store) {\n  registry.delete(store.name);\n  registryActions.next({\n    type: 'remove',\n    store\n  });\n}\nfunction getStore(name) {\n  return registry.get(name);\n}\nfunction getRegistry() {\n  return registry;\n}\nfunction getStoresSnapshot() {\n  const stores = {};\n  registry.forEach((store, key) => {\n    stores[key] = store.getValue();\n  });\n  return stores;\n}\n\nlet events = [];\n\n/**\n *\n * @private function don't use\n *\n */\nfunction _setEvent(e) {\n  events.push(e);\n}\nfunction emitEvents(source) {\n  if (events.length) {\n    events.forEach(e => source.next(e));\n  }\n  events = [];\n}\n\nclass Store extends BehaviorSubject {\n  constructor(storeDef) {\n    super(storeDef.state);\n    this.storeDef = storeDef;\n    this.initialState = void 0;\n    this.state = void 0;\n    this.batchInProgress = false;\n    this.events = new Subject();\n    this.context = {\n      config: this.getConfig(),\n      setEvent: action => {\n        _setEvent(action);\n      }\n    };\n    this.events$ = this.events.asObservable();\n    this.state = this.getInitialState(storeDef.state);\n    this.initialState = this.getValue();\n    addStore(this);\n  }\n  get name() {\n    return this.storeDef.name;\n  }\n  getInitialState(state) {\n    if (elfHooksRegistry.preStateInit) {\n      return elfHooksRegistry.preStateInit(state, this.name);\n    }\n    return state;\n  }\n  getConfig() {\n    return this.storeDef.config;\n  }\n  query(selector) {\n    return selector(this.getValue());\n  }\n  update(...reducers) {\n    const currentState = this.getValue();\n    let nextState = reducers.reduce((value, reducer) => {\n      value = reducer(value, this.context);\n      return value;\n    }, currentState);\n    if (elfHooksRegistry.preStoreUpdate) {\n      nextState = elfHooksRegistry.preStoreUpdate(currentState, nextState, this.name);\n    }\n    if (nextState !== currentState) {\n      this.state = nextState;\n      if (batchInProgress.getValue()) {\n        if (!this.batchInProgress) {\n          this.batchInProgress = true;\n          batchDone$.subscribe(() => {\n            super.next(this.state);\n            emitEvents(this.events);\n            this.batchInProgress = false;\n          });\n        }\n      } else {\n        super.next(this.state);\n        emitEvents(this.events);\n      }\n    }\n  }\n  getValue() {\n    return this.state;\n  }\n  reset() {\n    this.update(() => this.initialState);\n  }\n  combine(observables) {\n    let hasChange = true;\n    const buffer = {};\n    return new Observable(observer => {\n      for (const [key, query] of Object.entries(observables)) {\n        observer.add(query.subscribe(value => {\n          buffer[key] = value;\n          hasChange = true;\n        }));\n      }\n      return this.subscribe({\n        next() {\n          if (hasChange) {\n            observer.next({\n              ...buffer\n            });\n            hasChange = false;\n          }\n        },\n        error(e) {\n          observer.error(e);\n        },\n        complete() {\n          observer.complete();\n        }\n      });\n    });\n  }\n  destroy() {\n    removeStore(this);\n    this.reset();\n  }\n  next(value) {\n    this.update(() => value);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  error() {}\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  complete() {}\n}\n\nfunction createStore(storeConfig, ...propsFactories) {\n  const {\n    state,\n    config\n  } = createState(...propsFactories);\n  const {\n    name\n  } = storeConfig;\n  return new Store({\n    name,\n    state,\n    config\n  });\n}\n\nfunction coerceArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\nfunction isUndefined(value) {\n  return value === undefined;\n}\nfunction isString(value) {\n  return typeof value === 'string';\n}\nfunction capitalize(key) {\n  return key.charAt(0).toUpperCase() + key.slice(1);\n}\nfunction isObject(item) {\n  return typeof item === 'object' && !Array.isArray(item) && item !== null;\n}\nfunction deepFreeze(o) {\n  Object.freeze(o);\n  const oIsFunction = typeof o === 'function';\n  const hasOwnProp = Object.prototype.hasOwnProperty;\n  Object.getOwnPropertyNames(o).forEach(function (prop) {\n    if (hasOwnProp.call(o, prop) && (oIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true) && o[prop] !== null && (typeof o[prop] === 'object' || typeof o[prop] === 'function') && !Object.isFrozen(o[prop])) {\n      deepFreeze(o[prop]);\n    }\n  });\n  return o;\n}\n\n/**\n *\n * Update a root property of the state\n *\n * @example\n *\n * store.update(setProp('foo', 'bar'))\n *\n * @example\n *\n * store.update(setProp('count', count => count + 1))\n *\n */\nfunction setProp(key, value) {\n  return function (state) {\n    return {\n      ...state,\n      [key]: isFunction(value) ? value(state[key]) : value\n    };\n  };\n}\n\n/**\n *\n * Update a root property of the state\n *\n * @example\n *\n * store.update(setProps({ count: 1, bar: 'baz'}))\n *\n * @example\n *\n * store.update(setProps(state => ({\n *   count: 1,\n *   nested: {\n *     ...state.nested,\n *     foo: 'bar'\n *   }\n * })))\n *\n */\nfunction setProps(props) {\n  return function (state) {\n    return {\n      ...state,\n      ...(isFunction(props) ? props(state) : props)\n    };\n  };\n}\n\nfunction select(mapFn) {\n  return pipe(map(mapFn), distinctUntilChanged());\n}\nfunction head() {\n  return map(arr => arr[0]);\n}\nfunction distinctUntilArrayItemChanged() {\n  return distinctUntilChanged((prevCollection, currentCollection) => {\n    if (prevCollection === currentCollection) {\n      return true;\n    }\n    if (prevCollection.length !== currentCollection.length) {\n      return false;\n    }\n    const isOneOfItemReferenceChanged = currentCollection.some((item, i) => {\n      return prevCollection[i] !== item;\n    });\n\n    // return false means there is a change and we want to call next()\n    return !isOneOfItemReferenceChanged;\n  });\n}\nconst asap = () => debounceTime(0, asapScheduler);\nfunction filterNil() {\n  return filter(value => value !== null && value !== undefined);\n}\n\nfunction propsFactory(key, {\n  initialValue: propsFactoryInitialValue,\n  config\n}) {\n  let initialValue = propsFactoryInitialValue;\n  const normalizedKey = capitalize(key);\n  return {\n    [`with${normalizedKey}`](value = initialValue) {\n      return {\n        props: {\n          [key]: value\n        },\n        config\n      };\n    },\n    [`set${normalizedKey}InitialValue`](value) {\n      initialValue = value;\n    },\n    [`set${normalizedKey}`](value) {\n      return function (state) {\n        const newVal = isFunction(value) ? value(state) : value;\n        if (newVal === state[key]) {\n          return state;\n        }\n        return {\n          ...state,\n          [key]: newVal\n        };\n      };\n    },\n    [`update${normalizedKey}`](value) {\n      return function (state) {\n        const newVal = isFunction(value) ? value(state) : value;\n        if (newVal === state[key]) {\n          return state;\n        }\n        return {\n          ...state,\n          [key]: isObject(newVal) ? {\n            ...state[key],\n            ...newVal\n          } : newVal\n        };\n      };\n    },\n    [`reset${normalizedKey}`]() {\n      return function (state) {\n        return {\n          ...state,\n          [key]: initialValue\n        };\n      };\n    },\n    [`select${normalizedKey}`]() {\n      return select(state => state[key]);\n    },\n    [`get${normalizedKey}`](state) {\n      return state[key];\n    }\n  };\n}\n\nfunction propsArrayFactory(key, options) {\n  const normalizedKey = capitalize(key);\n  const base = propsFactory(key, options);\n  return {\n    ...base,\n    [`add${normalizedKey}`](items) {\n      return function (state) {\n        return {\n          ...state,\n          [key]: arrayAdd(state[key], items)\n        };\n      };\n    },\n    [`remove${normalizedKey}`](items) {\n      return function (state) {\n        return {\n          ...state,\n          [key]: arrayRemove(state[key], items)\n        };\n      };\n    },\n    [`toggle${normalizedKey}`](items) {\n      return function (state) {\n        return {\n          ...state,\n          [key]: arrayToggle(state[key], items)\n        };\n      };\n    },\n    [`update${normalizedKey}`](predicateOrIds, obj) {\n      return function (state) {\n        return {\n          ...state,\n          [key]: arrayUpdate(state[key], predicateOrIds, obj)\n        };\n      };\n    },\n    [`in${normalizedKey}`](item) {\n      return state => inArray(state[key], item);\n    }\n  };\n}\nfunction arrayAdd(arr, items) {\n  return [...arr, ...coerceArray(items)];\n}\nfunction arrayRemove(arr, items) {\n  const toArray = coerceArray(items);\n  return arr.filter(current => !toArray.includes(current));\n}\nfunction arrayToggle(arr, items) {\n  const toArray = coerceArray(items);\n  const result = [...arr];\n  toArray.forEach(item => {\n    const i = result.indexOf(item);\n    i > -1 ? result.splice(i, 1) : result.push(item);\n  });\n  return result;\n}\nfunction inArray(arr, item) {\n  return arr.includes(item);\n}\nfunction arrayUpdate(arr, item, newItem) {\n  return arr.map(current => {\n    return current === item ? newItem : current;\n  });\n}\n\nfunction withProps(props) {\n  return {\n    props,\n    config: undefined\n  };\n}\n\nlet __DEV__ = true;\nfunction enableElfProdMode() {\n  __DEV__ = false;\n}\n\n// @internal\nfunction isDev() {\n  return __DEV__;\n}\n\nexport { Store, _setEvent, asap, capitalize, coerceArray, createState, createStore, deepFreeze, distinctUntilArrayItemChanged, elfHooks, emitOnce, emitOnceAsync, enableElfProdMode, filterNil, getRegistry, getStore, getStoresSnapshot, head, isDev, isFunction, isObject, isString, isUndefined, propsArrayFactory, propsFactory, registry$, select, setProp, setProps, withProps };\n", "//////////////////////////////////////////////////////////\n// Here we need to reference our other deep imports\n// so VS code will figure out where they are\n// see conversation here:\n// https://github.com/microsoft/TypeScript/issues/43034\n//////////////////////////////////////////////////////////\n\n// tslint:disable: no-reference\n// It's tempting to add references to all of the deep-import locations, but\n// adding references to those that require DOM types breaks Node projects.\n/// <reference path=\"./operators/index.ts\" />\n/// <reference path=\"./testing/index.ts\" />\n// tslint:enable: no-reference\n\n/* Observable */\nexport { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { Operator } from './internal/Operator';\nexport { observable } from './internal/symbol/observable';\nexport { animationFrames } from './internal/observable/dom/animationFrames';\n\n/* Subjects */\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\n\n/* Schedulers */\nexport { asap, asapScheduler } from './internal/scheduler/asap';\nexport { async, asyncScheduler } from './internal/scheduler/async';\nexport { queue, queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame, animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\n\n/* Subscription */\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\n\n/* Notification */\nexport { Notification, NotificationKind } from './internal/Notification';\n\n/* Utils */\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\n\n/* Promise Conversion */\nexport { lastValueFrom } from './internal/lastValueFrom';\nexport { firstValueFrom } from './internal/firstValueFrom';\n\n/* Error types */\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { NotFoundError } from './internal/util/NotFoundError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { SequenceError } from './internal/util/SequenceError';\nexport { TimeoutError } from './internal/operators/timeout';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\n\n/* Static observable creation exports */\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { connectable } from './internal/observable/connectable';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { partition } from './internal/observable/partition';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\nexport { scheduled } from './internal/scheduled/scheduled';\n\n/* Constants */\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\n\n/* Types */\nexport * from './internal/types';\n\n/* Config */\nexport { config, GlobalConfig } from './internal/config';\n\n/* Operators */\nexport { audit } from './internal/operators/audit';\nexport { auditTime } from './internal/operators/auditTime';\nexport { buffer } from './internal/operators/buffer';\nexport { bufferCount } from './internal/operators/bufferCount';\nexport { bufferTime } from './internal/operators/bufferTime';\nexport { bufferToggle } from './internal/operators/bufferToggle';\nexport { bufferWhen } from './internal/operators/bufferWhen';\nexport { catchError } from './internal/operators/catchError';\nexport { combineAll } from './internal/operators/combineAll';\nexport { combineLatestAll } from './internal/operators/combineLatestAll';\nexport { combineLatestWith } from './internal/operators/combineLatestWith';\nexport { concatAll } from './internal/operators/concatAll';\nexport { concatMap } from './internal/operators/concatMap';\nexport { concatMapTo } from './internal/operators/concatMapTo';\nexport { concatWith } from './internal/operators/concatWith';\nexport { connect, ConnectConfig } from './internal/operators/connect';\nexport { count } from './internal/operators/count';\nexport { debounce } from './internal/operators/debounce';\nexport { debounceTime } from './internal/operators/debounceTime';\nexport { defaultIfEmpty } from './internal/operators/defaultIfEmpty';\nexport { delay } from './internal/operators/delay';\nexport { delayWhen } from './internal/operators/delayWhen';\nexport { dematerialize } from './internal/operators/dematerialize';\nexport { distinct } from './internal/operators/distinct';\nexport { distinctUntilChanged } from './internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from './internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from './internal/operators/elementAt';\nexport { endWith } from './internal/operators/endWith';\nexport { every } from './internal/operators/every';\nexport { exhaust } from './internal/operators/exhaust';\nexport { exhaustAll } from './internal/operators/exhaustAll';\nexport { exhaustMap } from './internal/operators/exhaustMap';\nexport { expand } from './internal/operators/expand';\nexport { filter } from './internal/operators/filter';\nexport { finalize } from './internal/operators/finalize';\nexport { find } from './internal/operators/find';\nexport { findIndex } from './internal/operators/findIndex';\nexport { first } from './internal/operators/first';\nexport { groupBy, BasicGroupByOptions, GroupByOptionsWithElement } from './internal/operators/groupBy';\nexport { ignoreElements } from './internal/operators/ignoreElements';\nexport { isEmpty } from './internal/operators/isEmpty';\nexport { last } from './internal/operators/last';\nexport { map } from './internal/operators/map';\nexport { mapTo } from './internal/operators/mapTo';\nexport { materialize } from './internal/operators/materialize';\nexport { max } from './internal/operators/max';\nexport { mergeAll } from './internal/operators/mergeAll';\nexport { flatMap } from './internal/operators/flatMap';\nexport { mergeMap } from './internal/operators/mergeMap';\nexport { mergeMapTo } from './internal/operators/mergeMapTo';\nexport { mergeScan } from './internal/operators/mergeScan';\nexport { mergeWith } from './internal/operators/mergeWith';\nexport { min } from './internal/operators/min';\nexport { multicast } from './internal/operators/multicast';\nexport { observeOn } from './internal/operators/observeOn';\nexport { onErrorResumeNextWith } from './internal/operators/onErrorResumeNextWith';\nexport { pairwise } from './internal/operators/pairwise';\nexport { pluck } from './internal/operators/pluck';\nexport { publish } from './internal/operators/publish';\nexport { publishBehavior } from './internal/operators/publishBehavior';\nexport { publishLast } from './internal/operators/publishLast';\nexport { publishReplay } from './internal/operators/publishReplay';\nexport { raceWith } from './internal/operators/raceWith';\nexport { reduce } from './internal/operators/reduce';\nexport { repeat, RepeatConfig } from './internal/operators/repeat';\nexport { repeatWhen } from './internal/operators/repeatWhen';\nexport { retry, RetryConfig } from './internal/operators/retry';\nexport { retryWhen } from './internal/operators/retryWhen';\nexport { refCount } from './internal/operators/refCount';\nexport { sample } from './internal/operators/sample';\nexport { sampleTime } from './internal/operators/sampleTime';\nexport { scan } from './internal/operators/scan';\nexport { sequenceEqual } from './internal/operators/sequenceEqual';\nexport { share, ShareConfig } from './internal/operators/share';\nexport { shareReplay, ShareReplayConfig } from './internal/operators/shareReplay';\nexport { single } from './internal/operators/single';\nexport { skip } from './internal/operators/skip';\nexport { skipLast } from './internal/operators/skipLast';\nexport { skipUntil } from './internal/operators/skipUntil';\nexport { skipWhile } from './internal/operators/skipWhile';\nexport { startWith } from './internal/operators/startWith';\nexport { subscribeOn } from './internal/operators/subscribeOn';\nexport { switchAll } from './internal/operators/switchAll';\nexport { switchMap } from './internal/operators/switchMap';\nexport { switchMapTo } from './internal/operators/switchMapTo';\nexport { switchScan } from './internal/operators/switchScan';\nexport { take } from './internal/operators/take';\nexport { takeLast } from './internal/operators/takeLast';\nexport { takeUntil } from './internal/operators/takeUntil';\nexport { takeWhile } from './internal/operators/takeWhile';\nexport { tap, TapObserver } from './internal/operators/tap';\nexport { throttle, ThrottleConfig } from './internal/operators/throttle';\nexport { throttleTime } from './internal/operators/throttleTime';\nexport { throwIfEmpty } from './internal/operators/throwIfEmpty';\nexport { timeInterval } from './internal/operators/timeInterval';\nexport { timeout, TimeoutConfig, TimeoutInfo } from './internal/operators/timeout';\nexport { timeoutWith } from './internal/operators/timeoutWith';\nexport { timestamp } from './internal/operators/timestamp';\nexport { toArray } from './internal/operators/toArray';\nexport { window } from './internal/operators/window';\nexport { windowCount } from './internal/operators/windowCount';\nexport { windowTime } from './internal/operators/windowTime';\nexport { windowToggle } from './internal/operators/windowToggle';\nexport { windowWhen } from './internal/operators/windowWhen';\nexport { withLatestFrom } from './internal/operators/withLatestFrom';\nexport { zipAll } from './internal/operators/zipAll';\nexport { zipWith } from './internal/operators/zipWith';\n", "import { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observerOrNext?: Partial<Observer<T>> | ((value: T) => void)): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * #### Examples\n   *\n   * Subscribe with an {@link guide/observer Observer}\n   *\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Subscribe with functions ({@link deprecations/subscribe-arguments deprecated})\n   *\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // 'Adding: 1'\n   * // 'Adding: 2'\n   * // 'Adding: 3'\n   * // 'Sum equals: 6'\n   * ```\n   *\n   * Cancel a subscription\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // 'unsubscribed!' after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   * or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   * Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   * the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    errorContext(() => {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    });\n\n    return subscriber;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * #### Example\n   *\n   * ```ts\n   * import { interval, take } from 'rxjs';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *   let total = 0;\n   *\n   *   await source$.forEach(value => {\n   *     total += value;\n   *     console.log('observable -> ' + value);\n   *   });\n   *\n   *   return total;\n   * }\n   *\n   * getTotal().then(\n   *   total => console.log('Total: ' + total)\n   * );\n   *\n   * // Expected:\n   * // 'observable -> 0'\n   * // 'observable -> 1'\n   * // 'observable -> 2'\n   * // 'observable -> 3'\n   * // 'Total: 6'\n   * ```\n   *\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      const subscriber = new SafeSubscriber<T>({\n        next: (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscriber.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve,\n      });\n      this.subscribe(subscriber);\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ## Example\n   *\n   * ```ts\n   * import { interval, filter, map, scan } from 'rxjs';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x));\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "/**\n * Returns true if the object is a function.\n * @param value The value to check\n */\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === 'function';\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (errors: any[]): UnsubscriptionError;\n}\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = createErrorClass(\n  (_super) =>\n    function UnsubscriptionErrorImpl(this: any, errors: (Error | string)[]) {\n      _super(this);\n      this.message = errors\n        ? `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}`\n        : '';\n      this.name = 'UnsubscriptionError';\n      this.errors = errors;\n    }\n);\n", "/**\n * Used to create Error subclasses until the community moves away from ES5.\n *\n * This is because compiling from TypeScript down to ES5 has issues with subclassing Errors\n * as well as other built-in types: https://github.com/Microsoft/TypeScript/issues/12123\n *\n * @param createImpl A factory function to create the actual constructor implementation. The returned\n * function should be a named function that calls `_super` internally.\n */\nexport function createErrorClass<T>(createImpl: (_super: any) => any): T {\n  const _super = (instance: any) => {\n    Error.call(instance);\n    instance.stack = new Error().stack;\n  };\n\n  const ctorFunc = createImpl(_super);\n  ctorFunc.prototype = Object.create(Error.prototype);\n  ctorFunc.prototype.constructor = ctorFunc;\n  return ctorFunc;\n}\n", "/**\n * Removes an item from an array, mutating it.\n * @param arr The array to remove the item from\n * @param item The item to remove\n */\nexport function arrRemove<T>(arr: T[] | undefined | null, item: T) {\n  if (arr) {\n    const index = arr.indexOf(item);\n    0 <= index && arr.splice(index, 1);\n  }\n}\n", "import { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic, Unsubscribable } from './types';\nimport { arrRemove } from './util/arrRemove';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY = (() => {\n    const empty = new Subscription();\n    empty.closed = true;\n    return empty;\n  })();\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   */\n  public closed = false;\n\n  private _parentage: Subscription[] | Subscription | null = null;\n\n  /**\n   * The list of registered finalizers to execute upon unsubscription. Adding and removing from this\n   * list occurs in the {@link #add} and {@link #remove} methods.\n   */\n  private _finalizers: Exclude<TeardownLogic, void>[] | null = null;\n\n  /**\n   * @param initialTeardown A function executed first as part of the finalization\n   * process that is kicked off when {@link #unsubscribe} is called.\n   */\n  constructor(private initialTeardown?: () => void) {}\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[] | undefined;\n\n    if (!this.closed) {\n      this.closed = true;\n\n      // Remove this from it's parents.\n      const { _parentage } = this;\n      if (_parentage) {\n        this._parentage = null;\n        if (Array.isArray(_parentage)) {\n          for (const parent of _parentage) {\n            parent.remove(this);\n          }\n        } else {\n          _parentage.remove(this);\n        }\n      }\n\n      const { initialTeardown: initialFinalizer } = this;\n      if (isFunction(initialFinalizer)) {\n        try {\n          initialFinalizer();\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? e.errors : [e];\n        }\n      }\n\n      const { _finalizers } = this;\n      if (_finalizers) {\n        this._finalizers = null;\n        for (const finalizer of _finalizers) {\n          try {\n            execFinalizer(finalizer);\n          } catch (err) {\n            errors = errors ?? [];\n            if (err instanceof UnsubscriptionError) {\n              errors = [...errors, ...err.errors];\n            } else {\n              errors.push(err);\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }\n\n  /**\n   * Adds a finalizer to this subscription, so that finalization will be unsubscribed/called\n   * when this subscription is unsubscribed. If this subscription is already {@link #closed},\n   * because it has already been unsubscribed, then whatever finalizer is passed to it\n   * will automatically be executed (unless the finalizer itself is also a closed subscription).\n   *\n   * Closed Subscriptions cannot be added as finalizers to any subscription. Adding a closed\n   * subscription to a any subscription will result in no operation. (A noop).\n   *\n   * Adding a subscription to itself, or adding `null` or `undefined` will not perform any\n   * operation at all. (A noop).\n   *\n   * `Subscription` instances that are added to this instance will automatically remove themselves\n   * if they are unsubscribed. Functions and {@link Unsubscribable} objects that you wish to remove\n   * will need to be removed manually with {@link #remove}\n   *\n   * @param teardown The finalization logic to add to this subscription.\n   */\n  add(teardown: TeardownLogic): void {\n    // Only add the finalizer if it's not undefined\n    // and don't add a subscription to itself.\n    if (teardown && teardown !== this) {\n      if (this.closed) {\n        // If this subscription is already closed,\n        // execute whatever finalizer is handed to it automatically.\n        execFinalizer(teardown);\n      } else {\n        if (teardown instanceof Subscription) {\n          // We don't add closed subscriptions, and we don't add the same subscription\n          // twice. Subscription unsubscribe is idempotent.\n          if (teardown.closed || teardown._hasParent(this)) {\n            return;\n          }\n          teardown._addParent(this);\n        }\n        (this._finalizers = this._finalizers ?? []).push(teardown);\n      }\n    }\n  }\n\n  /**\n   * Checks to see if a this subscription already has a particular parent.\n   * This will signal that this subscription has already been added to the parent in question.\n   * @param parent the parent to check for\n   */\n  private _hasParent(parent: Subscription) {\n    const { _parentage } = this;\n    return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n  }\n\n  /**\n   * Adds a parent to this subscription so it can be removed from the parent if it\n   * unsubscribes on it's own.\n   *\n   * NOTE: THIS ASSUMES THAT {@link _hasParent} HAS ALREADY BEEN CHECKED.\n   * @param parent The parent subscription to add\n   */\n  private _addParent(parent: Subscription) {\n    const { _parentage } = this;\n    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n  }\n\n  /**\n   * Called on a child when it is removed via {@link #remove}.\n   * @param parent The parent to remove\n   */\n  private _removeParent(parent: Subscription) {\n    const { _parentage } = this;\n    if (_parentage === parent) {\n      this._parentage = null;\n    } else if (Array.isArray(_parentage)) {\n      arrRemove(_parentage, parent);\n    }\n  }\n\n  /**\n   * Removes a finalizer from this subscription that was previously added with the {@link #add} method.\n   *\n   * Note that `Subscription` instances, when unsubscribed, will automatically remove themselves\n   * from every other `Subscription` they have been added to. This means that using the `remove` method\n   * is not a common thing and should be used thoughtfully.\n   *\n   * If you add the same finalizer instance of a function or an unsubscribable object to a `Subscription` instance\n   * more than once, you will need to call `remove` the same number of times to remove all instances.\n   *\n   * All finalizer instances are removed to free up memory upon unsubscription.\n   *\n   * @param teardown The finalizer to remove from this subscription\n   */\n  remove(teardown: Exclude<TeardownLogic, void>): void {\n    const { _finalizers } = this;\n    _finalizers && arrRemove(_finalizers, teardown);\n\n    if (teardown instanceof Subscription) {\n      teardown._removeParent(this);\n    }\n  }\n}\n\nexport const EMPTY_SUBSCRIPTION = Subscription.EMPTY;\n\nexport function isSubscription(value: any): value is Subscription {\n  return (\n    value instanceof Subscription ||\n    (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe))\n  );\n}\n\nfunction execFinalizer(finalizer: Unsubscribable | (() => void)) {\n  if (isFunction(finalizer)) {\n    finalizer();\n  } else {\n    finalizer.unsubscribe();\n  }\n}\n", "import { Subscriber } from './Subscriber';\nimport { ObservableNotification } from './types';\n\n/**\n * The {@link GlobalConfig} object for RxJS. It is used to configure things\n * like how to react on unhandled errors.\n */\nexport const config: GlobalConfig = {\n  onUnhandledError: null,\n  onStoppedNotification: null,\n  Promise: undefined,\n  useDeprecatedSynchronousErrorHandling: false,\n  useDeprecatedNextContext: false,\n};\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like how to react on unhandled errors. Accessible via {@link config}\n * object.\n */\nexport interface GlobalConfig {\n  /**\n   * A registration point for unhandled errors from RxJS. These are errors that\n   * cannot were not handled by consuming code in the usual subscription path. For\n   * example, if you have this configured, and you subscribe to an observable without\n   * providing an error handler, errors from that subscription will end up here. This\n   * will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onUnhandledError: ((err: any) => void) | null;\n\n  /**\n   * A registration point for notifications that cannot be sent to subscribers because they\n   * have completed, errored or have been explicitly unsubscribed. By default, next, complete\n   * and error notifications sent to stopped subscribers are noops. However, sometimes callers\n   * might want a different behavior. For example, with sources that attempt to report errors\n   * to stopped subscribers, a caller can configure RxJS to throw an unhandled error instead.\n   * This will _always_ be called asynchronously on another job in the runtime. This is because\n   * we do not want errors thrown in this user-configured handler to interfere with the\n   * behavior of the library.\n   */\n  onStoppedNotification: ((notification: ObservableNotification<any>, subscriber: Subscriber<any>) => void) | null;\n\n  /**\n   * The promise constructor used by default for {@link Observable#toPromise toPromise} and {@link Observable#forEach forEach}\n   * methods.\n   *\n   * @deprecated As of version 8, RxJS will no longer support this sort of injection of a\n   * Promise constructor. If you need a Promise implementation other than native promises,\n   * please polyfill/patch Promise as you see appropriate. Will be removed in v8.\n   */\n  Promise?: PromiseConstructorLike;\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BUY TIME\n   * FOR MIGRATION REASONS.\n   *\n   * @deprecated As of version 8, RxJS will no longer support synchronous throwing\n   * of unhandled errors. All errors will be thrown on a separate call stack to prevent bad\n   * behaviors described above. Will be removed in v8.\n   */\n  useDeprecatedSynchronousErrorHandling: boolean;\n\n  /**\n   * If true, enables an as-of-yet undocumented feature from v5: The ability to access\n   * `unsubscribe()` via `this` context in `next` functions created in observers passed\n   * to `subscribe`.\n   *\n   * This is being removed because the performance was severely problematic, and it could also cause\n   * issues when types other than POJOs are passed to subscribe as subscribers, as they will likely have\n   * their `this` context overwritten.\n   *\n   * @deprecated As of version 8, RxJS will no longer support altering the\n   * context of next functions provided as part of an observer to Subscribe. Instead,\n   * you will have access to a subscription or a signal or token that will allow you to do things like\n   * unsubscribe and test closed status. Will be removed in v8.\n   */\n  useDeprecatedNextContext: boolean;\n}\n", "import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\n\n/**\n * Handles an error on another job either with the user-configured {@link onUnhandledError},\n * or by throwing it on that new job so it can be picked up by `window.onerror`, `process.on('error')`, etc.\n *\n * This should be called whenever there is an error that is out-of-band with the subscription\n * or when an error hits a terminal boundary of the subscription and no error handler was provided.\n *\n * @param err the error to report\n */\nexport function reportUnhandledError(err: any) {\n  timeoutProvider.setTimeout(() => {\n    const { onUnhandledError } = config;\n    if (onUnhandledError) {\n      // Execute the user-configured error handler.\n      onUnhandledError(err);\n    } else {\n      // Throw so it is picked up by the runtime's uncaught error mechanism.\n      throw err;\n    }\n  });\n}\n", "import type { TimerHandle } from './timerHandle';\ntype SetTimeoutFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearTimeoutFunction = (handle: TimerHandle) => void;\n\ninterface TimeoutProvider {\n  setTimeout: SetTimeoutFunction;\n  clearTimeout: ClearTimeoutFunction;\n  delegate:\n    | {\n        setTimeout: SetTimeoutFunction;\n        clearTimeout: ClearTimeoutFunction;\n      }\n    | undefined;\n}\n\nexport const timeoutProvider: TimeoutProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setTimeout(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = timeoutProvider;\n    if (delegate?.setTimeout) {\n      return delegate.setTimeout(handler, timeout, ...args);\n    }\n    return setTimeout(handler, timeout, ...args);\n  },\n  clearTimeout(handle) {\n    const { delegate } = timeoutProvider;\n    return (delegate?.clearTimeout || clearTimeout)(handle as any);\n  },\n  delegate: undefined,\n};\n", "/* tslint:disable:no-empty */\nexport function noop() { }\n", "import { CompleteNotification, NextNotification, ErrorNotification } from './types';\n\n/**\n * A completion object optimized for memory use and created to be the\n * same \"shape\" as other notifications in v8.\n * @internal\n */\nexport const COMPLETE_NOTIFICATION = (() => createNotification('C', undefined, undefined) as CompleteNotification)();\n\n/**\n * Internal use only. Creates an optimized error notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function errorNotification(error: any): ErrorNotification {\n  return createNotification('E', undefined, error) as any;\n}\n\n/**\n * Internal use only. Creates an optimized next notification that is the same \"shape\"\n * as other notifications.\n * @internal\n */\nexport function nextNotification<T>(value: T) {\n  return createNotification('N', value, undefined) as NextNotification<T>;\n}\n\n/**\n * Ensures that all notifications created internally have the same \"shape\" in v8.\n *\n * TODO: This is only exported to support a crazy legacy test in `groupBy`.\n * @internal\n */\nexport function createNotification(kind: 'N' | 'E' | 'C', value: any, error: any) {\n  return {\n    kind,\n    value,\n    error,\n  };\n}\n", "import { config } from '../config';\n\nlet context: { errorThrown: boolean; error: any } | null = null;\n\n/**\n * Handles dealing with errors for super-gross mode. Creates a context, in which\n * any synchronously thrown errors will be passed to {@link captureError}. Which\n * will record the error such that it will be rethrown after the call back is complete.\n * TODO: Remove in v8\n * @param cb An immediately executed function.\n */\nexport function errorContext(cb: () => void) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    const isRoot = !context;\n    if (isRoot) {\n      context = { errorThrown: false, error: null };\n    }\n    cb();\n    if (isRoot) {\n      const { errorThrown, error } = context!;\n      context = null;\n      if (errorThrown) {\n        throw error;\n      }\n    }\n  } else {\n    // This is the general non-deprecated path for everyone that\n    // isn't crazy enough to use super-gross mode (useDeprecatedSynchronousErrorHandling)\n    cb();\n  }\n}\n\n/**\n * Captures errors only in super-gross mode.\n * @param err the error to capture\n */\nexport function captureError(err: any) {\n  if (config.useDeprecatedSynchronousErrorHandling && context) {\n    context.errorThrown = true;\n    context.error = err;\n  }\n}\n", "import { isFunction } from './util/isFunction';\nimport { Observer, ObservableNotification } from './types';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param next The `next` callback of an Observer.\n   * @param error The `error` callback of an\n   * Observer.\n   * @param complete The `complete` callback of an\n   * Observer.\n   * @return A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   * @deprecated Do not use. Will be removed in v8. There is no replacement for this\n   * method, and there is no reason to be creating instances of `Subscriber` directly.\n   * If you have a specific use case, please file an issue.\n   */\n  static create<T>(next?: (x?: T) => void, error?: (e?: any) => void, complete?: () => void): Subscriber<T> {\n    return new SafeSubscriber(next, error, complete);\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected isStopped: boolean = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  protected destination: Subscriber<any> | Observer<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * There is no reason to directly create an instance of Subscriber. This type is exported for typings reasons.\n   */\n  constructor(destination?: Subscriber<any> | Observer<any>) {\n    super();\n    if (destination) {\n      this.destination = destination;\n      // Automatically chain subscriptions together here.\n      // if destination is a Subscription, then it is a Subscriber.\n      if (isSubscription(destination)) {\n        destination.add(this);\n      }\n    } else {\n      this.destination = EMPTY_OBSERVER;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (this.isStopped) {\n      handleStoppedNotification(nextNotification(value), this);\n    } else {\n      this._next(value!);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (this.isStopped) {\n      handleStoppedNotification(errorNotification(err), this);\n    } else {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (this.isStopped) {\n      handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n    } else {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (!this.closed) {\n      this.isStopped = true;\n      super.unsubscribe();\n      this.destination = null!;\n    }\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    try {\n      this.destination.error(err);\n    } finally {\n      this.unsubscribe();\n    }\n  }\n\n  protected _complete(): void {\n    try {\n      this.destination.complete();\n    } finally {\n      this.unsubscribe();\n    }\n  }\n}\n\n/**\n * This bind is captured here because we want to be able to have\n * compatibility with monoid libraries that tend to use a method named\n * `bind`. In particular, a library called Monio requires this.\n */\nconst _bind = Function.prototype.bind;\n\nfunction bind<Fn extends (...args: any[]) => any>(fn: Fn, thisArg: any): Fn {\n  return _bind.call(fn, thisArg);\n}\n\n/**\n * Internal optimization only, DO NOT EXPOSE.\n * @internal\n */\nclass ConsumerObserver<T> implements Observer<T> {\n  constructor(private partialObserver: Partial<Observer<T>>) {}\n\n  next(value: T): void {\n    const { partialObserver } = this;\n    if (partialObserver.next) {\n      try {\n        partialObserver.next(value);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n\n  error(err: any): void {\n    const { partialObserver } = this;\n    if (partialObserver.error) {\n      try {\n        partialObserver.error(err);\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    } else {\n      handleUnhandledError(err);\n    }\n  }\n\n  complete(): void {\n    const { partialObserver } = this;\n    if (partialObserver.complete) {\n      try {\n        partialObserver.complete();\n      } catch (error) {\n        handleUnhandledError(error);\n      }\n    }\n  }\n}\n\nexport class SafeSubscriber<T> extends Subscriber<T> {\n  constructor(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((e?: any) => void) | null,\n    complete?: (() => void) | null\n  ) {\n    super();\n\n    let partialObserver: Partial<Observer<T>>;\n    if (isFunction(observerOrNext) || !observerOrNext) {\n      // The first argument is a function, not an observer. The next\n      // two arguments *could* be observers, or they could be empty.\n      partialObserver = {\n        next: (observerOrNext ?? undefined) as (((value: T) => void) | undefined),\n        error: error ?? undefined,\n        complete: complete ?? undefined,\n      };\n    } else {\n      // The first argument is a partial observer.\n      let context: any;\n      if (this && config.useDeprecatedNextContext) {\n        // This is a deprecated path that made `this.unsubscribe()` available in\n        // next handler functions passed to subscribe. This only exists behind a flag\n        // now, as it is *very* slow.\n        context = Object.create(observerOrNext);\n        context.unsubscribe = () => this.unsubscribe();\n        partialObserver = {\n          next: observerOrNext.next && bind(observerOrNext.next, context),\n          error: observerOrNext.error && bind(observerOrNext.error, context),\n          complete: observerOrNext.complete && bind(observerOrNext.complete, context),\n        };\n      } else {\n        // The \"normal\" path. Just use the partial observer directly.\n        partialObserver = observerOrNext;\n      }\n    }\n\n    // Wrap the partial observer to ensure it's a full observer, and\n    // make sure proper error handling is accounted for.\n    this.destination = new ConsumerObserver(partialObserver);\n  }\n}\n\nfunction handleUnhandledError(error: any) {\n  if (config.useDeprecatedSynchronousErrorHandling) {\n    captureError(error);\n  } else {\n    // Ideal path, we report this as an unhandled error,\n    // which is thrown on a new call stack.\n    reportUnhandledError(error);\n  }\n}\n\n/**\n * An error handler used when no error handler was supplied\n * to the SafeSubscriber -- meaning no error handler was supplied\n * do the `subscribe` call on our observable.\n * @param err The error to handle\n */\nfunction defaultErrorHandler(err: any) {\n  throw err;\n}\n\n/**\n * A handler for notifications that cannot be sent to a stopped subscriber.\n * @param notification The notification being sent\n * @param subscriber The stopped subscriber\n */\nfunction handleStoppedNotification(notification: ObservableNotification<any>, subscriber: Subscriber<any>) {\n  const { onStoppedNotification } = config;\n  onStoppedNotification && timeoutProvider.setTimeout(() => onStoppedNotification(notification, subscriber));\n}\n\n/**\n * The observer used as a stub for subscriptions where the user did not\n * pass any arguments to `subscribe`. Comes with the default error handling\n * behavior.\n */\nexport const EMPTY_OBSERVER: Readonly<Observer<any>> & { closed: true } = {\n  closed: true,\n  next: noop,\n  error: defaultErrorHandler,\n  complete: noop,\n};\n", "/**\n * Symbol.observable or a string \"@@observable\". Used for interop\n *\n * @deprecated We will no longer be exporting this symbol in upcoming versions of RxJS.\n * Instead polyfill and use Symbol.observable directly *or* use https://www.npmjs.com/package/symbol-observable\n */\nexport const observable: string | symbol = (() => (typeof Symbol === 'function' && Symbol.observable) || '@@observable')();\n", "import { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\nexport function pipe(): typeof identity;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>\n): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>\n): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>\n): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>\n): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>\n): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>\n): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(\n  fn1: UnaryFunction<T, A>,\n  fn2: UnaryFunction<A, B>,\n  fn3: UnaryFunction<B, C>,\n  fn4: UnaryFunction<C, D>,\n  fn5: UnaryFunction<D, E>,\n  fn6: UnaryFunction<E, F>,\n  fn7: UnaryFunction<F, G>,\n  fn8: UnaryFunction<G, H>,\n  fn9: UnaryFunction<H, I>,\n  ...fns: UnaryFunction<any, any>[]\n): UnaryFunction<T, unknown>;\n\n/**\n * pipe() can be called on one or more functions, each of which can take one argument (\"UnaryFunction\")\n * and uses it to return a value.\n * It returns a function that takes one argument, passes it to the first UnaryFunction, and then\n * passes the result to the next one, passes that result to the next one, and so on.  \n */\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n", "/**\n * This function takes one parameter and just returns it. Simply put,\n * this is like `<T>(x: T): T => x`.\n *\n * ## Examples\n *\n * This is useful in some cases when using things like `mergeMap`\n *\n * ```ts\n * import { interval, take, map, range, mergeMap, identity } from 'rxjs';\n *\n * const source$ = interval(1000).pipe(take(5));\n *\n * const result$ = source$.pipe(\n *   map(i => range(i)),\n *   mergeMap(identity) // same as mergeMap(x => x)\n * );\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * Or when you want to selectively apply an operator\n *\n * ```ts\n * import { interval, take, identity } from 'rxjs';\n *\n * const shouldLimit = () => Math.random() < 0.5;\n *\n * const source$ = interval(1000);\n *\n * const result$ = source$.pipe(shouldLimit() ? take(5) : identity);\n *\n * result$.subscribe({\n *   next: console.log\n * });\n * ```\n *\n * @param x Any value that is returned by this function\n * @returns The value passed as the first parameter to this function\n */\nexport function identity<T>(x: T): T {\n  return x;\n}\n", "import { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\n * you can connect to it.\n *\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\n * unsubscribes from the source. This way you can make sure that everything before the *published*\n * refCount has only a single subscription independently of the number of subscribers to the target\n * observable.\n *\n * Note that using the {@link share} operator is exactly the same as using the `multicast(() => new Subject())` operator\n * (making the observable hot) and the *refCount* operator in a sequence.\n *\n * ![](refCount.png)\n *\n * ## Example\n *\n * In the following example there are two intervals turned into connectable observables\n * by using the *publish* operator. The first one uses the *refCount* operator, the\n * second one does not use it. You will notice that a connectable observable does nothing\n * until you call its connect function.\n *\n * ```ts\n * import { interval, tap, publish, refCount } from 'rxjs';\n *\n * // Turn the interval observable into a ConnectableObservable (hot)\n * const refCountInterval = interval(400).pipe(\n *   tap(num => console.log(`refCount ${ num }`)),\n *   publish(),\n *   refCount()\n * );\n *\n * const publishedInterval = interval(400).pipe(\n *   tap(num => console.log(`publish ${ num }`)),\n *   publish()\n * );\n *\n * refCountInterval.subscribe();\n * refCountInterval.subscribe();\n * // 'refCount 0' -----> 'refCount 1' -----> etc\n * // All subscriptions will receive the same value and the tap (and\n * // every other operator) before the `publish` operator will be executed\n * // only once per event independently of the number of subscriptions.\n *\n * publishedInterval.subscribe();\n * // Nothing happens until you call .connect() on the observable.\n * ```\n *\n * @return A function that returns an Observable that automates the connection\n * to ConnectableObservable.\n * @see {@link ConnectableObservable}\n * @see {@link share}\n * @see {@link publish}\n * @deprecated Replaced with the {@link share} operator. How `share` is used\n * will depend on the connectable observable you created just prior to the\n * `refCount` operator.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let connection: Subscription | null = null;\n\n    (source as any)._refCount++;\n\n    const refCounter = createOperatorSubscriber(subscriber, undefined, undefined, undefined, () => {\n      if (!source || (source as any)._refCount <= 0 || 0 < --(source as any)._refCount) {\n        connection = null;\n        return;\n      }\n\n      ///\n      // Compare the local RefCountSubscriber's connection Subscription to the\n      // connection Subscription on the shared ConnectableObservable. In cases\n      // where the ConnectableObservable source synchronously emits values, and\n      // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n      // execution continues to here before the RefCountOperator has a chance to\n      // supply the RefCountSubscriber with the shared connection Subscription.\n      // For example:\n      // ```\n      // range(0, 10).pipe(\n      //   publish(),\n      //   refCount(),\n      //   take(5),\n      // )\n      // .subscribe();\n      // ```\n      // In order to account for this case, RefCountSubscriber should only dispose\n      // the ConnectableObservable's shared connection Subscription if the\n      // connection Subscription exists, *and* either:\n      //   a. RefCountSubscriber doesn't have a reference to the shared connection\n      //      Subscription yet, or,\n      //   b. RefCountSubscriber's connection Subscription reference is identical\n      //      to the shared connection Subscription\n      ///\n\n      const sharedConnection = (source as any)._connection;\n      const conn = connection;\n      connection = null;\n\n      if (sharedConnection && (!conn || sharedConnection === conn)) {\n        sharedConnection.unsubscribe();\n      }\n\n      subscriber.unsubscribe();\n    });\n\n    source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      connection = (source as ConnectableObservable<T>).connect();\n    }\n  });\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n", "import { Subscriber } from '../Subscriber';\n\n/**\n * Creates an instance of an `OperatorSubscriber`.\n * @param destination The downstream subscriber.\n * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n * and send to the `destination` error handler.\n * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n * this handler are sent to the `destination` error handler.\n * @param onFinalize Additional teardown logic here. This will only be called on teardown if the\n * subscriber itself is not already closed. This is called after all other teardown logic is executed.\n */\nexport function createOperatorSubscriber<T>(\n  destination: Subscriber<any>,\n  onNext?: (value: T) => void,\n  onComplete?: () => void,\n  onError?: (err: any) => void,\n  onFinalize?: () => void\n): Subscriber<T> {\n  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\n\n/**\n * A generic helper for allowing operators to be created with a Subscriber and\n * use closures to capture necessary state from the operator function itself.\n */\nexport class OperatorSubscriber<T> extends Subscriber<T> {\n  /**\n   * Creates an instance of an `OperatorSubscriber`.\n   * @param destination The downstream subscriber.\n   * @param onNext Handles next values, only called if this subscriber is not stopped or closed. Any\n   * error that occurs in this function is caught and sent to the `error` method of this subscriber.\n   * @param onError Handles errors from the subscription, any errors that occur in this handler are caught\n   * and send to the `destination` error handler.\n   * @param onComplete Handles completion notification from the subscription. Any errors that occur in\n   * this handler are sent to the `destination` error handler.\n   * @param onFinalize Additional finalization logic here. This will only be called on finalization if the\n   * subscriber itself is not already closed. This is called after all other finalization logic is executed.\n   * @param shouldUnsubscribe An optional check to see if an unsubscribe call should truly unsubscribe.\n   * NOTE: This currently **ONLY** exists to support the strange behavior of {@link groupBy}, where unsubscription\n   * to the resulting observable does not actually disconnect from the source if there are active subscriptions\n   * to any grouped observable. (DO NOT EXPOSE OR USE EXTERNALLY!!!)\n   */\n  constructor(\n    destination: Subscriber<any>,\n    onNext?: (value: T) => void,\n    onComplete?: () => void,\n    onError?: (err: any) => void,\n    private onFinalize?: () => void,\n    private shouldUnsubscribe?: () => boolean\n  ) {\n    // It's important - for performance reasons - that all of this class's\n    // members are initialized and that they are always initialized in the same\n    // order. This will ensure that all OperatorSubscriber instances have the\n    // same hidden class in V8. This, in turn, will help keep the number of\n    // hidden classes involved in property accesses within the base class as\n    // low as possible. If the number of hidden classes involved exceeds four,\n    // the property accesses will become megamorphic and performance penalties\n    // will be incurred - i.e. inline caches won't be used.\n    //\n    // The reasons for ensuring all instances have the same hidden class are\n    // further discussed in this blog post from Benedikt Meurer:\n    // https://benediktmeurer.de/2018/03/23/impact-of-polymorphism-on-component-based-frameworks-like-react/\n    super(destination);\n    this._next = onNext\n      ? function (this: OperatorSubscriber<T>, value: T) {\n          try {\n            onNext(value);\n          } catch (err) {\n            destination.error(err);\n          }\n        }\n      : super._next;\n    this._error = onError\n      ? function (this: OperatorSubscriber<T>, err: any) {\n          try {\n            onError(err);\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._error;\n    this._complete = onComplete\n      ? function (this: OperatorSubscriber<T>) {\n          try {\n            onComplete();\n          } catch (err) {\n            // Send any errors that occur down stream.\n            destination.error(err);\n          } finally {\n            // Ensure finalization.\n            this.unsubscribe();\n          }\n        }\n      : super._complete;\n  }\n\n  unsubscribe() {\n    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n      const { closed } = this;\n      super.unsubscribe();\n      // Execute additional teardown if we have any and we didn't already do so.\n      !closed && this.onFinalize?.();\n    }\n  }\n}\n", "import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { hasLift } from '../util/lift';\n\n/**\n * @class ConnectableObservable<T>\n * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n * If you are using the `refCount` method of `ConnectableObservable`, use the {@link share} operator\n * instead.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n  protected _subject: Subject<T> | null = null;\n  protected _refCount: number = 0;\n  protected _connection: Subscription | null = null;\n\n  /**\n   * @param source The source observable\n   * @param subjectFactory The factory that creates the subject used internally.\n   * @deprecated Will be removed in v8. Use {@link connectable} to create a connectable observable.\n   * `new ConnectableObservable(source, factory)` is equivalent to\n   * `connectable(source, { connector: factory })`.\n   * When the `refCount()` method is needed, the {@link share} operator should be used instead:\n   * `new ConnectableObservable(source, factory).refCount()` is equivalent to\n   * `source.pipe(share({ connector: factory }))`.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  constructor(public source: Observable<T>, protected subjectFactory: () => Subject<T>) {\n    super();\n    // If we have lift, monkey patch that here. This is done so custom observable\n    // types will compose through multicast. Otherwise the resulting observable would\n    // simply be an instance of `ConnectableObservable`.\n    if (hasLift(source)) {\n      this.lift = source.lift;\n    }\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject!;\n  }\n\n  protected _teardown() {\n    this._refCount = 0;\n    const { _connection } = this;\n    this._subject = this._connection = null;\n    _connection?.unsubscribe();\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use {@link connectable} instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      connection = this._connection = new Subscription();\n      const subject = this.getSubject();\n      connection.add(\n        this.source.subscribe(\n          createOperatorSubscriber(\n            subject as any,\n            undefined,\n            () => {\n              this._teardown();\n              subject.complete();\n            },\n            (err) => {\n              this._teardown();\n              subject.error(err);\n            },\n            () => this._teardown()\n          )\n        )\n      );\n\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      }\n    }\n    return connection;\n  }\n\n  /**\n   * @deprecated {@link ConnectableObservable} will be removed in v8. Use the {@link share} operator instead.\n   * Details: https://rxjs.dev/deprecations/multicasting\n   */\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n", "import { Observable } from '../../Observable';\nimport { TimestampProvider } from '../../types';\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\n\n/**\n * An observable of animation frames\n *\n * Emits the amount of time elapsed since subscription and the timestamp on each animation frame.\n * Defaults to milliseconds provided to the requestAnimationFrame's callback. Does not end on its own.\n *\n * Every subscription will start a separate animation loop. Since animation frames are always scheduled\n * by the browser to occur directly before a repaint, scheduling more than one animation frame synchronously\n * should not be much different or have more overhead than looping over an array of events during\n * a single animation frame. However, if for some reason the developer would like to ensure the\n * execution of animation-related handlers are all executed during the same task by the engine,\n * the `share` operator can be used.\n *\n * This is useful for setting up animations with RxJS.\n *\n * ## Examples\n *\n * Tweening a div to move it on the screen\n *\n * ```ts\n * import { animationFrames, map, takeWhile, endWith } from 'rxjs';\n *\n * function tween(start: number, end: number, duration: number) {\n *   const diff = end - start;\n *   return animationFrames().pipe(\n *     // Figure out what percentage of time has passed\n *     map(({ elapsed }) => elapsed / duration),\n *     // Take the vector while less than 100%\n *     takeWhile(v => v < 1),\n *     // Finish with 100%\n *     endWith(1),\n *     // Calculate the distance traveled between start and end\n *     map(v => v * diff + start)\n *   );\n * }\n *\n * // Setup a div for us to move around\n * const div = document.createElement('div');\n * document.body.appendChild(div);\n * div.style.position = 'absolute';\n * div.style.width = '40px';\n * div.style.height = '40px';\n * div.style.backgroundColor = 'lime';\n * div.style.transform = 'translate3d(10px, 0, 0)';\n *\n * tween(10, 200, 4000).subscribe(x => {\n *   div.style.transform = `translate3d(${ x }px, 0, 0)`;\n * });\n * ```\n *\n * Providing a custom timestamp provider\n *\n * ```ts\n * import { animationFrames, TimestampProvider } from 'rxjs';\n *\n * // A custom timestamp provider\n * let now = 0;\n * const customTSProvider: TimestampProvider = {\n *   now() { return now++; }\n * };\n *\n * const source$ = animationFrames(customTSProvider);\n *\n * // Log increasing numbers 0...1...2... on every animation frame.\n * source$.subscribe(({ elapsed }) => console.log(elapsed));\n * ```\n *\n * @param timestampProvider An object with a `now` method that provides a numeric timestamp\n */\nexport function animationFrames(timestampProvider?: TimestampProvider) {\n  return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\n\n/**\n * Does the work of creating the observable for `animationFrames`.\n * @param timestampProvider The timestamp provider to use to create the observable\n */\nfunction animationFramesFactory(timestampProvider?: TimestampProvider) {\n  return new Observable<{ timestamp: number; elapsed: number }>((subscriber) => {\n    // If no timestamp provider is specified, use performance.now() - as it\n    // will return timestamps 'compatible' with those passed to the run\n    // callback and won't be affected by NTP adjustments, etc.\n    const provider = timestampProvider || performanceTimestampProvider;\n\n    // Capture the start time upon subscription, as the run callback can remain\n    // queued for a considerable period of time and the elapsed time should\n    // represent the time elapsed since subscription - not the time since the\n    // first rendered animation frame.\n    const start = provider.now();\n\n    let id = 0;\n    const run = () => {\n      if (!subscriber.closed) {\n        id = animationFrameProvider.requestAnimationFrame((timestamp: DOMHighResTimeStamp | number) => {\n          id = 0;\n          // Use the provider's timestamp to calculate the elapsed time. Note that\n          // this means - if the caller hasn't passed a provider - that\n          // performance.now() will be used instead of the timestamp that was\n          // passed to the run callback. The reason for this is that the timestamp\n          // passed to the callback can be earlier than the start time, as it\n          // represents the time at which the browser decided it would render any\n          // queued frames - and that time can be earlier the captured start time.\n          const now = provider.now();\n          subscriber.next({\n            timestamp: timestampProvider ? now : timestamp,\n            elapsed: now - start,\n          });\n          run();\n        });\n      }\n    };\n\n    run();\n\n    return () => {\n      if (id) {\n        animationFrameProvider.cancelAnimationFrame(id);\n      }\n    };\n  });\n}\n\n/**\n * In the common case, where the timestamp provided by the rAF API is used,\n * we use this shared observable to reduce overhead.\n */\nconst DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\n", "import { TimestampProvider } from '../types';\n\ninterface PerformanceTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const performanceTimestampProvider: PerformanceTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (performanceTimestampProvider.delegate || performance).now();\n  },\n  delegate: undefined,\n};\n", "import { Subscription } from '../Subscription';\n\ninterface AnimationFrameProvider {\n  schedule(callback: FrameRequestCallback): Subscription;\n  requestAnimationFrame: typeof requestAnimationFrame;\n  cancelAnimationFrame: typeof cancelAnimationFrame;\n  delegate:\n    | {\n        requestAnimationFrame: typeof requestAnimationFrame;\n        cancelAnimationFrame: typeof cancelAnimationFrame;\n      }\n    | undefined;\n}\n\nexport const animationFrameProvider: AnimationFrameProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  schedule(callback) {\n    let request = requestAnimationFrame;\n    let cancel: typeof cancelAnimationFrame | undefined = cancelAnimationFrame;\n    const { delegate } = animationFrameProvider;\n    if (delegate) {\n      request = delegate.requestAnimationFrame;\n      cancel = delegate.cancelAnimationFrame;\n    }\n    const handle = request((timestamp) => {\n      // Clear the cancel function. The request has been fulfilled, so\n      // attempting to cancel the request upon unsubscription would be\n      // pointless.\n      cancel = undefined;\n      callback(timestamp);\n    });\n    return new Subscription(() => cancel?.(handle));\n  },\n  requestAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.requestAnimationFrame || requestAnimationFrame)(...args);\n  },\n  cancelAnimationFrame(...args) {\n    const { delegate } = animationFrameProvider;\n    return (delegate?.cancelAnimationFrame || cancelAnimationFrame)(...args);\n  },\n  delegate: undefined,\n};\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface ObjectUnsubscribedError extends Error {}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ObjectUnsubscribedError;\n}\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = createErrorClass(\n  (_super) =>\n    function ObjectUnsubscribedErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ObjectUnsubscribedError';\n      this.message = 'object unsubscribed';\n    }\n);\n", "import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n  closed = false;\n\n  private currentObservers: Observer<T>[] | null = null;\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  observers: Observer<T>[] = [];\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  isStopped = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  hasError = false;\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  thrownError: any = null;\n\n  /**\n   * Creates a \"subject\" by basically gluing an observer to an observable.\n   *\n   * @nocollapse\n   * @deprecated Recommended you do not use. Will be removed at some point in the future. Plans for replacement still under discussion.\n   */\n  static create: (...args: any[]) => any = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  };\n\n  constructor() {\n    // NOTE: This must be here to obscure Observable's constructor.\n    super();\n  }\n\n  /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = operator as any;\n    return subject as any;\n  }\n\n  /** @internal */\n  protected _throwIfClosed() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n  }\n\n  next(value: T) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        if (!this.currentObservers) {\n          this.currentObservers = Array.from(this.observers);\n        }\n        for (const observer of this.currentObservers) {\n          observer.next(value);\n        }\n      }\n    });\n  }\n\n  error(err: any) {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.hasError = this.isStopped = true;\n        this.thrownError = err;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.error(err);\n        }\n      }\n    });\n  }\n\n  complete() {\n    errorContext(() => {\n      this._throwIfClosed();\n      if (!this.isStopped) {\n        this.isStopped = true;\n        const { observers } = this;\n        while (observers.length) {\n          observers.shift()!.complete();\n        }\n      }\n    });\n  }\n\n  unsubscribe() {\n    this.isStopped = this.closed = true;\n    this.observers = this.currentObservers = null!;\n  }\n\n  get observed() {\n    return this.observers?.length > 0;\n  }\n\n  /** @internal */\n  protected _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    this._throwIfClosed();\n    return super._trySubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._checkFinalizedStatuses(subscriber);\n    return this._innerSubscribe(subscriber);\n  }\n\n  /** @internal */\n  protected _innerSubscribe(subscriber: Subscriber<any>) {\n    const { hasError, isStopped, observers } = this;\n    if (hasError || isStopped) {\n      return EMPTY_SUBSCRIPTION;\n    }\n    this.currentObservers = null;\n    observers.push(subscriber);\n    return new Subscription(() => {\n      this.currentObservers = null;\n      arrRemove(observers, subscriber);\n    });\n  }\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<any>) {\n    const { hasError, thrownError, isStopped } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped) {\n      subscriber.complete();\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create custom Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable: any = new Observable<T>();\n    observable.source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(\n    /** @deprecated Internal implementation detail, do not use directly. Will be made internal in v8. */\n    public destination?: Observer<T>,\n    source?: Observable<T>\n  ) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    this.destination?.next?.(value);\n  }\n\n  error(err: any) {\n    this.destination?.error?.(err);\n  }\n\n  complete() {\n    this.destination?.complete?.();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    return this.source?.subscribe(subscriber) ?? EMPTY_SUBSCRIPTION;\n  }\n}\n", "import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    !subscription.closed && subscriber.next(this._value);\n    return subscription;\n  }\n\n  getValue(): T {\n    const { hasError, thrownError, _value } = this;\n    if (hasError) {\n      throw thrownError;\n    }\n    this._throwIfClosed();\n    return _value;\n  }\n\n  next(value: T): void {\n    super.next((this._value = value));\n  }\n}\n", "import { TimestampProvider } from '../types';\n\ninterface DateTimestampProvider extends TimestampProvider {\n  delegate: TimestampProvider | undefined;\n}\n\nexport const dateTimestampProvider: DateTimestampProvider = {\n  now() {\n    // Use the variable rather than `this` so that the function can be called\n    // without being bound to the provider.\n    return (dateTimestampProvider.delegate || Date).now();\n  },\n  delegate: undefined,\n};\n", "import { Subject } from './Subject';\nimport { TimestampProvider } from './types';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * A variant of {@link Subject} that \"replays\" old values to new subscribers by emitting them when they first subscribe.\n *\n * `ReplaySubject` has an internal buffer that will store a specified number of values that it has observed. Like `Subject`,\n * `ReplaySubject` \"observes\" values by having them passed to its `next` method. When it observes a value, it will store that\n * value for a time determined by the configuration of the `ReplaySubject`, as passed to its constructor.\n *\n * When a new subscriber subscribes to the `ReplaySubject` instance, it will synchronously emit all values in its buffer in\n * a First-In-First-Out (FIFO) manner. The `ReplaySubject` will also complete, if it has observed completion; and it will\n * error if it has observed an error.\n *\n * There are two main configuration items to be concerned with:\n *\n * 1. `bufferSize` - This will determine how many items are stored in the buffer, defaults to infinite.\n * 2. `windowTime` - The amount of time to hold a value in the buffer before removing it from the buffer.\n *\n * Both configurations may exist simultaneously. So if you would like to buffer a maximum of 3 values, as long as the values\n * are less than 2 seconds old, you could do so with a `new ReplaySubject(3, 2000)`.\n *\n * ### Differences with BehaviorSubject\n *\n * `BehaviorSubject` is similar to `new ReplaySubject(1)`, with a couple of exceptions:\n *\n * 1. `BehaviorSubject` comes \"primed\" with a single value upon construction.\n * 2. `ReplaySubject` will replay values, even after observing an error, where `BehaviorSubject` will not.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n * @see {@link shareReplay}\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _buffer: (T | number)[] = [];\n  private _infiniteTimeWindow = true;\n\n  /**\n   * @param bufferSize The size of the buffer to replay on subscription\n   * @param windowTime The amount of time the buffered items will stay buffered\n   * @param timestampProvider An object with a `now()` method that provides the current timestamp. This is used to\n   * calculate the amount of time something has been buffered.\n   */\n  constructor(\n    private _bufferSize = Infinity,\n    private _windowTime = Infinity,\n    private _timestampProvider: TimestampProvider = dateTimestampProvider\n  ) {\n    super();\n    this._infiniteTimeWindow = _windowTime === Infinity;\n    this._bufferSize = Math.max(1, _bufferSize);\n    this._windowTime = Math.max(1, _windowTime);\n  }\n\n  next(value: T): void {\n    const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n    if (!isStopped) {\n      _buffer.push(value);\n      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n    }\n    this._trimBuffer();\n    super.next(value);\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<T>): Subscription {\n    this._throwIfClosed();\n    this._trimBuffer();\n\n    const subscription = this._innerSubscribe(subscriber);\n\n    const { _infiniteTimeWindow, _buffer } = this;\n    // We use a copy here, so reentrant code does not mutate our array while we're\n    // emitting it to a new subscriber.\n    const copy = _buffer.slice();\n    for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n      subscriber.next(copy[i] as T);\n    }\n\n    this._checkFinalizedStatuses(subscriber);\n\n    return subscription;\n  }\n\n  private _trimBuffer() {\n    const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n    // If we don't have an infinite buffer size, and we're over the length,\n    // use splice to truncate the old buffer values off. Note that we have to\n    // double the size for instances where we're not using an infinite time window\n    // because we're storing the values and the timestamps in the same array.\n    const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n\n    // Now, if we're not in an infinite time window, remove all values where the time is\n    // older than what is allowed.\n    if (!_infiniteTimeWindow) {\n      const now = _timestampProvider.now();\n      let last = 0;\n      // Search the array for the first timestamp that isn't expired and\n      // truncate the buffer up to that point.\n      for (let i = 1; i < _buffer.length && (_buffer[i] as number) <= now; i += 2) {\n        last = i;\n      }\n      last && _buffer.splice(0, last + 1);\n    }\n  }\n}\n", "import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private _value: T | null = null;\n  private _hasValue = false;\n  private _isComplete = false;\n\n  /** @internal */\n  protected _checkFinalizedStatuses(subscriber: Subscriber<T>) {\n    const { hasError, _hasValue, _value, thrownError, isStopped, _isComplete } = this;\n    if (hasError) {\n      subscriber.error(thrownError);\n    } else if (isStopped || _isComplete) {\n      _hasValue && subscriber.next(_value!);\n      subscriber.complete();\n    }\n  }\n\n  next(value: T): void {\n    if (!this.isStopped) {\n      this._value = value;\n      this._hasValue = true;\n    }\n  }\n\n  complete(): void {\n    const { _hasValue, _value, _isComplete } = this;\n    if (!_isComplete) {\n      this._isComplete = true;\n      _hasValue && super.next(_value!);\n      super.complete();\n    }\n  }\n}\n", "import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * ## Example\n * Compare async and asap scheduler<\n * ```ts\n * import { asapScheduler, asyncScheduler } from 'rxjs';\n *\n * asyncScheduler.schedule(() => console.log('async')); // scheduling 'async' first...\n * asapScheduler.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n * ```\n */\n\nexport const asapScheduler = new AsapScheduler(AsapAction);\n\n/**\n * @deprecated Renamed to {@link asapScheduler}. Will be removed in v8.\n */\nexport const asap = asapScheduler;\n", "import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n", "import type { TimerHandle } from './timerHandle';\ntype SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => TimerHandle;\ntype ClearIntervalFunction = (handle: TimerHandle) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(handler: () => void, timeout?: number, ...args) {\n    const { delegate } = intervalProvider;\n    if (delegate?.setInterval) {\n      return delegate.setInterval(handler, timeout, ...args);\n    }\n    return setInterval(handler, timeout, ...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncAction<T> extends Action<T> {\n  public id: TimerHandle | undefined;\n  public state?: T;\n  // @ts-ignore: Property has no initializer and is not definitely assigned\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id ?? this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, _id?: TimerHandle, delay: number = 0): TimerHandle {\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(_scheduler: AsyncScheduler, id?: TimerHandle, delay: number | null = 0): TimerHandle | undefined {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    if (id != null) {\n      intervalProvider.clearInterval(id);\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, _delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      // HACK: Since code elsewhere is relying on the \"truthiness\" of the\n      // return here, we can't have it return \"\" or 0 or false.\n      // TODO: Clean this up when we refactor schedulers mid-version-8 or so.\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      const { id, scheduler } = this;\n      const { actions } = scheduler;\n\n      this.work = this.state = this.scheduler = null!;\n      this.pending = false;\n\n      arrRemove(actions, this);\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n\n      this.delay = null!;\n      super.unsubscribe();\n    }\n  }\n}\n", "let nextHandle = 1;\n// The promise needs to be created lazily otherwise it won't be patched by Zones\nlet resolved: Promise<any>;\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    if (!resolved) {\n      resolved = Promise.resolve();\n    }\n    resolved.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n", "import { Immediate } from '../util/Immediate';\nimport type { TimerHandle } from './timerHandle';\nconst { setImmediate, clearImmediate } = Immediate;\n\ntype SetImmediateFunction = (handler: () => void, ...args: any[]) => TimerHandle;\ntype ClearImmediateFunction = (handle: TimerHandle) => void;\n\ninterface ImmediateProvider {\n  setImmediate: SetImmediateFunction;\n  clearImmediate: ClearImmediateFunction;\n  delegate:\n    | {\n        setImmediate: SetImmediateFunction;\n        clearImmediate: ClearImmediateFunction;\n      }\n    | undefined;\n}\n\nexport const immediateProvider: ImmediateProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setImmediate(...args) {\n    const { delegate } = immediateProvider;\n    return (delegate?.setImmediate || setImmediate)(...args);\n  },\n  clearImmediate(handle) {\n    const { delegate } = immediateProvider;\n    return (delegate?.clearImmediate || clearImmediate)(handle as any);\n  },\n  delegate: undefined,\n};\n", "import { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\nimport { immediateProvider } from './immediateProvider';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsapAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AsapScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler._scheduled || (scheduler._scheduled = immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n  }\n\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if (delay != null ? delay > 0 : this.delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested microtask and set the scheduled flag to undefined\n    // so the next AsapAction will request its own.\n    const { actions } = scheduler;\n    if (id != null && actions[actions.length - 1]?.id !== id) {\n      immediateProvider.clearImmediate(id);\n      if (scheduler._scheduled === id) {\n        scheduler._scheduled = undefined;\n      }\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n", "import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}. Will be made internal in v8.\n */\nexport class Scheduler implements SchedulerLike {\n  public static now: () => number = dateTimestampProvider.now;\n\n  constructor(private schedulerActionCtor: typeof Action, now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.schedulerActionCtor<T>(this, work).schedule(state, delay);\n  }\n}\n", "import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { TimerHandle } from './timerHandle';\n\nexport class AsyncScheduler extends Scheduler {\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @internal\n   */\n  public _active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @internal\n   */\n  public _scheduled: TimerHandle | undefined;\n\n  constructor(SchedulerAction: typeof Action, now: () => number = Scheduler.now) {\n    super(SchedulerAction, now);\n  }\n\n  public flush(action: AsyncAction<any>): void {\n    const { actions } = this;\n\n    if (this._active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this._active = true;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions.shift()!)); // exhaust the scheduler queue\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions.shift()!)) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\n\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated Renamed to {@link asyncScheduler}. Will be removed in v8.\n */\nexport const async = asyncScheduler;\n", "import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * ## Examples\n * Schedule recursively first, then do something\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(() => {\n *   queueScheduler.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n * ```\n *\n * Reschedule itself recursively\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n * ```\n */\n\nexport const queueScheduler = new QueueScheduler(QueueAction);\n\n/**\n * @deprecated Renamed to {@link queueScheduler}. Will be removed in v8.\n */\nexport const queue = queueScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class QueueAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: QueueScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return delay > 0 || this.closed ? super.execute(state, delay) : this._execute(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n\n    if ((delay != null && delay > 0) || (delay == null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n\n    // Otherwise flush the scheduler starting with this action.\n    scheduler.flush(this);\n\n    // HACK: In the past, this was returning `void`. However, `void` isn't a valid\n    // `TimerHandle`, and generally the return value here isn't really used. So the\n    // compromise is to return `0` which is both \"falsy\" and a valid `TimerHandle`,\n    // as opposed to refactoring every other instanceo of `requestAsyncId`.\n    return 0;\n  }\n}\n", "import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n", "import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * ## Example\n * Schedule div height animation\n * ```ts\n * // html: <div style=\"background: #0ff;\"></div>\n * import { animationFrameScheduler } from 'rxjs';\n *\n * const div = document.querySelector('div');\n *\n * animationFrameScheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see a div element growing in height\n * ```\n */\n\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\n\n/**\n * @deprecated Renamed to {@link animationFrameScheduler}. Will be removed in v8.\n */\nexport const animationFrame = animationFrameScheduler;\n", "import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\nimport { animationFrameProvider } from './animationFrameProvider';\nimport { TimerHandle } from './timerHandle';\n\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n  constructor(protected scheduler: AnimationFrameScheduler, protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider.requestAnimationFrame(() => scheduler.flush(undefined)));\n  }\n\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: TimerHandle, delay: number = 0): TimerHandle | undefined {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if (delay != null ? delay > 0 : this.delay > 0) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue has no remaining actions with the same async id,\n    // cancel the requested animation frame and set the scheduled flag to\n    // undefined so the next AnimationFrameAction will request its own.\n    const { actions } = scheduler;\n    if (id != null && actions[actions.length - 1]?.id !== id) {\n      animationFrameProvider.cancelAnimationFrame(id as number);\n      scheduler._scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n    this._active = true;\n    // The async id that effects a call to flush is stored in _scheduled.\n    // Before executing an action, it's necessary to check the action's async\n    // id to determine whether it's supposed to be executed in the current\n    // flush.\n    // Previous implementations of this method used a count to determine this,\n    // but that was unsound, as actions that are unsubscribed - i.e. cancelled -\n    // are removed from the actions array and that can shift actions that are\n    // scheduled to be executed in a subsequent flush into positions at which\n    // they are executed within the current flush.\n    const flushId = this._scheduled;\n    this._scheduled = undefined;\n\n    const { actions } = this;\n    let error: any;\n    action = action || actions.shift()!;\n\n    do {\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    } while ((action = actions[0]) && action.id === flushId && actions.shift());\n\n    this._active = false;\n\n    if (error) {\n      while ((action = actions[0]) && action.id === flushId && actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n", "import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\nimport { TimerHandle } from './timerHandle';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n  /** @deprecated Not used in VirtualTimeScheduler directly. Will be removed in v8. */\n  static frameTimeFactor = 10;\n\n  /**\n   * The current frame for the state of the virtual scheduler instance. The difference\n   * between two \"frames\" is synonymous with the passage of \"virtual time units\". So if\n   * you record `scheduler.frame` to be `1`, then later, observe `scheduler.frame` to be at `11`,\n   * that means `10` virtual time units have passed.\n   */\n  public frame: number = 0;\n\n  /**\n   * Used internally to examine the current virtual action index being processed.\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  public index: number = -1;\n\n  /**\n   * This creates an instance of a `VirtualTimeScheduler`. Experts only. The signature of\n   * this constructor is likely to change in the long run.\n   *\n   * @param schedulerActionCtor The type of Action to initialize when initializing actions during scheduling.\n   * @param maxFrames The maximum number of frames to process before stopping. Used to prevent endless flush cycles.\n   */\n  constructor(schedulerActionCtor: typeof AsyncAction = VirtualAction as any, public maxFrames: number = Infinity) {\n    super(schedulerActionCtor, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n    const { actions, maxFrames } = this;\n    let error: any;\n    let action: AsyncAction<any> | undefined;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if ((error = action.execute(action.state, action.delay))) {\n        break;\n      }\n    }\n\n    if (error) {\n      while ((action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\nexport class VirtualAction<T> extends AsyncAction<T> {\n  protected active: boolean = true;\n\n  constructor(\n    protected scheduler: VirtualTimeScheduler,\n    protected work: (this: SchedulerAction<T>, state?: T) => void,\n    protected index: number = (scheduler.index += 1)\n  ) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (Number.isFinite(delay)) {\n      if (!this.id) {\n        return super.schedule(state, delay);\n      }\n      this.active = false;\n      // If an action is rescheduled, we save allocations by mutating its state,\n      // pushing it to the end of the scheduler queue, and recycling the action.\n      // But since the VirtualTimeScheduler is used for testing, VirtualActions\n      // must be immutable so they can be inspected later.\n      const action = new VirtualAction(this.scheduler, this.work);\n      this.add(action);\n      return action.schedule(state, delay);\n    } else {\n      // If someone schedules something with Infinity, it'll never happen. So we\n      // don't even schedule it.\n      return Subscription.EMPTY;\n    }\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle {\n    this.delay = scheduler.frame + delay;\n    const { actions } = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return 1;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): TimerHandle | undefined {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  private static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n", "import { PartialObserver, ObservableNotification, CompleteNotification, NextNotification, ErrorNotification } from './types';\nimport { Observable } from './Observable';\nimport { EMPTY } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { isFunction } from './util/isFunction';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated Use a string literal instead. `NotificationKind` will be replaced with a type alias in v8.\n * It will not be replaced with a const enum as those are not compatible with isolated modules.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n * @deprecated It is NOT recommended to create instances of `Notification` directly.\n * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n * Will be removed in v8.\n */\nexport class Notification<T> {\n  /**\n   * A value signifying that the notification will \"next\" if observed. In truth,\n   * This is really synonymous with just checking `kind === \"N\"`.\n   * @deprecated Will be removed in v8. Instead, just check to see if the value of `kind` is `\"N\"`.\n   */\n  readonly hasValue: boolean;\n\n  /**\n   * Creates a \"Next\" notification object.\n   * @param kind Always `'N'`\n   * @param value The value to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createNext createNext} instead.\n   */\n  constructor(kind: 'N', value?: T);\n  /**\n   * Creates an \"Error\" notification object.\n   * @param kind Always `'E'`\n   * @param value Always `undefined`\n   * @param error The error to notify with if observed.\n   * @deprecated Internal implementation detail. Use {@link Notification#createError createError} instead.\n   */\n  constructor(kind: 'E', value: undefined, error: any);\n  /**\n   * Creates a \"completion\" notification object.\n   * @param kind Always `'C'`\n   * @deprecated Internal implementation detail. Use {@link Notification#createComplete createComplete} instead.\n   */\n  constructor(kind: 'C');\n  constructor(public readonly kind: 'N' | 'E' | 'C', public readonly value?: T, public readonly error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   */\n  observe(observer: PartialObserver<T>): void {\n    return observeNotification(this as ObservableNotification<T>, observer);\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  do(next: (value: T) => void): void;\n  do(nextHandler: (value: T) => void, errorHandler?: (err: any) => void, completeHandler?: () => void): void {\n    const { kind, value, error } = this;\n    return kind === 'N' ? nextHandler?.(value!) : kind === 'E' ? errorHandler?.(error) : completeHandler?.();\n  }\n\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @param complete A complete handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void, complete: () => void): void;\n  /**\n   * Executes a notification on the appropriate handler from a list provided.\n   * If a handler is missing for the kind of notification, nothing is called\n   * and no error is thrown, it will be a noop.\n   * @param next A next handler\n   * @param error An error handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void, error: (err: any) => void): void;\n  /**\n   * Executes the next handler if the Notification is of `kind` `\"N\"`. Otherwise\n   * this will not error, and it will be a noop.\n   * @param next The next handler\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(next: (value: T) => void): void;\n\n  /**\n   * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n   * If the handler is missing it will do nothing. Even if the notification is an error, if\n   * there is no error handler on the observer, an error will not be thrown, it will noop.\n   * @param observer The observer to notify.\n   * @deprecated Replaced with {@link Notification#observe observe}. Will be removed in v8.\n   */\n  accept(observer: PartialObserver<T>): void;\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    return isFunction((nextOrObserver as any)?.next)\n      ? this.observe(nextOrObserver as PartialObserver<T>)\n      : this.do(nextOrObserver as (value: T) => void, error as any, complete as any);\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   *\n   * @deprecated Will be removed in v8. To convert a `Notification` to an {@link Observable},\n   * use {@link of} and {@link dematerialize}: `of(notification).pipe(dematerialize())`.\n   */\n  toObservable(): Observable<T> {\n    const { kind, value, error } = this;\n    // Select the observable to return by `kind`\n    const result =\n      kind === 'N'\n        ? // Next kind. Return an observable of that value.\n          of(value!)\n        : //\n        kind === 'E'\n        ? // Error kind. Return an observable that emits the error.\n          throwError(() => error)\n        : //\n        kind === 'C'\n        ? // Completion kind. Kind is \"C\", return an observable that just completes.\n          EMPTY\n        : // Unknown kind, return falsy, so we error below.\n          0;\n    if (!result) {\n      // TODO: consider removing this check. The only way to cause this would be to\n      // use the Notification constructor directly in a way that is not type-safe.\n      // and direct use of the Notification constructor is deprecated.\n      throw new TypeError(`Unexpected notification kind ${kind}`);\n    }\n    return result;\n  }\n\n  private static completeNotification = new Notification('C') as Notification<never> & CompleteNotification;\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createNext<T>(value: T) {\n    return new Notification('N', value) as Notification<T> & NextNotification<T>;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createError(err?: any) {\n    return new Notification('E', undefined, err) as Notification<never> & ErrorNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   * @deprecated It is NOT recommended to create instances of `Notification` directly.\n   * Rather, try to create POJOs matching the signature outlined in {@link ObservableNotification}.\n   * For example: `{ kind: 'N', value: 1 }`, `{ kind: 'E', error: new Error('bad') }`, or `{ kind: 'C' }`.\n   * Will be removed in v8.\n   */\n  static createComplete(): Notification<never> & CompleteNotification {\n    return Notification.completeNotification;\n  }\n}\n\n/**\n * Executes the appropriate handler on a passed `observer` given the `kind` of notification.\n * If the handler is missing it will do nothing. Even if the notification is an error, if\n * there is no error handler on the observer, an error will not be thrown, it will noop.\n * @param notification The notification object to observe.\n * @param observer The observer to notify.\n */\nexport function observeNotification<T>(notification: ObservableNotification<T>, observer: PartialObserver<T>) {\n  const { kind, value, error } = notification as any;\n  if (typeof kind !== 'string') {\n    throw new TypeError('Invalid notification, missing \"kind\"');\n  }\n  kind === 'N' ? observer.next?.(value!) : kind === 'E' ? observer.error?.(error) : observer.complete?.();\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * A simple Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * A simple Observable that only emits the complete notification. It can be used\n * for composing with other Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n *\n * Log complete notification\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n *\n * EMPTY.subscribe({\n *   next: () => console.log('Next'),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Outputs\n * // Complete!\n * ```\n *\n * Emit the number 7, then complete\n *\n * ```ts\n * import { EMPTY, startWith } from 'rxjs';\n *\n * const result = EMPTY.pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // 7\n * ```\n *\n * Map and flatten only odd numbers to the sequence `'a'`, `'b'`, `'c'`\n *\n * ```ts\n * import { interval, mergeMap, of, EMPTY } from 'rxjs';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : EMPTY),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\n * // if x % 2 is not equal to 1, nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link NEVER}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\n\n/**\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n", "import { SchedulerLike, ValueFromArray } from '../types';\nimport { Observable } from '../Observable';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function of(value: null): Observable<null>;\nexport function of(value: undefined): Observable<undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of(scheduler: SchedulerLike): Observable<never>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function of<A extends readonly unknown[]>(...valuesAndScheduler: [...A, SchedulerLike]): Observable<ValueFromArray<A>>;\n\nexport function of(): Observable<never>;\n/** @deprecated Do not specify explicit type parameters. Signatures with type parameters that cannot be inferred will be removed in v8. */\nexport function of<T>(): Observable<T>;\nexport function of<T>(value: T): Observable<T>;\nexport function of<A extends readonly unknown[]>(...values: A): Observable<ValueFromArray<A>>;\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: 10\n * // next: 20\n * // next: 30\n * // the end\n * ```\n *\n * Emit the array `[1, 2, 3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1, 2, 3])\n *   .subscribe({\n *     next: value => console.log('next:', value),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // Outputs\n * // next: [1, 2, 3]\n * // the end\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n */\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  const scheduler = popScheduler(args);\n  return from(args as T[], scheduler);\n}\n", "import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\n\nfunction last<T>(arr: T[]): T | undefined {\n  return arr[arr.length - 1];\n}\n\nexport function popResultSelector(args: any[]): ((...args: unknown[]) => unknown) | undefined {\n  return isFunction(last(args)) ? args.pop() : undefined;\n}\n\nexport function popScheduler(args: any[]): SchedulerLike | undefined {\n  return isScheduler(last(args)) ? args.pop() : undefined;\n}\n\nexport function popNumber(args: any[], defaultValue: number): number {\n  return typeof last(args) === 'number' ? args.pop()! : defaultValue;\n}\n", "import { SchedulerLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && isFunction(value.schedule);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike | undefined): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from, take } from 'rxjs';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * With `asyncScheduler`\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // 'start'\n * // 'end'\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n", "import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see {@link from}\n * @see {@link of}\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    }\n    if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }\n    if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    }\n    if (isAsyncIterable(input)) {\n      return scheduleAsyncIterable(input, scheduler);\n    }\n    if (isIterable(input)) {\n      return scheduleIterable(input, scheduler);\n    }\n    if (isReadableStreamLike(input)) {\n      return scheduleReadableStreamLike(input, scheduler);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { InteropObservable, SchedulerLike } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n", "export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');", "import { isFunction } from \"./isFunction\";\n\n/**\n * Tests to see if the object is \"thennable\".\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return isFunction(value?.then);\n}\n", "import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return isFunction(input[Symbol_observable]);\n}\n", "import { isFunction } from './isFunction';\n\nexport function isAsyncIterable<T>(obj: any): obj is AsyncIterable<T> {\n  return Symbol.asyncIterator && isFunction(obj?.[Symbol.asyncIterator]);\n}\n", "/**\n * Creates the TypeError to throw if an invalid object is passed to `from` or `scheduled`.\n * @param input The object that was passed.\n */\nexport function createInvalidObservableTypeError(input: any) {\n  // TODO: We should create error codes that can be looked up, so this can be less verbose.\n  return new TypeError(\n    `You provided ${\n      input !== null && typeof input === 'object' ? 'an invalid object' : `'${input}'`\n    } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`\n  );\n}\n", "import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return isFunction(input?.[Symbol_iterator]);\n}\n", "export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n", "import { ReadableStreamLike } from '../types';\nimport { isFunction } from './isFunction';\n\nexport async function* readableStreamLikeToAsyncGenerator<T>(readableStream: ReadableStreamLike<T>): AsyncGenerator<T> {\n  const reader = readableStream.getReader();\n  try {\n    while (true) {\n      const { value, done } = await reader.read();\n      if (done) {\n        return;\n      }\n      yield value!;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function isReadableStreamLike<T>(obj: any): obj is ReadableStreamLike<T> {\n  // We don't want to use instanceof checks because they would return\n  // false for instances from another Realm, like an <iframe>.\n  return isFunction(obj?.getReader);\n}\n", "import { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { ObservableInput, ObservedValueOf, ReadableStreamLike } from '../types';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { Subscriber } from '../Subscriber';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\nexport function innerFrom<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\nexport function innerFrom<T>(input: ObservableInput<T>): Observable<T> {\n  if (input instanceof Observable) {\n    return input;\n  }\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return fromInteropObservable(input);\n    }\n    if (isArrayLike(input)) {\n      return fromArrayLike(input);\n    }\n    if (isPromise(input)) {\n      return fromPromise(input);\n    }\n    if (isAsyncIterable(input)) {\n      return fromAsyncIterable(input);\n    }\n    if (isIterable(input)) {\n      return fromIterable(input);\n    }\n    if (isReadableStreamLike(input)) {\n      return fromReadableStreamLike(input);\n    }\n  }\n\n  throw createInvalidObservableTypeError(input);\n}\n\n/**\n * Creates an RxJS Observable from an object that implements `Symbol.observable`.\n * @param obj An object that properly implements `Symbol.observable`.\n */\nexport function fromInteropObservable<T>(obj: any) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    const obs = obj[Symbol_observable]();\n    if (isFunction(obs.subscribe)) {\n      return obs.subscribe(subscriber);\n    }\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  });\n}\n\n/**\n * Synchronously emits the values of an array like and completes.\n * This is exported because there are creation functions and operators that need to\n * make direct use of the same logic, and there's no reason to make them run through\n * `from` conditionals because we *know* they're dealing with an array.\n * @param array The array to emit values from\n */\nexport function fromArrayLike<T>(array: ArrayLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    // Loop over the array and emit each value. Note two things here:\n    // 1. We're making sure that the subscriber is not closed on each loop.\n    //    This is so we don't continue looping over a very large array after\n    //    something like a `take`, `takeWhile`, or other synchronous unsubscription\n    //    has already unsubscribed.\n    // 2. In this form, reentrant code can alter that array we're looping over.\n    //    This is a known issue, but considered an edge case. The alternative would\n    //    be to copy the array before executing the loop, but this has\n    //    performance implications.\n    for (let i = 0; i < array.length && !subscriber.closed; i++) {\n      subscriber.next(array[i]);\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromPromise<T>(promise: PromiseLike<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    promise\n      .then(\n        (value) => {\n          if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n          }\n        },\n        (err: any) => subscriber.error(err)\n      )\n      .then(null, reportUnhandledError);\n  });\n}\n\nexport function fromIterable<T>(iterable: Iterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    for (const value of iterable) {\n      subscriber.next(value);\n      if (subscriber.closed) {\n        return;\n      }\n    }\n    subscriber.complete();\n  });\n}\n\nexport function fromAsyncIterable<T>(asyncIterable: AsyncIterable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => {\n    process(asyncIterable, subscriber).catch((err) => subscriber.error(err));\n  });\n}\n\nexport function fromReadableStreamLike<T>(readableStream: ReadableStreamLike<T>) {\n  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\n\nasync function process<T>(asyncIterable: AsyncIterable<T>, subscriber: Subscriber<T>) {\n  for await (const value of asyncIterable) {\n    subscriber.next(value);\n    // A side-effect may have closed our subscriber,\n    // check before the next iteration.\n    if (subscriber.closed) {\n      return;\n    }\n  }\n  subscriber.complete();\n}\n", "/** @prettier */\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n *\n * Ensure values in subscribe are called just before browser repaint\n *\n * ```ts\n * import { interval, observeOn, animationFrameScheduler } from 'rxjs';\n *\n * const someDiv = document.createElement('div');\n * someDiv.style.cssText = 'width: 200px;background: #09c';\n * document.body.appendChild(someDiv);\n * const intervals = interval(10);      // Intervals are scheduled\n *                                      // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler) // ...but we will observe on animationFrame\n * )                                    // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param delay Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return A function that returns an Observable that emits the same\n * notifications as the source Observable, but with provided scheduler.\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => executeSchedule(subscriber, scheduler, () => subscriber.next(value), delay),\n        () => executeSchedule(subscriber, scheduler, () => subscriber.complete(), delay),\n        (err) => executeSchedule(subscriber, scheduler, () => subscriber.error(err), delay)\n      )\n    );\n  });\n}\n", "import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n", "import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n *\n * Given the following code:\n *\n * ```ts\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3);\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 6\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n *\n * If we instead use the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emitted by Observable `a`:\n *\n * ```ts\n * import { of, subscribeOn, asyncScheduler, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3).pipe(subscribeOn(asyncScheduler));\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 4\n * // 5\n * // 6\n * // 1\n * // 2\n * // 3\n * ```\n *\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param scheduler The {@link SchedulerLike} to perform subscription actions on.\n * @param delay A delay to pass to the scheduler to delay subscriptions\n * @return A function that returns an Observable modified so that its\n * subscriptions happen on the specified {@link SchedulerLike}.\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n  });\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nimport { SchedulerLike } from '../types';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    // The current array index.\n    let i = 0;\n    // Start iterating over the array like on a schedule.\n    return scheduler.schedule(function () {\n      if (i === input.length) {\n        // If we have hit the end of the array like in the\n        // previous job, we can complete.\n        subscriber.complete();\n      } else {\n        // Otherwise let's next the value at the current index,\n        // then increment our index.\n        subscriber.next(input[i++]);\n        // If the last emission didn't cause us to close the subscriber\n        // (via take or some side effect), reschedule the job and we'll\n        // make another pass.\n        if (!subscriber.closed) {\n          this.schedule();\n        }\n      }\n    });\n  });\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\n\n/**\n * Used in {@link scheduled} to create an observable from an Iterable.\n * @param input The iterable to create an observable from\n * @param scheduler The scheduler to use\n */\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>((subscriber) => {\n    let iterator: Iterator<T, T>;\n\n    // Schedule the initial creation of the iterator from\n    // the iterable. This is so the code in the iterable is\n    // not called until the scheduled job fires.\n    executeSchedule(subscriber, scheduler, () => {\n      // Create the iterator.\n      iterator = (input as any)[Symbol_iterator]();\n\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          let value: T;\n          let done: boolean | undefined;\n          try {\n            // Pull the value out of the iterator\n            ({ value, done } = iterator.next());\n          } catch (err) {\n            // We got an error while pulling from the iterator\n            subscriber.error(err);\n            return;\n          }\n\n          if (done) {\n            // If it is \"done\" we just complete. This mimics the\n            // behavior of JavaScript's `for..of` consumption of\n            // iterables, which will not emit the value from an iterator\n            // result of `{ done: true: value: 'here' }`.\n            subscriber.complete();\n          } else {\n            // The iterable is not done, emit the value.\n            subscriber.next(value);\n          }\n        },\n        0,\n        true\n      );\n    });\n\n    // During finalization, if we see this iterator has a `return` method,\n    // then we know it is a Generator, and not just an Iterator. So we call\n    // the `return()` function. This will ensure that any `finally { }` blocks\n    // inside of the generator we can hit will be hit properly.\n    return () => isFunction(iterator?.return) && iterator.return();\n  });\n}\n", "import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function scheduleAsyncIterable<T>(input: AsyncIterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>((subscriber) => {\n    executeSchedule(subscriber, scheduler, () => {\n      const iterator = input[Symbol.asyncIterator]();\n      executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          iterator.next().then((result) => {\n            if (result.done) {\n              // This will remove the subscriptions from\n              // the parent subscription.\n              subscriber.complete();\n            } else {\n              subscriber.next(result.value);\n            }\n          });\n        },\n        0,\n        true\n      );\n    });\n  });\n}\n", "import { SchedulerLike, ReadableStreamLike } from '../types';\nimport { Observable } from '../Observable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\n\nexport function scheduleReadableStreamLike<T>(input: ReadableStreamLike<T>, scheduler: SchedulerLike): Observable<T> {\n  return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerLike } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates an observable that will create an error instance and push it to the consumer as an error\n * immediately upon subscription.\n *\n * <span class=\"informal\">Just errors and does nothing else</span>\n *\n * ![](throw.png)\n *\n * This creation function is useful for creating an observable that will create an error and error every\n * time it is subscribed to. Generally, inside of most operators when you might want to return an errored\n * observable, this is unnecessary. In most cases, such as in the inner return of {@link concatMap},\n * {@link mergeMap}, {@link defer}, and many others, you can simply throw the error, and RxJS will pick\n * that up and notify the consumer of the error.\n *\n * ## Example\n *\n * Create a simple observable that will create a new error with a timestamp and log it\n * and the message every time you subscribe to it\n *\n * ```ts\n * import { throwError } from 'rxjs';\n *\n * let errorCount = 0;\n *\n * const errorWithTimestamp$ = throwError(() => {\n *   const error: any = new Error(`This is error number ${ ++errorCount }`);\n *   error.timestamp = Date.now();\n *   return error;\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * errorWithTimestamp$.subscribe({\n *   error: err => console.log(err.timestamp, err.message)\n * });\n *\n * // Logs the timestamp and a new error message for each subscription\n * ```\n *\n * ### Unnecessary usage\n *\n * Using `throwError` inside of an operator or creation function\n * with a callback, is usually not necessary\n *\n * ```ts\n * import { of, concatMap, timer, throwError } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // This is probably overkill.\n *       return throwError(() => new Error(`Invalid time ${ ms }`));\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * You can just throw the error instead\n *\n * ```ts\n * import { of, concatMap, timer } from 'rxjs';\n *\n * const delays$ = of(1000, 2000, Infinity, 3000);\n *\n * delays$.pipe(\n *   concatMap(ms => {\n *     if (ms < 10000) {\n *       return timer(ms);\n *     } else {\n *       // Cleaner and easier to read for most folks.\n *       throw new Error(`Invalid time ${ ms }`);\n *     }\n *   })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * @param errorFactory A factory function that will create the error instance that is pushed.\n */\nexport function throwError(errorFactory: () => any): Observable<never>;\n\n/**\n * Returns an observable that will error with the specified error immediately upon subscription.\n *\n * @param error The error instance to emit\n * @deprecated Support for passing an error value will be removed in v8. Instead, pass a factory function to `throwError(() => new Error('test'))`. This is\n * because it will create the error at the moment it should be created and capture a more appropriate stack trace. If\n * for some reason you need to create the error ahead of time, you can still do that: `const err = new Error('test'); throwError(() => err);`.\n */\nexport function throwError(error: any): Observable<never>;\n\n/**\n * Notifies the consumer of an error using a given scheduler by scheduling it at delay `0` upon subscription.\n *\n * @param errorOrErrorFactory An error instance or error factory\n * @param scheduler A scheduler to use to schedule the error notification\n * @deprecated The `scheduler` parameter will be removed in v8.\n * Use `throwError` in combination with {@link observeOn}: `throwError(() => new Error('test')).pipe(observeOn(scheduler));`.\n * Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function throwError(errorOrErrorFactory: any, scheduler: SchedulerLike): Observable<never>;\n\nexport function throwError(errorOrErrorFactory: any, scheduler?: SchedulerLike): Observable<never> {\n  const errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : () => errorOrErrorFactory;\n  const init = (subscriber: Subscriber<never>) => subscriber.error(errorFactory());\n  return new Observable(scheduler ? (subscriber) => scheduler.schedule(init as any, 0, subscriber) : init);\n}\n", "/** prettier */\nimport { Observable } from '../Observable';\nimport { isFunction } from './isFunction';\n\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable(obj: any): obj is Observable<unknown> {\n  // The !! is to ensure that this publicly exposed function returns\n  // `false` if something like `null` or `0` is passed.\n  return !!obj && (obj instanceof Observable || (isFunction(obj.lift) && isFunction(obj.subscribe)));\n}\n", "import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\n\nexport interface LastValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function lastValueFrom<T, D>(source: Observable<T>, config: LastValueFromConfig<D>): Promise<T | D>;\nexport function lastValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * waiting for it to complete, and resolving the returned promise with the\n * last value from the observed stream.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will complete. If the source\n * observable does not complete, you will end up with a promise that is hung up, and\n * potentially all of the state of an async function hanging out in memory. To avoid\n * this situation, look into adding something like {@link timeout}, {@link take},\n * {@link takeWhile}, or {@link takeUntil} amongst others.\n *\n * ## Example\n *\n * Wait for the last value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, take, lastValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000).pipe(take(10));\n *   const finalNumber = await lastValueFrom(source$);\n *   console.log(`The final number is ${ finalNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The final number is 9'\n * ```\n *\n * @see {@link firstValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function lastValueFrom<T, D>(source: Observable<T>, config?: LastValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    let _hasValue = false;\n    let _value: T;\n    source.subscribe({\n      next: (value) => {\n        _value = value;\n        _hasValue = true;\n      },\n      error: reject,\n      complete: () => {\n        if (_hasValue) {\n          resolve(_value);\n        } else if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n  });\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface EmptyError extends Error {}\n\nexport interface EmptyErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): EmptyError;\n}\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n * @see {@link firstValueFrom}\n * @see {@link lastValueFrom}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = createErrorClass((_super) => function EmptyErrorImpl(this: any) {\n  _super(this);\n  this.name = 'EmptyError';\n  this.message = 'no elements in sequence';\n});\n", "import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\n\nexport interface FirstValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function firstValueFrom<T, D>(source: Observable<T>, config: FirstValueFromConfig<D>): Promise<T | D>;\nexport function firstValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * and returning a promise that will resolve as soon as the first value\n * arrives from the observable. The subscription will then be closed.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will emit at least one value,\n * *OR* complete. If the source observable does not emit one value or complete, you will\n * end up with a promise that is hung up, and potentially all of the state of an\n * async function hanging out in memory. To avoid this situation, look into adding\n * something like {@link timeout}, {@link take}, {@link takeWhile}, or {@link takeUntil}\n * amongst others.\n *\n * ## Example\n *\n * Wait for the first value from a stream and emit it from a promise in\n * an async function\n *\n * ```ts\n * import { interval, firstValueFrom } from 'rxjs';\n *\n * async function execute() {\n *   const source$ = interval(2000);\n *   const firstNumber = await firstValueFrom(source$);\n *   console.log(`The first number is ${ firstNumber }`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // 'The first number is 0'\n * ```\n *\n * @see {@link lastValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function firstValueFrom<T, D>(source: Observable<T>, config?: FirstValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    const subscriber = new SafeSubscriber<T>({\n      next: (value) => {\n        resolve(value);\n        subscriber.unsubscribe();\n      },\n      error: reject,\n      complete: () => {\n        if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n    source.subscribe(subscriber);\n  });\n}\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface ArgumentOutOfRangeError extends Error {}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ArgumentOutOfRangeError;\n}\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = createErrorClass(\n  (_super) =>\n    function ArgumentOutOfRangeErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ArgumentOutOfRangeError';\n      this.message = 'argument out of range';\n    }\n);\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface NotFoundError extends Error {}\n\nexport interface NotFoundErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): NotFoundError;\n}\n\n/**\n * An error thrown when a value or values are missing from an\n * observable sequence.\n *\n * @see {@link operators/single}\n *\n * @class NotFoundError\n */\nexport const NotFoundError: NotFoundErrorCtor = createErrorClass(\n  (_super) =>\n    function NotFoundErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'NotFoundError';\n      this.message = message;\n    }\n);\n", "import { createErrorClass } from './createErrorClass';\n\nexport interface SequenceError extends Error {}\n\nexport interface SequenceErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (message: string): SequenceError;\n}\n\n/**\n * An error thrown when something is wrong with the sequence of\n * values arriving on the observable.\n *\n * @see {@link operators/single}\n *\n * @class SequenceError\n */\nexport const SequenceError: SequenceErrorCtor = createErrorClass(\n  (_super) =>\n    function SequenceErrorImpl(this: any, message: string) {\n      _super(this);\n      this.name = 'SequenceError';\n      this.message = message;\n    }\n);\n", "import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { isValidDate } from '../util/isDate';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createErrorClass } from '../util/createErrorClass';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport interface TimeoutConfig<T, O extends ObservableInput<unknown> = ObservableInput<T>, M = unknown> {\n  /**\n   * The time allowed between values from the source before timeout is triggered.\n   */\n  each?: number;\n\n  /**\n   * The relative time as a `number` in milliseconds, or a specific time as a `Date` object,\n   * by which the first value must arrive from the source before timeout is triggered.\n   */\n  first?: number | Date;\n\n  /**\n   * The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\n   */\n  scheduler?: SchedulerLike;\n\n  /**\n   * A factory used to create observable to switch to when timeout occurs. Provides\n   * a {@link TimeoutInfo} about the source observable's emissions and what delay or\n   * exact time triggered the timeout.\n   */\n  with?: (info: TimeoutInfo<T, M>) => O;\n\n  /**\n   * Optional additional metadata you can provide to code that handles\n   * the timeout, will be provided through the {@link TimeoutError}.\n   * This can be used to help identify the source of a timeout or pass along\n   * other information related to the timeout.\n   */\n  meta?: M;\n}\n\nexport interface TimeoutInfo<T, M = unknown> {\n  /** Optional metadata that was provided to the timeout configuration. */\n  readonly meta: M;\n  /** The number of messages seen before the timeout */\n  readonly seen: number;\n  /** The last message seen */\n  readonly lastValue: T | null;\n}\n\n/**\n * An error emitted when a timeout occurs.\n */\nexport interface TimeoutError<T = unknown, M = unknown> extends Error {\n  /**\n   * The information provided to the error by the timeout\n   * operation that created the error. Will be `null` if\n   * used directly in non-RxJS code with an empty constructor.\n   * (Note that using this constructor directly is not recommended,\n   * you should create your own errors)\n   */\n  info: TimeoutInfo<T, M> | null;\n}\n\nexport interface TimeoutErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new <T = unknown, M = unknown>(info?: TimeoutInfo<T, M>): TimeoutError<T, M>;\n}\n\n/**\n * An error thrown by the {@link timeout} operator.\n *\n * Provided so users can use as a type and do quality comparisons.\n * We recommend you do not subclass this or create instances of this class directly.\n * If you have need of a error representing a timeout, you should\n * create your own error class and use that.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = createErrorClass(\n  (_super) =>\n    function TimeoutErrorImpl(this: any, info: TimeoutInfo<any> | null = null) {\n      _super(this);\n      this.message = 'Timeout has occurred';\n      this.name = 'TimeoutError';\n      this.info = info;\n    }\n);\n\n/**\n * If `with` is provided, this will return an observable that will switch to a different observable if the source\n * does not push values within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ## Examples\n *\n * Emit a custom error if there is too much time between values\n *\n * ```ts\n * import { interval, timeout, throwError } from 'rxjs';\n *\n * class CustomTimeoutError extends Error {\n *   constructor() {\n *     super('It was too slow');\n *     this.name = 'CustomTimeoutError';\n *   }\n * }\n *\n * const slow$ = interval(900);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => throwError(() => new CustomTimeoutError())\n *   })\n * )\n * .subscribe({\n *   error: console.error\n * });\n * ```\n *\n * Switch to a faster observable if your source is slow.\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * const slow$ = interval(900);\n * const fast$ = interval(500);\n *\n * slow$.pipe(\n *   timeout({\n *     each: 1000,\n *     with: () => fast$,\n *   })\n * )\n * .subscribe(console.log);\n * ```\n * @param config The configuration for the timeout.\n */\nexport function timeout<T, O extends ObservableInput<unknown>, M = unknown>(\n  config: TimeoutConfig<T, O, M> & { with: (info: TimeoutInfo<T, M>) => O }\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n\n/**\n * Returns an observable that will error or switch to a different observable if the source does not push values\n * within the specified time parameters.\n *\n * <span class=\"informal\">The most flexible option for creating a timeout behavior.</span>\n *\n * The first thing to know about the configuration is if you do not provide a `with` property to the configuration,\n * when timeout conditions are met, this operator will emit a {@link TimeoutError}. Otherwise, it will use the factory\n * function provided by `with`, and switch your subscription to the result of that. Timeout conditions are provided by\n * the settings in `first` and `each`.\n *\n * The `first` property can be either a `Date` for a specific time, a `number` for a time period relative to the\n * point of subscription, or it can be skipped. This property is to check timeout conditions for the arrival of\n * the first value from the source _only_. The timings of all subsequent values  from the source will be checked\n * against the time period provided by `each`, if it was provided.\n *\n * The `each` property can be either a `number` or skipped. If a value for `each` is provided, it represents the amount of\n * time the resulting observable will wait between the arrival of values from the source before timing out. Note that if\n * `first` is _not_ provided, the value from `each` will be used to check timeout conditions for the arrival of the first\n * value and all subsequent values. If `first` _is_ provided, `each` will only be use to check all values after the first.\n *\n * ### Handling TimeoutErrors\n *\n * If no `with` property was provided, subscriptions to the resulting observable may emit an error of {@link TimeoutError}.\n * The timeout error provides useful information you can examine when you're handling the error. The most common way to handle\n * the error would be with {@link catchError}, although you could use {@link tap} or just the error handler in your `subscribe` call\n * directly, if your error handling is only a side effect (such as notifying the user, or logging).\n *\n * In this case, you would check the error for `instanceof TimeoutError` to validate that the error was indeed from `timeout`, and\n * not from some other source. If it's not from `timeout`, you should probably rethrow it if you're in a `catchError`.\n *\n * ## Examples\n *\n * Emit a {@link TimeoutError} if the first value, and _only_ the first value, does not arrive within 5 seconds\n *\n * ```ts\n * import { interval, timeout } from 'rxjs';\n *\n * // A random interval that lasts between 0 and 10 seconds per tick\n * const source$ = interval(Math.round(Math.random() * 10_000));\n *\n * source$.pipe(\n *   timeout({ first: 5_000 })\n * )\n * .subscribe({\n *   next: console.log,\n *   error: console.error\n * });\n * ```\n *\n * Emit a {@link TimeoutError} if the source waits longer than 5 seconds between any two values or the first value\n * and subscription.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n *\n * Emit a {@link TimeoutError} if the source does not emit before 7 seconds, _or_ if the source waits longer than\n * 5 seconds between any two values after the first.\n *\n * ```ts\n * import { timer, timeout, expand } from 'rxjs';\n *\n * const getRandomTime = () => Math.round(Math.random() * 10_000);\n *\n * // An observable that waits a random amount of time between each delivered value\n * const source$ = timer(getRandomTime())\n *   .pipe(expand(() => timer(getRandomTime())));\n *\n * source$\n *   .pipe(timeout({ first: 7_000, each: 5_000 }))\n *   .subscribe({\n *     next: console.log,\n *     error: console.error\n *   });\n * ```\n */\nexport function timeout<T, M = unknown>(config: Omit<TimeoutConfig<T, any, M>, 'with'>): OperatorFunction<T, T>;\n\n/**\n * Returns an observable that will error if the source does not push its first value before the specified time passed as a `Date`.\n * This is functionally the same as `timeout({ first: someDate })`.\n *\n * <span class=\"informal\">Errors if the first value doesn't show up before the given date and time</span>\n *\n * ![](timeout.png)\n *\n * @param first The date to at which the resulting observable will timeout if the source observable\n * does not emit at least one value.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(first: Date, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an observable that will error if the source does not push a value within the specified time in milliseconds.\n * This is functionally the same as `timeout({ each: milliseconds })`.\n *\n * <span class=\"informal\">Errors if it waits too long between any value</span>\n *\n * ![](timeout.png)\n *\n * @param each The time allowed between each pushed value from the source before the resulting observable\n * will timeout.\n * @param scheduler The scheduler to use. Defaults to {@link asyncScheduler}.\n */\nexport function timeout<T>(each: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * ![](timeout.png)\n *\n * @see {@link timeoutWith}\n *\n * @return A function that returns an Observable that mirrors behaviour of the\n * source Observable, unless timeout happens when it throws an error.\n */\nexport function timeout<T, O extends ObservableInput<any>, M>(\n  config: number | Date | TimeoutConfig<T, O, M>,\n  schedulerArg?: SchedulerLike\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  // Intentionally terse code.\n  // If the first argument is a valid `Date`, then we use it as the `first` config.\n  // Otherwise, if the first argument is a `number`, then we use it as the `each` config.\n  // Otherwise, it can be assumed the first argument is the configuration object itself, and\n  // we destructure that into what we're going to use, setting important defaults as we do.\n  // NOTE: The default for `scheduler` will be the `scheduler` argument if it exists, or\n  // it will default to the `asyncScheduler`.\n  const {\n    first,\n    each,\n    with: _with = timeoutErrorFactory,\n    scheduler = schedulerArg ?? asyncScheduler,\n    meta = null!,\n  } = (isValidDate(config) ? { first: config } : typeof config === 'number' ? { each: config } : config) as TimeoutConfig<T, O, M>;\n\n  if (first == null && each == null) {\n    // Ensure timeout was provided at runtime.\n    throw new TypeError('No timeout provided.');\n  }\n\n  return operate((source, subscriber) => {\n    // This subscription encapsulates our subscription to the\n    // source for this operator. We're capturing it separately,\n    // because if there is a `with` observable to fail over to,\n    // we want to unsubscribe from our original subscription, and\n    // hand of the subscription to that one.\n    let originalSourceSubscription: Subscription;\n    // The subscription for our timeout timer. This changes\n    // every time we get a new value.\n    let timerSubscription: Subscription;\n    // A bit of state we pass to our with and error factories to\n    // tell what the last value we saw was.\n    let lastValue: T | null = null;\n    // A bit of state we pass to the with and error factories to\n    // tell how many values we have seen so far.\n    let seen = 0;\n    const startTimer = (delay: number) => {\n      timerSubscription = executeSchedule(\n        subscriber,\n        scheduler,\n        () => {\n          try {\n            originalSourceSubscription.unsubscribe();\n            innerFrom(\n              _with!({\n                meta,\n                lastValue,\n                seen,\n              })\n            ).subscribe(subscriber);\n          } catch (err) {\n            subscriber.error(err);\n          }\n        },\n        delay\n      );\n    };\n\n    originalSourceSubscription = source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // clear the timer so we can emit and start another one.\n          timerSubscription?.unsubscribe();\n          seen++;\n          // Emit\n          subscriber.next((lastValue = value));\n          // null | undefined are both < 0. Thanks, JavaScript.\n          each! > 0 && startTimer(each!);\n        },\n        undefined,\n        undefined,\n        () => {\n          if (!timerSubscription?.closed) {\n            timerSubscription?.unsubscribe();\n          }\n          // Be sure not to hold the last value in memory after unsubscription\n          // it could be quite large.\n          lastValue = null;\n        }\n      )\n    );\n\n    // Intentionally terse code.\n    // If we've `seen` a value, that means the \"first\" clause was met already, if it existed.\n    //   it also means that a timer was already started for \"each\" (in the next handler above).\n    // If `first` was provided, and it's a number, then use it.\n    // If `first` was provided and it's not a number, it's a Date, and we get the difference between it and \"now\".\n    // If `first` was not provided at all, then our first timer will be the value from `each`.\n    !seen && startTimer(first != null ? (typeof first === 'number' ? first : +first - scheduler!.now()) : each!);\n  });\n}\n\n/**\n * The default function to use to emit an error when timeout occurs and a `with` function\n * is not specified.\n * @param info The information about the timeout to pass along to the error\n */\nfunction timeoutErrorFactory(info: TimeoutInfo<any>): Observable<never> {\n  throw new TimeoutError(info);\n}\n", "/**\n * Checks to see if a value is not only a `Date` object,\n * but a *valid* `Date` object that can be converted to a\n * number. For example, `new Date('blah')` is indeed an\n * `instanceof Date`, however it cannot be converted to a\n * number.\n */\nexport function isValidDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(value as any);\n}\n", "/* @prettier */\nimport { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { bindCallbackInternals } from './bindCallbackInternals';\n\nexport function bindCallback(\n  callbackFunc: (...args: any[]) => void,\n  resultSelector: (...args: any[]) => any,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any>;\n\n// args is the arguments array and we push the callback on the rest tuple since the rest parameter must be last (only item) in a parameter list\nexport function bindCallback<A extends readonly unknown[], R extends readonly unknown[]>(\n  callbackFunc: (...args: [...A, (...res: R) => void]) => void,\n  schedulerLike?: SchedulerLike\n): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;\n\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters. The\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument, the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is **very important** to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - `scheduler` - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to an Observable calls `func`\n * synchronously, but using {@link asyncScheduler} as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you were to use the async Scheduler\n * and call `subscribe` on the output Observable, all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default, results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously, then the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use {@link asyncScheduler} just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound, the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some object and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n * ## Examples\n *\n * ### Convert jQuery's getJSON to an Observable API\n * ```ts\n * import { bindCallback } from 'rxjs';\n * import * as jQuery from 'jquery';\n *\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * const getJSONAsObservable = bindCallback(jQuery.getJSON);\n * const result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Receive an array of arguments passed to a callback\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const someFunction = (n, s, cb) => {\n *   cb(n, s, { someProperty: 'someValue' });\n * };\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction(5, 'some string').subscribe((values) => {\n *   console.log(values); // [5, 'some string', {someProperty: 'someValue'}]\n * });\n * ```\n *\n * ### Compare behaviour with and without async Scheduler\n * ```ts\n * import { bindCallback, asyncScheduler } from 'rxjs';\n *\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, asyncScheduler);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n * ```\n *\n * ### Use bindCallback on an object method\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod\n *   .call(someObject) // make sure methodWithCallback has access to someObject\n *   .subscribe(subscriber);\n * ```\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n */\nexport function bindCallback(\n  callbackFunc: (...args: [...any[], (...res: any) => void]) => void,\n  resultSelector?: ((...args: any[]) => any) | SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<unknown> {\n  return bindCallbackInternals(false, callbackFunc, resultSelector, scheduler);\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n *\n * Map every click to the `clientX` position of that click\n *\n * ```ts\n * import { fromEvent, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n *\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n", "import { OperatorFunction } from \"../types\";\nimport { map } from \"../operators/map\";\n\nconst { isArray } = Array;\n\nfunction callOrApply<T, R>(fn: ((...values: T[]) => R), args: T|T[]): R {\n    return isArray(args) ? fn(...args) : fn(args);\n}\n\n/**\n * Used in several -- mostly deprecated -- situations where we need to \n * apply a list of arguments or a single argument to a result selector.\n */\nexport function mapOneOrManyArgs<T, R>(fn: ((...values: T[]) => R)): OperatorFunction<T|T[], R> {\n    return map(args => callOrApply(fn, args))\n}", "/* @prettier */\nimport { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { bindCallbackInternals } from './bindCallbackInternals';\n\nexport function bindNodeCallback(\n  callbackFunc: (...args: any[]) => void,\n  resultSelector: (...args: any[]) => any,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any>;\n\n// args is the arguments array and we push the callback on the rest tuple since the rest parameter must be last (only item) in a parameter list\nexport function bindNodeCallback<A extends readonly unknown[], R extends readonly unknown[]>(\n  callbackFunc: (...args: [...A, (err: any, ...res: R) => void]) => void,\n  schedulerLike?: SchedulerLike\n): (...arg: A) => Observable<R extends [] ? void : R extends [any] ? R[0] : R>;\n\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper `scheduler` provided as optional third parameter. {@link SchedulerLike}\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * {@link SchedulerLike} works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n * ## Examples\n * ###  Read a file from the filesystem and get the data as an Observable\n * ```ts\n * import * as fs from 'fs';\n * const readFileAsObservable = bindNodeCallback(fs.readFile);\n * const result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Use on function calling callback with multiple arguments\n * ```ts\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n * ```\n *\n * ### Use on function calling callback in regular style\n * ```ts\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link from}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n */\nexport function bindNodeCallback(\n  callbackFunc: (...args: [...any[], (err: any, ...res: any) => void]) => void,\n  resultSelector?: ((...args: any[]) => any) | SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<any> {\n  return bindCallbackInternals(true, callbackFunc, resultSelector, scheduler);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf, ObservableInputTuple } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { Subscriber } from '../Subscriber';\nimport { from } from './from';\nimport { identity } from '../util/identity';\nimport { Subscription } from '../Subscription';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { popResultSelector, popScheduler } from '../util/args';\nimport { createObject } from '../util/createObject';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { AnyCatcher } from '../AnyCatcher';\nimport { executeSchedule } from '../util/executeSchedule';\n\n// combineLatest(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function combineLatest<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// combineLatest([a, b, c])\nexport function combineLatest(sources: []): Observable<never>;\nexport function combineLatest<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R,\n  scheduler: SchedulerLike\n): Observable<R>;\nexport function combineLatest<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  sources: readonly [...ObservableInputTuple<A>],\n  scheduler: SchedulerLike\n): Observable<A>;\n\n// combineLatest(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelectorAndScheduler: [...ObservableInputTuple<A>, (...values: A) => R, SchedulerLike]\n): Observable<R>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function combineLatest<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `combineLatestAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function combineLatest<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike]\n): Observable<A>;\n\n// combineLatest({a, b, c})\nexport function combineLatest(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function combineLatest<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed in the\n * observables array. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to this operator,\n * the returned Observable will always emit an array of `n` values, in an order\n * corresponding to the order of the passed Observables (the value from the first Observable\n * will be at index 0 of the array and so on).\n *\n * Static version of `combineLatest` accepts an array of Observables. Note that an array of\n * Observables is a good choice, if you don't know beforehand how many Observables\n * you will combine. Passing an empty array will result in an Observable that\n * completes immediately.\n *\n * To ensure the output array always has the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will now be impossible to include a value from the\n * completed Observable in the resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, the resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, the result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of a completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * ## Examples\n *\n * Combine two timer Observables\n *\n * ```ts\n * import { timer, combineLatest } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest([firstTimer, secondTimer]);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * Combine a dictionary of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = {\n *   a: of(1).pipe(delay(1000), startWith(0)),\n *   b: of(5).pipe(delay(5000), startWith(0)),\n *   c: of(10).pipe(delay(10000), startWith(0))\n * };\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // { a: 0, b: 0, c: 0 } immediately\n * // { a: 1, b: 0, c: 0 } after 1s\n * // { a: 1, b: 5, c: 0 } after 5s\n * // { a: 1, b: 5, c: 10 } after 10s\n * ```\n *\n * Combine an array of Observables\n *\n * ```ts\n * import { of, delay, startWith, combineLatest } from 'rxjs';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000), // emit 0 and then emit n after n seconds\n *     startWith(0)\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n * Use map operator to dynamically calculate the Body-Mass Index\n *\n * ```ts\n * import { of, combineLatest, map } from 'rxjs';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest([weight, height]).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} [observables] An array of input Observables to combine with each other.\n * An array of Observables must be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(...args: any[]): Observable<R> | Observable<ObservedValueOf<O>[]> {\n  const scheduler = popScheduler(args);\n  const resultSelector = popResultSelector(args);\n\n  const { args: observables, keys } = argsArgArrayOrObject(args);\n\n  if (observables.length === 0) {\n    // If no observables are passed, or someone has passed an empty array\n    // of observables, or even an empty object POJO, we need to just\n    // complete (EMPTY), but we have to honor the scheduler provided if any.\n    return from([], scheduler as any);\n  }\n\n  const result = new Observable<ObservedValueOf<O>[]>(\n    combineLatestInit(\n      observables as ObservableInput<ObservedValueOf<O>>[],\n      scheduler,\n      keys\n        ? // A handler for scrubbing the array of args into a dictionary.\n          (values) => createObject(keys, values)\n        : // A passthrough to just return the array\n          identity\n    )\n  );\n\n  return resultSelector ? (result.pipe(mapOneOrManyArgs(resultSelector)) as Observable<R>) : result;\n}\n\nexport function combineLatestInit(\n  observables: ObservableInput<any>[],\n  scheduler?: SchedulerLike,\n  valueTransform: (values: any[]) => any = identity\n) {\n  return (subscriber: Subscriber<any>) => {\n    // The outer subscription. We're capturing this in a function\n    // because we may have to schedule it.\n    maybeSchedule(\n      scheduler,\n      () => {\n        const { length } = observables;\n        // A store for the values each observable has emitted so far. We match observable to value on index.\n        const values = new Array(length);\n        // The number of currently active subscriptions, as they complete, we decrement this number to see if\n        // we are all done combining values, so we can complete the result.\n        let active = length;\n        // The number of inner sources that still haven't emitted the first value\n        // We need to track this because all sources need to emit one value in order\n        // to start emitting values.\n        let remainingFirstValues = length;\n        // The loop to kick off subscription. We're keying everything on index `i` to relate the observables passed\n        // in to the slot in the output array or the key in the array of keys in the output dictionary.\n        for (let i = 0; i < length; i++) {\n          maybeSchedule(\n            scheduler,\n            () => {\n              const source = from(observables[i], scheduler as any);\n              let hasFirstValue = false;\n              source.subscribe(\n                createOperatorSubscriber(\n                  subscriber,\n                  (value) => {\n                    // When we get a value, record it in our set of values.\n                    values[i] = value;\n                    if (!hasFirstValue) {\n                      // If this is our first value, record that.\n                      hasFirstValue = true;\n                      remainingFirstValues--;\n                    }\n                    if (!remainingFirstValues) {\n                      // We're not waiting for any more\n                      // first values, so we can emit!\n                      subscriber.next(valueTransform(values.slice()));\n                    }\n                  },\n                  () => {\n                    if (!--active) {\n                      // We only complete the result if we have no more active\n                      // inner observables.\n                      subscriber.complete();\n                    }\n                  }\n                )\n              );\n            },\n            subscriber\n          );\n        }\n      },\n      subscriber\n    );\n  };\n}\n\n/**\n * A small utility to handle the couple of locations where we want to schedule if a scheduler was provided,\n * but we don't if there was no scheduler.\n */\nfunction maybeSchedule(scheduler: SchedulerLike | undefined, execute: () => void, subscription: Subscription) {\n  if (scheduler) {\n    executeSchedule(subscription, scheduler, execute);\n  } else {\n    execute();\n  }\n}\n", "const { isArray } = Array;\nconst { getPrototypeOf, prototype: objectProto, keys: getKeys } = Object;\n\n/**\n * Used in functions where either a list of arguments, a single array of arguments, or a\n * dictionary of arguments can be returned. Returns an object with an `args` property with\n * the arguments in an array, if it is a dictionary, it will also return the `keys` in another\n * property.\n */\nexport function argsArgArrayOrObject<T, O extends Record<string, T>>(args: T[] | [O] | [T[]]): { args: T[]; keys: string[] | null } {\n  if (args.length === 1) {\n    const first = args[0];\n    if (isArray(first)) {\n      return { args: first, keys: null };\n    }\n    if (isPOJO(first)) {\n      const keys = getKeys(first);\n      return {\n        args: keys.map((key) => first[key]),\n        keys,\n      };\n    }\n  }\n\n  return { args: args as T[], keys: null };\n}\n\nfunction isPOJO(obj: any): obj is object {\n  return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n}\n", "export function createObject(keys: string[], values: any[]) {\n  return keys.reduce((result, key, i) => ((result[key] = values[i]), result), {} as any);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInputTuple, SchedulerLike } from '../types';\nimport { concatAll } from '../operators/concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function concat<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function concat<T extends readonly unknown[]>(\n  ...inputsAndScheduler: [...ObservableInputTuple<T>, SchedulerLike]\n): Observable<T[number]>;\n\n/**\n * Creates an output Observable which sequentially emits all values from the first given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n *\n * Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n *\n * ```ts\n * import { interval, take, range, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * Concatenate 3 Observables\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * Concatenate the same Observable to repeat it\n *\n * ```ts\n * import { interval, take, concat } from 'rxjs';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n *   .subscribe({\n *     next: value => console.log(value),\n *     complete: () => console.log('...and it is done!')\n *   });\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // '...and it is done!' also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param args Input Observables to concatenate.\n */\nexport function concat(...args: any[]): Observable<unknown> {\n  return concatAll()(from(args, popScheduler(args)));\n}\n", "import { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.svg)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, map, interval, take, concatAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(4)))\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaustAll}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable emitting values from all the\n * inner Observables concatenated.\n */\nexport function concatAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeAll(1);\n}\n", "import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n *\n * ```ts\n * import { fromEvent, map, interval, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map(() => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n *\n * ```ts\n * import { fromEvent, map, interval, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(10)))\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n *\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Infinity] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits values coming from\n * all the inner Observables emitted by the source Observable.\n */\nexport function mergeAll<O extends ObservableInput<any>>(concurrent: number = Infinity): OperatorFunction<O, ObservedValueOf<O>> {\n  return mergeMap(identity, concurrent);\n}\n", "import { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined,\n  concurrent?: number\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n *\n * Map and flatten each letter to an Observable ticking every 1 second\n *\n * ```ts\n * import { of, mergeMap, interval, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x + i)))\n * );\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a, b, c every second with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and merging\n * the results of the Observables obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    // DEPRECATED PATH\n    return mergeMap((a, i) => map((b: any, ii: number) => resultSelector(a, b, i, ii))(innerFrom(project(a, i))), concurrent);\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return operate((source, subscriber) => mergeInternals(source, subscriber, project, concurrent));\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalFinalizer?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                if (innerSubScheduler) {\n                  executeSchedule(subscriber, innerSubScheduler, () => doInnerSub(bufferedValue));\n                } else {\n                  doInnerSub(bufferedValue);\n                }\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    createOperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional finalization (for when the destination is torn down).\n  // Other finalization is added implicitly via subscription above.\n  return () => {\n    additionalFinalizer?.();\n  };\n}\n", "import { Connectable, ObservableInput, SubjectLike } from '../types';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { defer } from './defer';\n\nexport interface ConnectableConfig<T> {\n  /**\n   * A factory function used to create the Subject through which the source\n   * is multicast. By default this creates a {@link Subject}.\n   */\n  connector: () => SubjectLike<T>;\n  /**\n   * If true, the resulting observable will reset internal state upon disconnection\n   * and return to a \"cold\" state. This allows the resulting observable to be\n   * reconnected.\n   * If false, upon disconnection, the connecting subject will remain the\n   * connecting subject, meaning the resulting observable will not go \"cold\" again,\n   * and subsequent repeats or resubscriptions will resubscribe to that same subject.\n   */\n  resetOnDisconnect?: boolean;\n}\n\n/**\n * The default configuration for `connectable`.\n */\nconst DEFAULT_CONFIG: ConnectableConfig<unknown> = {\n  connector: () => new Subject<unknown>(),\n  resetOnDisconnect: true,\n};\n\n/**\n * Creates an observable that multicasts once `connect()` is called on it.\n *\n * @param source The observable source to make connectable.\n * @param config The configuration object for `connectable`.\n * @returns A \"connectable\" observable, that has a `connect()` method, that you must call to\n * connect the source to all consumers through the subject provided as the connector.\n */\nexport function connectable<T>(source: ObservableInput<T>, config: ConnectableConfig<T> = DEFAULT_CONFIG): Connectable<T> {\n  // The subscription representing the connection.\n  let connection: Subscription | null = null;\n  const { connector, resetOnDisconnect = true } = config;\n  let subject = connector();\n\n  const result: any = new Observable<T>((subscriber) => {\n    return subject.subscribe(subscriber);\n  });\n\n  // Define the `connect` function. This is what users must call\n  // in order to \"connect\" the source to the subject that is\n  // multicasting it.\n  result.connect = () => {\n    if (!connection || connection.closed) {\n      connection = defer(() => source).subscribe(subject);\n      if (resetOnDisconnect) {\n        connection.add(() => (subject = connector()));\n      }\n    }\n    return connection;\n  };\n\n  return result;\n}\n", "import { Observable } from '../Observable';\nimport { ObservedValueOf, ObservableInput } from '../types';\nimport { innerFrom } from './innerFrom';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create an Observable only when the Observer\n * subscribes. It waits until an Observer subscribes to it, calls the given\n * factory function to get an Observable -- where a factory function typically\n * generates a new Observable -- and subscribes the Observer to this Observable.\n * In case the factory function returns a falsy value, then EMPTY is used as\n * Observable instead. Last but not least, an exception during the factory\n * function call is transferred to the Observer by calling `error`.\n *\n * ## Example\n *\n * Subscribe to either an Observable of clicks or an Observable of interval, at random\n *\n * ```ts\n * import { defer, fromEvent, interval } from 'rxjs';\n *\n * const clicksOrInterval = defer(() => {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): ObservableInput} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n */\nexport function defer<R extends ObservableInput<any>>(observableFactory: () => R): Observable<ObservedValueOf<R>> {\n  return new Observable<ObservedValueOf<R>>((subscriber) => {\n    innerFrom(observableFactory()).subscribe(subscriber);\n  });\n}\n", "import { Observable } from '../Observable';\nimport { ObservedValueOf, ObservableInputTuple, ObservableInput } from '../types';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { innerFrom } from './innerFrom';\nimport { popResultSelector } from '../util/args';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { createObject } from '../util/createObject';\nimport { AnyCatcher } from '../AnyCatcher';\n\n// forkJoin(any)\n// We put this first because we need to catch cases where the user has supplied\n// _exactly `any`_ as the argument. Since `any` literally matches _anything_,\n// we don't want it to randomly hit one of the other type signatures below,\n// as we have no idea at build-time what type we should be returning when given an any.\n\n/**\n * You have passed `any` here, we can't figure out if it is\n * an array or an object, so you're getting `unknown`. Use better types.\n * @param arg Something typed as `any`\n */\nexport function forkJoin<T extends AnyCatcher>(arg: T): Observable<unknown>;\n\n// forkJoin(null | undefined)\nexport function forkJoin(scheduler: null | undefined): Observable<never>;\n\n// forkJoin([a, b, c])\nexport function forkJoin(sources: readonly []): Observable<never>;\nexport function forkJoin<A extends readonly unknown[]>(sources: readonly [...ObservableInputTuple<A>]): Observable<A>;\nexport function forkJoin<A extends readonly unknown[], R>(\n  sources: readonly [...ObservableInputTuple<A>],\n  resultSelector: (...values: A) => R\n): Observable<R>;\n\n// forkJoin(a, b, c)\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function forkJoin<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A>;\n/** @deprecated Pass an array of sources instead. The rest-parameters signature will be removed in v8. Details: https://rxjs.dev/deprecations/array-argument */\nexport function forkJoin<A extends readonly unknown[], R>(\n  ...sourcesAndResultSelector: [...ObservableInputTuple<A>, (...values: A) => R]\n): Observable<R>;\n\n// forkJoin({a, b, c})\nexport function forkJoin(sourcesObject: { [K in any]: never }): Observable<never>;\nexport function forkJoin<T extends Record<string, ObservableInput<any>>>(\n  sourcesObject: T\n): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/**\n * Accepts an `Array` of {@link ObservableInput} or a dictionary `Object` of {@link ObservableInput} and returns\n * an {@link Observable} that emits either an array of values in the exact same order as the passed array,\n * or a dictionary of values in the same shape as the passed dictionary.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted;\n * complete immediately if an empty array is passed.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of input observables which can be passed either as an array\n * or a dictionary of input observables. If no input observables are provided (e.g. an empty array is passed),\n * then the resulting stream will complete immediately.\n *\n * `forkJoin` will wait for all passed observables to emit and complete and then it will emit an array or an object with last\n * values from corresponding observables.\n *\n * If you pass an array of `n` observables to the operator, then the resulting\n * array will have `n` values, where the first value is the last one emitted by the first observable,\n * second value is the last one emitted by the second observable and so on.\n *\n * If you pass a dictionary of observables to the operator, then the resulting\n * objects will have the same keys as the dictionary passed, with their last values they have emitted\n * located at the corresponding key.\n *\n * That means `forkJoin` will not emit more than once and it will complete after that. If you need to emit combined\n * values not only at the end of the lifecycle of passed observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for the resulting array to have the same length as the number of input observables, whenever any of\n * the given observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other observables.\n * Conversely, if there is an observable that never completes, `forkJoin` will never complete either,\n * unless at any point some other observable completes without emitting a value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all given observables\n * have to emit something at least once and complete.\n *\n * If any given observable errors at some point, `forkJoin` will error as well and immediately unsubscribe\n * from the other observables.\n *\n * Optionally `forkJoin` accepts a `resultSelector` function, that will be called with values which normally\n * would land in the emitted array. Whatever is returned by the `resultSelector`, will appear in the output\n * observable instead. This means that the default `resultSelector` can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that the `resultSelector` will be called only\n * when `forkJoin` is supposed to emit a result.\n *\n * ## Examples\n *\n * Use `forkJoin` with a dictionary of observable inputs\n *\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin({\n *   foo: of(1, 2, 3, 4),\n *   bar: Promise.resolve(8),\n *   baz: timer(4000)\n * });\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // { foo: 4, bar: 8, baz: 0 } after 4 seconds\n * // 'This is how it ends!' immediately after\n * ```\n *\n * Use `forkJoin` with an array of observable inputs\n *\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin([\n *   of(1, 2, 3, 4),\n *   Promise.resolve(8),\n *   timer(4000)\n * ]);\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // [4, 8, 0] after 4 seconds\n * // 'This is how it ends!' immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} args Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin(...args: any[]): Observable<any> {\n  const resultSelector = popResultSelector(args);\n  const { args: sources, keys } = argsArgArrayOrObject(args);\n  const result = new Observable((subscriber) => {\n    const { length } = sources;\n    if (!length) {\n      subscriber.complete();\n      return;\n    }\n    const values = new Array(length);\n    let remainingCompletions = length;\n    let remainingEmissions = length;\n    for (let sourceIndex = 0; sourceIndex < length; sourceIndex++) {\n      let hasValue = false;\n      innerFrom(sources[sourceIndex]).subscribe(\n        createOperatorSubscriber(\n          subscriber,\n          (value) => {\n            if (!hasValue) {\n              hasValue = true;\n              remainingEmissions--;\n            }\n            values[sourceIndex] = value;\n          },\n          () => remainingCompletions--,\n          undefined,\n          () => {\n            if (!remainingCompletions || !hasValue) {\n              if (!remainingEmissions) {\n                subscriber.next(keys ? createObject(keys, values) : values);\n              }\n              subscriber.complete();\n            }\n          }\n        )\n      );\n    }\n  });\n  return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\n", "import { Observable } from '../Observable';\nimport { isFunction } from '../util/isFunction';\nimport { NodeEventHandler } from './fromEvent';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void\n): Observable<T>;\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n  resultSelector?: (...args: any[]) => T\n): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an arbitrary API for registering event handlers.\n *\n * <span class=\"informal\">When that method for adding event handler was something {@link fromEvent}\n * was not prepared for.</span>\n *\n * ![](fromEventPattern.png)\n *\n * `fromEventPattern` allows you to convert into an Observable any API that supports registering handler functions\n * for events. It is similar to {@link fromEvent}, but far\n * more flexible. In fact, all use cases of {@link fromEvent} could be easily handled by\n * `fromEventPattern` (although in slightly more verbose way).\n *\n * This operator accepts as a first argument an `addHandler` function, which will be injected with\n * handler parameter. That handler is actually an event handler function that you now can pass\n * to API expecting it. `addHandler` will be called whenever Observable\n * returned by the operator is subscribed, so registering handler in API will not\n * necessarily happen when `fromEventPattern` is called.\n *\n * After registration, every time an event that we listen to happens,\n * Observable returned by `fromEventPattern` will emit value that event handler\n * function was called with. Note that if event handler was called with more\n * than one argument, second and following arguments will not appear in the Observable.\n *\n * If API you are using allows to unregister event handlers as well, you can pass to `fromEventPattern`\n * another function - `removeHandler` - as a second parameter. It will be injected\n * with the same handler function as before, which now you can use to unregister\n * it from the API. `removeHandler` will be called when consumer of resulting Observable\n * unsubscribes from it.\n *\n * In some APIs unregistering is actually handled differently. Method registering an event handler\n * returns some kind of token, which is later used to identify which function should\n * be unregistered or it itself has method that unregisters event handler.\n * If that is the case with your API, make sure token returned\n * by registering method is returned by `addHandler`. Then it will be passed\n * as a second argument to `removeHandler`, where you will be able to use it.\n *\n * If you need access to all event handler parameters (not only the first one),\n * or you need to transform them in any way, you can call `fromEventPattern` with optional\n * third parameter - project function which will accept all arguments passed to\n * event handler when it is called. Whatever is returned from project function will appear on\n * resulting stream instead of usual event handlers first argument. This means\n * that default project can be thought of as function that takes its first parameter\n * and ignores the rest.\n *\n * ## Examples\n *\n * Emits clicks happening on the DOM document\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * const clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * // Whenever you click anywhere in the browser, DOM MouseEvent\n * // object will be logged.\n * ```\n *\n * Use with API that returns cancellation token\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * const token = someAPI.registerEventHandler(function() {});\n * someAPI.unregisterEventHandler(token); // this APIs cancellation method accepts\n *                                        // not handler itself, but special token.\n *\n * const someAPIObservable = fromEventPattern(\n *   function(handler) { return someAPI.registerEventHandler(handler); }, // Note that we return the token here...\n *   function(handler, token) { someAPI.unregisterEventHandler(token); }  // ...to then use it here.\n * );\n * ```\n *\n * Use with project function\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * someAPI.registerEventHandler((eventType, eventMessage) => {\n *   console.log(eventType, eventMessage); // Logs 'EVENT_TYPE' 'EVENT_MESSAGE' to console.\n * });\n *\n * const someAPIObservable = fromEventPattern(\n *   handler => someAPI.registerEventHandler(handler),\n *   handler => someAPI.unregisterEventHandler(handler)\n *   (eventType, eventMessage) => eventType + ' --- ' + eventMessage // without that function only 'EVENT_TYPE'\n * );                                                                // would be emitted by the Observable\n *\n * someAPIObservable.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'EVENT_TYPE --- EVENT_MESSAGE'\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, token?: any): void} [removeHandler] A function that\n * takes a `handler` function as an argument and removes it from the event source. If `addHandler`\n * returns some kind of token, `removeHandler` function will have it as a second parameter.\n * @param {function(...args: any): T} [project] A function to\n * transform results. It takes the arguments from the event handler and\n * should return a single value.\n * @return {Observable<T>} Observable which, when an event happens, emits first parameter\n * passed to registered event handler. Alternatively it emits whatever project function returns\n * at that moment.\n */\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n  resultSelector?: (...args: any[]) => T\n): Observable<T | T[]> {\n  if (resultSelector) {\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  return new Observable<T | T[]>((subscriber) => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n    const retValue = addHandler(handler);\n    return isFunction(removeHandler) ? () => removeHandler(handler, retValue) : undefined;\n  });\n}\n", "import { Observable } from '../Observable';\nimport { defer } from './defer';\nimport { ObservableInput } from '../types';\n\n/**\n * Checks a boolean at subscription time, and chooses between one of two observable sources\n *\n * `iif` expects a function that returns a boolean (the `condition` function), and two sources,\n * the `trueResult` and the `falseResult`, and returns an Observable.\n *\n * At the moment of subscription, the `condition` function is called. If the result is `true`, the\n * subscription will be to the source passed as the `trueResult`, otherwise, the subscription will be\n * to the source passed as the `falseResult`.\n *\n * If you need to check more than two options to choose between more than one observable, have a look at the {@link defer} creation method.\n *\n * ## Examples\n *\n * Change at runtime which Observable will be subscribed\n *\n * ```ts\n * import { iif, of } from 'rxjs';\n *\n * let subscribeToFirst;\n * const firstOrSecond = iif(\n *   () => subscribeToFirst,\n *   of('first'),\n *   of('second')\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'first'\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // 'second'\n * ```\n *\n * Control access to an Observable\n *\n * ```ts\n * import { iif, of, EMPTY } from 'rxjs';\n *\n * let accessGranted;\n * const observableIfYouHaveAccess = iif(\n *   () => accessGranted,\n *   of('It seems you have an access...'),\n *   EMPTY\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('The end')\n * });\n *\n * // Logs:\n * // 'It seems you have an access...'\n * // 'The end'\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('The end')\n * });\n *\n * // Logs:\n * // 'The end'\n * ```\n *\n * @see {@link defer}\n *\n * @param condition Condition which Observable should be chosen.\n * @param trueResult An Observable that will be subscribed if condition is true.\n * @param falseResult An Observable that will be subscribed if condition is false.\n * @return An observable that proxies to `trueResult` or `falseResult`, depending on the result of the `condition` function.\n */\nexport function iif<T, F>(condition: () => boolean, trueResult: ObservableInput<T>, falseResult: ObservableInput<F>): Observable<T | F> {\n  return defer(() => (condition() ? trueResult : falseResult));\n}\n", "import { Observable } from '../Observable';\nimport { asyncScheduler } from '../scheduler/async';\nimport { SchedulerLike } from '../types';\nimport { timer } from './timer';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.</span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n *\n * Emits ascending numbers, one every second (1000ms) up to the number 3\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const numbers = interval(1000);\n *\n * const takeFourNumbers = numbers.pipe(take(4));\n *\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\n *\n * // Logs:\n * // Next: 0\n * // Next: 1\n * // Next: 2\n * // Next: 3\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n */\nexport function interval(period = 0, scheduler: SchedulerLike = asyncScheduler): Observable<number> {\n  if (period < 0) {\n    // We cannot schedule an interval in the past.\n    period = 0;\n  }\n\n  return timer(period, period, scheduler);\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\n\n/**\n * Creates an observable that will wait for a specified time period, or exact date, before\n * emitting the number 0.\n *\n * <span class=\"informal\">Used to emit a notification after a delay.</span>\n *\n * This observable is useful for creating delays in code, or racing against other values\n * for ad-hoc timeouts.\n *\n * The `delay` is specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Examples\n *\n * Wait 3 seconds and start another observable\n *\n * You might want to use `timer` to delay subscription to an\n * observable by a set amount of time. Here we use a timer with\n * {@link concatMapTo} or {@link concatMap} in order to wait\n * a few seconds and start a subscription to a source.\n *\n * ```ts\n * import { of, timer, concatMap } from 'rxjs';\n *\n * // This could be any observable\n * const source = of(1, 2, 3);\n *\n * timer(3000)\n *   .pipe(concatMap(() => source))\n *   .subscribe(console.log);\n * ```\n *\n * Take all values until the start of the next minute\n *\n * Using a `Date` as the trigger for the first emission, you can\n * do things like wait until midnight to fire an event, or in this case,\n * wait until a new minute starts (chosen so the example wouldn't take\n * too long to run) in order to stop watching a stream. Leveraging\n * {@link takeUntil}.\n *\n * ```ts\n * import { interval, takeUntil, timer } from 'rxjs';\n *\n * // Build a Date object that marks the\n * // next minute.\n * const currentDate = new Date();\n * const startOfNextMinute = new Date(\n *   currentDate.getFullYear(),\n *   currentDate.getMonth(),\n *   currentDate.getDate(),\n *   currentDate.getHours(),\n *   currentDate.getMinutes() + 1\n * );\n *\n * // This could be any observable stream\n * const source = interval(1000);\n *\n * const result = source.pipe(\n *   takeUntil(timer(startOfNextMinute))\n * );\n *\n * result.subscribe(console.log);\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `dueTime`.\n *\n * @param due If a `number`, the amount of time in milliseconds to wait before emitting.\n * If a `Date`, the exact time at which to emit.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(due: number | Date, scheduler?: SchedulerLike): Observable<0>;\n\n/**\n * Creates an observable that starts an interval after a specified delay, emitting incrementing numbers -- starting at `0` --\n * on each interval after words.\n *\n * The `delay` and `intervalDuration` are specified by default in milliseconds, however providing a custom scheduler could\n * create a different behavior.\n *\n * ## Example\n *\n * ### Start an interval that starts right away\n *\n * Since {@link interval} waits for the passed delay before starting,\n * sometimes that's not ideal. You may want to start an interval immediately.\n * `timer` works well for this. Here we have both side-by-side so you can\n * see them in comparison.\n *\n * Note that this observable will never complete.\n *\n * ```ts\n * import { timer, interval } from 'rxjs';\n *\n * timer(0, 1000).subscribe(n => console.log('timer', n));\n * interval(1000).subscribe(n => console.log('interval', n));\n * ```\n *\n * ### Known Limitations\n *\n * - The {@link asyncScheduler} uses `setTimeout` which has limitations for how far in the future it can be scheduled.\n *\n * - If a `scheduler` is provided that returns a timestamp other than an epoch from `now()`, and\n * a `Date` object is passed to the `dueTime` argument, the calculation for when the first emission\n * should occur will be incorrect. In this case, it would be best to do your own calculations\n * ahead of time, and pass a `number` in as the `startDue`.\n * @param startDue If a `number`, is the time to wait before starting the interval.\n * If a `Date`, is the exact time at which to start the interval.\n * @param intervalDuration The delay between each value emitted in the interval. Passing a\n * negative number here will result in immediate completion after the first value is emitted, as though\n * no `intervalDuration` was passed at all.\n * @param scheduler The scheduler to use to schedule the delay. Defaults to {@link asyncScheduler}.\n */\nexport function timer(startDue: number | Date, intervalDuration: number, scheduler?: SchedulerLike): Observable<number>;\n\n/**\n * @deprecated The signature allowing `undefined` to be passed for `intervalDuration` will be removed in v8. Use the `timer(dueTime, scheduler?)` signature instead.\n */\nexport function timer(dueTime: number | Date, unused: undefined, scheduler?: SchedulerLike): Observable<0>;\n\nexport function timer(\n  dueTime: number | Date = 0,\n  intervalOrScheduler?: number | SchedulerLike,\n  scheduler: SchedulerLike = asyncScheduler\n): Observable<number> {\n  // Since negative intervalDuration is treated as though no\n  // interval was specified at all, we start with a negative number.\n  let intervalDuration = -1;\n\n  if (intervalOrScheduler != null) {\n    // If we have a second argument, and it's a scheduler,\n    // override the scheduler we had defaulted. Otherwise,\n    // it must be an interval.\n    if (isScheduler(intervalOrScheduler)) {\n      scheduler = intervalOrScheduler;\n    } else {\n      // Note that this *could* be negative, in which case\n      // it's like not passing an intervalDuration at all.\n      intervalDuration = intervalOrScheduler;\n    }\n  }\n\n  return new Observable((subscriber) => {\n    // If a valid date is passed, calculate how long to wait before\n    // executing the first value... otherwise, if it's a number just schedule\n    // that many milliseconds (or scheduler-specified unit size) in the future.\n    let due = isValidDate(dueTime) ? +dueTime - scheduler!.now() : dueTime;\n\n    if (due < 0) {\n      // Ensure we don't schedule in the future.\n      due = 0;\n    }\n\n    // The incrementing value we emit.\n    let n = 0;\n\n    // Start the timer.\n    return scheduler.schedule(function () {\n      if (!subscriber.closed) {\n        // Emit the next value and increment.\n        subscriber.next(n++);\n\n        if (0 <= intervalDuration) {\n          // If we have a interval after the initial timer,\n          // reschedule with the period.\n          this.schedule(undefined, intervalDuration);\n        } else {\n          // We didn't have an interval. So just complete.\n          subscriber.complete();\n        }\n      }\n    }, due);\n  });\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, ObservableInputTuple, SchedulerLike } from '../types';\nimport { mergeAll } from '../operators/mergeAll';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from './from';\n\nexport function merge<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\nexport function merge<A extends readonly unknown[]>(...sourcesAndConcurrency: [...ObservableInputTuple<A>, number?]): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndScheduler: [...ObservableInputTuple<A>, SchedulerLike?]\n): Observable<A[number]>;\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `mergeAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function merge<A extends readonly unknown[]>(\n  ...sourcesAndConcurrencyAndScheduler: [...ObservableInputTuple<A>, number?, SchedulerLike?]\n): Observable<A[number]>;\n\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n *\n * Merge together two Observables: 1s interval and clicks\n *\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console every time the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * Merge together 3 Observables, but run only 2 concurrently\n *\n * ```ts\n * import { interval, take, merge } from 'rxjs';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits its max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits its max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n */\nexport function merge(...args: (ObservableInput<unknown> | number | SchedulerLike)[]): Observable<unknown> {\n  const scheduler = popScheduler(args);\n  const concurrent = popNumber(args, Infinity);\n  const sources = args as ObservableInput<unknown>[];\n  return !sources.length\n    ? // No source provided\n      EMPTY\n    : sources.length === 1\n    ? // One source? Just return it.\n      innerFrom(sources[0])\n    : // Merge all sources\n      mergeAll(concurrent)(from(sources, scheduler));\n}\n", "import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n *\n * Emit the number 7, then never emit anything else (not even complete)\n *\n * ```ts\n * import { NEVER, startWith } from 'rxjs';\n *\n * const info = () => console.log('Will not be called');\n *\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe({\n *   next: x => console.log(x),\n *   error: info,\n *   complete: info\n * });\n * ```\n *\n * @see {@link Observable}\n * @see {@link EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Replaced with the {@link NEVER} constant. Will be removed in v8.\n */\nexport function never() {\n  return NEVER;\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInputTuple } from '../types';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { OperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from './innerFrom';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<A extends readonly unknown[]>(sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\nexport function onErrorResumeNext<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\n\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits a complete or an error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the result of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * ## Example\n *\n * Subscribe to the next Observable after map fails\n *\n * ```ts\n * import { onErrorResumeNext, of, map } from 'rxjs';\n *\n * onErrorResumeNext(\n *   of(1, 2, 3, 0).pipe(\n *     map(x => {\n *       if (x === 0) {\n *         throw Error();\n *       }\n *       return 10 / x;\n *     })\n *   ),\n *   of(1, 2, 3)\n * )\n * .subscribe({\n *   next: value => console.log(value),\n *   error: err => console.log(err),     // Will never be called.\n *   complete: () => console.log('done')\n * });\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // 'done'\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext<A extends readonly unknown[]>(\n  ...sources: [[...ObservableInputTuple<A>]] | [...ObservableInputTuple<A>]\n): Observable<A[number]> {\n  const nextSources: ObservableInputTuple<A> = argsOrArgArray(sources) as any;\n\n  return new Observable((subscriber) => {\n    let sourceIndex = 0;\n    const subscribeNext = () => {\n      if (sourceIndex < nextSources.length) {\n        let nextSource: Observable<A[number]>;\n        try {\n          nextSource = innerFrom(nextSources[sourceIndex++]);\n        } catch (err) {\n          subscribeNext();\n          return;\n        }\n        const innerSubscriber = new OperatorSubscriber(subscriber, undefined, noop, noop);\n        nextSource.subscribe(innerSubscriber);\n        innerSubscriber.add(subscribeNext);\n      } else {\n        subscriber.complete();\n      }\n    };\n    subscribeNext();\n  });\n}\n", "const { isArray } = Array;\n\n/**\n * Used in operators and functions that accept either a list of arguments, or an array of arguments\n * as a single argument.\n */\nexport function argsOrArgArray<T>(args: (T | T[])[]): T[] {\n  return args.length === 1 && isArray(args[0]) ? args[0] : (args as T[]);\n}\n", "import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { from } from './from';\n\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<T>(arr: readonly T[], scheduler?: SchedulerLike): Observable<[string, T]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<O extends Record<string, unknown>>(obj: O, scheduler?: SchedulerLike): Observable<[keyof O, O[keyof O]]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs<T>(iterable: Iterable<T>, scheduler?: SchedulerLike): Observable<[string, T]>;\n/**\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs(\n  n: number | bigint | boolean | ((...args: any[]) => any) | symbol,\n  scheduler?: SchedulerLike\n): Observable<[never, never]>;\n\n/**\n * Convert an object into an Observable of `[key, value]` pairs.\n *\n * <span class=\"informal\">Turn entries of an object into a stream.</span>\n *\n * ![](pairs.png)\n *\n * `pairs` takes an arbitrary object and returns an Observable that emits arrays. Each\n * emitted array has exactly two elements - the first is a key from the object\n * and the second is a value corresponding to that key. Keys are extracted from\n * an object via `Object.keys` function, which means that they will be only\n * enumerable keys that are present on an object directly - not ones inherited\n * via prototype chain.\n *\n * By default, these arrays are emitted synchronously. To change that you can\n * pass a {@link SchedulerLike} as a second argument to `pairs`.\n *\n * ## Example\n *\n * Converts an object to an Observable\n *\n * ```ts\n * import { pairs } from 'rxjs';\n *\n * const obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * pairs(obj).subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // ['foo', 42]\n * // ['bar', 56]\n * // ['baz', 78]\n * // 'Complete!'\n * ```\n *\n * ### Object.entries required\n *\n * In IE, you will need to polyfill `Object.entries` in order to use this.\n * [MDN has a polyfill here](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries)\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to schedule\n * when resulting Observable will emit values.\n * @returns {(Observable<Array<string|T>>)} An observable sequence of\n * [key, value] pairs from the object.\n * @deprecated Use `from(Object.entries(obj))` instead. Will be removed in v8.\n */\nexport function pairs(obj: any, scheduler?: SchedulerLike) {\n  return from(Object.entries(obj), scheduler as any);\n}\n", "import { not } from '../util/not';\nimport { filter } from '../operators/filter';\nimport { ObservableInput } from '../types';\nimport { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function partition<T, U extends T, A>(\n  source: ObservableInput<T>,\n  predicate: (this: A, value: T, index: number) => value is U,\n  thisArg: A\n): [Observable<U>, Observable<Exclude<T, U>>];\nexport function partition<T, U extends T>(\n  source: ObservableInput<T>,\n  predicate: (value: T, index: number) => value is U\n): [Observable<U>, Observable<Exclude<T, U>>];\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function partition<T, A>(\n  source: ObservableInput<T>,\n  predicate: (this: A, value: T, index: number) => boolean,\n  thisArg: A\n): [Observable<T>, Observable<T>];\nexport function partition<T>(source: ObservableInput<T>, predicate: (value: T, index: number) => boolean): [Observable<T>, Observable<T>];\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n *\n * Partition a set of numbers into odds and evens observables\n *\n * ```ts\n * import { of, partition } from 'rxjs';\n *\n * const observableValues = of(1, 2, 3, 4, 5, 6);\n * const [evens$, odds$] = partition(observableValues, value => value % 2 === 0);\n *\n * odds$.subscribe(x => console.log('odds', x));\n * evens$.subscribe(x => console.log('evens', x));\n *\n * // Logs:\n * // odds 1\n * // odds 3\n * // odds 5\n * // evens 2\n * // evens 4\n * // evens 6\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n */\nexport function partition<T>(\n  source: ObservableInput<T>,\n  predicate: (this: any, value: T, index: number) => boolean,\n  thisArg?: any\n): [Observable<T>, Observable<T>] {\n  return [filter(predicate, thisArg)(innerFrom(source)), filter(not(predicate, thisArg))(innerFrom(source))] as [\n    Observable<T>,\n    Observable<T>\n  ];\n}\n", "export function not<T>(pred: (value: T, index: number) => boolean, thisArg: any): (value: T, index: number) => boolean {\n  return (value: T, index: number) => !pred.call(thisArg, value, index); \n}", "import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, S extends T, A>(predicate: (this: A, value: T, index: number) => value is S, thisArg: A): OperatorFunction<T, S>;\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function filter<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function filter<T, A>(predicate: (this: A, value: T, index: number) => boolean, thisArg: A): MonoTypeOperatorFunction<T>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n *\n * Emit only click events whose target was a DIV element\n *\n * ```ts\n * import { fromEvent, filter } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param thisArg An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits items from the\n * source Observable that satisfy the specified `predicate`.\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean, thisArg?: any): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // An index passed to our predicate function on each call.\n    let index = 0;\n\n    // Subscribe to the source, all errors and completions are\n    // forwarded to the consumer.\n    source.subscribe(\n      // Call the predicate with the appropriate `this` context,\n      // if the predicate returns `true`, then send the value\n      // to the consumer.\n      createOperatorSubscriber(subscriber, (value) => predicate.call(thisArg, value, index++) && subscriber.next(value))\n    );\n  });\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, ObservableInputTuple } from '../types';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { Subscriber } from '../Subscriber';\n\nexport function race<T extends readonly unknown[]>(inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\nexport function race<T extends readonly unknown[]>(...inputs: [...ObservableInputTuple<T>]): Observable<T[number]>;\n\n/**\n * Returns an observable that mirrors the first source observable to emit an item.\n *\n * ![](race.png)\n *\n * `race` returns an observable, that when subscribed to, subscribes to all source observables immediately.\n * As soon as one of the source observables emits a value, the result unsubscribes from the other sources.\n * The resulting observable will forward all notifications, including error and completion, from the \"winning\"\n * source observable.\n *\n * If one of the used source observable throws an errors before a first notification\n * the race operator will also throw an error, no matter if another source observable\n * could potentially win the race.\n *\n * `race` can be useful for selecting the response from the fastest network connection for\n * HTTP or WebSockets. `race` can also be useful for switching observable context based on user\n * input.\n *\n * ## Example\n *\n * Subscribes to the observable that was the first to start emitting.\n *\n * ```ts\n * import { interval, map, race } from 'rxjs';\n *\n * const obs1 = interval(7000).pipe(map(() => 'slow one'));\n * const obs2 = interval(3000).pipe(map(() => 'fast one'));\n * const obs3 = interval(5000).pipe(map(() => 'medium one'));\n *\n * race(obs1, obs2, obs3)\n *   .subscribe(winner => console.log(winner));\n *\n * // Outputs\n * // a series of 'fast one'\n * ```\n *\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n */\nexport function race<T>(...sources: (ObservableInput<T> | ObservableInput<T>[])[]): Observable<any> {\n  sources = argsOrArgArray(sources);\n  // If only one source was passed, just return it. Otherwise return the race.\n  return sources.length === 1 ? innerFrom(sources[0] as ObservableInput<T>) : new Observable<T>(raceInit(sources as ObservableInput<T>[]));\n}\n\n/**\n * An observable initializer function for both the static version and the\n * operator version of race.\n * @param sources The sources to race\n */\nexport function raceInit<T>(sources: ObservableInput<T>[]) {\n  return (subscriber: Subscriber<T>) => {\n    let subscriptions: Subscription[] = [];\n\n    // Subscribe to all of the sources. Note that we are checking `subscriptions` here\n    // Is is an array of all actively \"racing\" subscriptions, and it is `null` after the\n    // race has been won. So, if we have racer that synchronously \"wins\", this loop will\n    // stop before it subscribes to any more.\n    for (let i = 0; subscriptions && !subscriber.closed && i < sources.length; i++) {\n      subscriptions.push(\n        innerFrom(sources[i] as ObservableInput<T>).subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            if (subscriptions) {\n              // We're still racing, but we won! So unsubscribe\n              // all other subscriptions that we have, except this one.\n              for (let s = 0; s < subscriptions.length; s++) {\n                s !== i && subscriptions[s].unsubscribe();\n              }\n              subscriptions = null!;\n            }\n            subscriber.next(value);\n          })\n        )\n      );\n    }\n  };\n}\n", "import { SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\nimport { EMPTY } from './empty';\n\nexport function range(start: number, count?: number): Observable<number>;\n\n/**\n * @deprecated The `scheduler` parameter will be removed in v8. Use `range(start, count).pipe(observeOn(scheduler))` instead. Details: Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function range(start: number, count: number | undefined, scheduler: SchedulerLike): Observable<number>;\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n *\n * Produce a range of numbers\n *\n * ```ts\n * import { range } from 'rxjs';\n *\n * const numbers = range(1, 3);\n *\n * numbers.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 1\n * // 2\n * // 3\n * // 'Complete!'\n * ```\n *\n * @see {@link timer}\n * @see {@link interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} count The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n */\nexport function range(start: number, count?: number, scheduler?: SchedulerLike): Observable<number> {\n  if (count == null) {\n    // If one argument was passed, it's the count, not the start.\n    count = start;\n    start = 0;\n  }\n\n  if (count <= 0) {\n    // No count? We're going nowhere. Return EMPTY.\n    return EMPTY;\n  }\n\n  // Where the range should stop.\n  const end = count + start;\n\n  return new Observable(\n    scheduler\n      ? // The deprecated scheduled path.\n        (subscriber) => {\n          let n = start;\n          return scheduler.schedule(function () {\n            if (n < end) {\n              subscriber.next(n++);\n              this.schedule();\n            } else {\n              subscriber.complete();\n            }\n          });\n        }\n      : // Standard synchronous range.\n        (subscriber) => {\n          let n = start;\n          while (n < end && !subscriber.closed) {\n            subscriber.next(n++);\n          }\n          subscriber.complete();\n        }\n  );\n}\n", "import { Observable } from '../Observable';\nimport { Unsubscribable, ObservableInput, ObservedValueOf } from '../types';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\n\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using<T extends ObservableInput<any>>(\n  resourceFactory: () => Unsubscribable | void,\n  observableFactory: (resource: Unsubscribable | void) => T | void\n): Observable<ObservedValueOf<T>> {\n  return new Observable<ObservedValueOf<T>>((subscriber) => {\n    const resource = resourceFactory();\n    const result = observableFactory(resource);\n    const source = result ? innerFrom(result) : EMPTY;\n    source.subscribe(subscriber);\n    return () => {\n      // NOTE: Optional chaining did not work here.\n      // Related TS Issue: https://github.com/microsoft/TypeScript/issues/40818\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}\n", "export {};\n//# sourceMappingURL=types.js.map", "import { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\n\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](audit.svg)\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, audit, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(audit(ev => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return A function that returns an Observable that performs rate-limiting of\n * emissions from the source Observable.\n */\nexport function audit<T>(durationSelector: (value: T) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    let durationSubscriber: Subscriber<any> | null = null;\n    let isComplete = false;\n\n    const endDuration = () => {\n      durationSubscriber?.unsubscribe();\n      durationSubscriber = null;\n      if (hasValue) {\n        hasValue = false;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n      isComplete && subscriber.complete();\n    };\n\n    const cleanupDuration = () => {\n      durationSubscriber = null;\n      isComplete && subscriber.complete();\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          lastValue = value;\n          if (!durationSubscriber) {\n            innerFrom(durationSelector(value)).subscribe(\n              (durationSubscriber = createOperatorSubscriber(subscriber, endDuration, cleanupDuration))\n            );\n          }\n        },\n        () => {\n          isComplete = true;\n          (!hasValue || !durationSubscriber || durationSubscriber.closed) && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source value, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * ![](auditTime.png)\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link SchedulerLike} for managing timers.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, auditTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(auditTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return A function that returns an Observable that performs rate-limiting of\n * emissions from the source Observable.\n */\nexport function auditTime<T>(duration: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return audit(() => timer(duration, scheduler));\n}\n", "import { OperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * ![](buffer.png)\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * `ObservableInput` (that internally gets converted to an Observable)\n * emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * ## Example\n *\n * On every click, emit array of most recent interval events\n *\n * ```ts\n * import { fromEvent, interval, buffer } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const intervalEvents = interval(1000);\n * const buffered = intervalEvents.pipe(buffer(clicks));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param closingNotifier An `ObservableInput` that signals the\n * buffer to be emitted on the output Observable.\n * @return A function that returns an Observable of buffers, which are arrays\n * of values.\n */\nexport function buffer<T>(closingNotifier: ObservableInput<any>): OperatorFunction<T, T[]> {\n  return operate((source, subscriber) => {\n    // The current buffered values.\n    let currentBuffer: T[] = [];\n\n    // Subscribe to our source.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => currentBuffer.push(value),\n        () => {\n          subscriber.next(currentBuffer);\n          subscriber.complete();\n        }\n      )\n    );\n\n    // Subscribe to the closing notifier.\n    innerFrom(closingNotifier).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          // Start a new buffer and emit the previous one.\n          const b = currentBuffer;\n          currentBuffer = [];\n          subscriber.next(b);\n        },\n        noop\n      )\n    );\n\n    return () => {\n      // Ensure buffered values are released on finalization.\n      currentBuffer = null!;\n    };\n  });\n}\n", "import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * ![](bufferWhen.svg)\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * ## Example\n *\n * Emit an array of the last clicks every [1-5] random seconds\n *\n * ```ts\n * import { fromEvent, bufferWhen, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(\n *   bufferWhen(() => interval(1000 + Math.random() * 4000))\n * );\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferWhen<T>(closingSelector: () => ObservableInput<any>): OperatorFunction<T, T[]> {\n  return operate((source, subscriber) => {\n    // The buffer we keep and emit.\n    let buffer: T[] | null = null;\n    // A reference to the subscriber used to subscribe to\n    // the closing notifier. We need to hold this so we can\n    // end the subscription after the first notification.\n    let closingSubscriber: Subscriber<T> | null = null;\n\n    // Ends the previous closing notifier subscription, so it\n    // terminates after the first emission, then emits\n    // the current buffer  if there is one, starts a new buffer, and starts a\n    // new closing notifier.\n    const openBuffer = () => {\n      // Make sure to finalize the closing subscription, we only cared\n      // about one notification.\n      closingSubscriber?.unsubscribe();\n      // emit the buffer if we have one, and start a new buffer.\n      const b = buffer;\n      buffer = [];\n      b && subscriber.next(b);\n\n      // Get a new closing notifier and subscribe to it.\n      innerFrom(closingSelector()).subscribe((closingSubscriber = createOperatorSubscriber(subscriber, openBuffer, noop)));\n    };\n\n    // Start the first buffer.\n    openBuffer();\n\n    // Subscribe to our source.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        // Add every new value to the current buffer.\n        (value) => buffer?.push(value),\n        // When we complete, emit the buffer if we have one,\n        // then complete the result.\n        () => {\n          buffer && subscriber.next(buffer);\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        // Release memory on finalization\n        () => (buffer = closingSubscriber = null!)\n      )\n    );\n  });\n}\n", "import { Observable } from '../Observable';\n\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { Subscription } from '../Subscription';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\n\n/* tslint:disable:max-line-length */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <span class=\"informal\">\n * It only listens to the error channel and ignores notifications.\n * Handles errors from the source observable, and maps them to a new observable.\n * The error may also be rethrown, or a new error can be thrown to emit an error from the result.\n * </span>\n *\n * ![](catch.png)\n *\n * This operator handles errors, but forwards along all other events to the resulting observable.\n * If the source observable terminates with an error, it will map that error to a new observable,\n * subscribe to it, and forward all of its events to the resulting observable.\n *\n * ## Examples\n *\n * Continue with a different Observable when there's an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => of('I', 'II', 'III', 'IV', 'V'))\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n * ```\n *\n * Retry the caught source Observable again in case of error, similar to `retry()` operator\n *\n * ```ts\n * import { of, map, catchError, take } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError((err, caught) => caught),\n *     take(30)\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n * ```\n *\n * Throw a new error when the source Observable throws an error\n *\n * ```ts\n * import { of, map, catchError } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5)\n *   .pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => {\n *       throw 'error in source. Details: ' + err;\n *     })\n *   )\n *   .subscribe({\n *     next: x => console.log(x),\n *     error: err => console.log(err)\n *   });\n *   // 1, 2, 3, error in source. Details: four!\n * ```\n *\n * @see {@link onErrorResumeNext}\n * @see {@link repeat}\n * @see {@link repeatWhen}\n * @see {@link retry }\n * @see {@link retryWhen}\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n * is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n * is returned by the `selector` will be used to continue the observable chain.\n * @return A function that returns an Observable that originates from either\n * the source or the Observable returned by the `selector` function.\n */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null = null;\n    let syncUnsub = false;\n    let handledResult: Observable<ObservedValueOf<O>>;\n\n    innerSub = source.subscribe(\n      createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n        handledResult = innerFrom(selector(err, catchError(selector)(source)));\n        if (innerSub) {\n          innerSub.unsubscribe();\n          innerSub = null;\n          handledResult.subscribe(subscriber);\n        } else {\n          // We don't have an innerSub yet, that means the error was synchronous\n          // because the subscribe call hasn't returned yet.\n          syncUnsub = true;\n        }\n      })\n    );\n\n    if (syncUnsub) {\n      // We have a synchronous error, we need to make sure to\n      // finalize right away. This ensures that callbacks in the `finalize` operator are called\n      // at the right time, and that finalization occurs at the expected\n      // time between the source error and the subscription to the\n      // next observable.\n      innerSub.unsubscribe();\n      innerSub = null;\n      handledResult!.subscribe(subscriber);\n    }\n  });\n}\n", "import { combineLatestAll } from './combineLatestAll';\n\n/**\n * @deprecated Renamed to {@link combineLatestAll}. Will be removed in v8.\n */\nexport const combineAll = combineLatestAll;\n", "import { combineLatest } from '../observable/combineLatest';\nimport { OperatorFunction, ObservableInput } from '../types';\nimport { joinAllInternals } from './joinAllInternals';\n\nexport function combineLatestAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function combineLatestAll<T>(): OperatorFunction<any, T[]>;\nexport function combineLatestAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function combineLatestAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\n/**\n * Flattens an Observable-of-Observables by applying {@link combineLatest} when the Observable-of-Observables completes.\n *\n * `combineLatestAll` takes an Observable of Observables, and collects all Observables from it. Once the outer Observable completes,\n * it subscribes to all collected Observables and combines their values using the {@link combineLatest} strategy, such that:\n *\n * * Every time an inner Observable emits, the output Observable emits\n * * When the returned observable emits, it emits all of the latest values by:\n *    * If a `project` function is provided, it is called with each recent value from each inner Observable in whatever order they\n *      arrived, and the result of the `project` function is what is emitted by the output Observable.\n *    * If there is no `project` function, an array of all the most recent values is emitted by the output Observable.\n *\n * ## Example\n *\n * Map two click events to a finite interval Observable, then apply `combineLatestAll`\n *\n * ```ts\n * import { fromEvent, map, interval, take, combineLatestAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(Math.random() * 2000).pipe(take(3))),\n *   take(2)\n * );\n * const result = higherOrder.pipe(combineLatestAll());\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link combineLatestWith}\n * @see {@link mergeAll}\n *\n * @param project optional function to map the most recent values from each inner Observable into a new result.\n * Takes each of the most recent values from each collected inner Observable as arguments, in order.\n * @return A function that returns an Observable that flattens Observables\n * emitted by the source Observable.\n */\nexport function combineLatestAll<R>(project?: (...values: Array<any>) => R) {\n  return joinAllInternals(combineLatest, project);\n}\n", "import { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { mergeMap } from './mergeMap';\nimport { toArray } from './toArray';\n\n/**\n * Collects all of the inner sources from source observable. Then, once the\n * source completes, joins the values using the given static.\n *\n * This is used for {@link combineLatestAll} and {@link zipAll} which both have the\n * same behavior of collecting all inner observables, then operating on them.\n *\n * @param joinFn The type of static join to apply to the sources collected\n * @param project The projection function to apply to the values, if any\n */\nexport function joinAllInternals<T, R>(joinFn: (sources: ObservableInput<T>[]) => Observable<T>, project?: (...args: any[]) => R) {\n  return pipe(\n    // Collect all inner sources into an array, and emit them when the\n    // source completes.\n    toArray() as OperatorFunction<ObservableInput<T>, ObservableInput<T>[]>,\n    // Run the join function on the collected array of inner sources.\n    mergeMap((sources) => joinFn(sources)),\n    // If a projection function was supplied, apply it to each result.\n    project ? mapOneOrManyArgs(project) : (identity as any)\n  );\n}\n", "import { reduce } from './reduce';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\nconst arrReducer = (arr: any[], value: any) => (arr.push(value), arr);\n\n/**\n * Collects all source emissions and emits them as an array when the source completes.\n *\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\n *\n * ![](toArray.png)\n *\n * `toArray` will wait until the source Observable completes before emitting\n * the array containing all emissions. When the source Observable errors no\n * array will be emitted.\n *\n * ## Example\n *\n * ```ts\n * import { interval, take, toArray } from 'rxjs';\n *\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(10),\n *   toArray()\n * );\n *\n * example.subscribe(value => console.log(value));\n *\n * // output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n * ```\n *\n * @return A function that returns an Observable that emits an array of items\n * emitted by the source Observable when source completes.\n */\nexport function toArray<T>(): OperatorFunction<T, T[]> {\n  // Because arrays are mutable, and we're mutating the array in this\n  // reducer process, we have to encapsulate the creation of the initial\n  // array within this `operate` function.\n  return operate((source, subscriber) => {\n    reduce(arrReducer, [] as T[])(source).subscribe(subscriber);\n  });\n}\n", "import { scanInternals } from './scanInternals';\nimport { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\nexport function reduce<V, A = V>(accumulator: (acc: A | V, value: V, index: number) => A): OperatorFunction<V, V | A>;\nexport function reduce<V, A>(accumulator: (acc: A, value: V, index: number) => A, seed: A): OperatorFunction<V, A>;\nexport function reduce<V, A, S = A>(accumulator: (acc: A | S, value: V, index: number) => A, seed: S): OperatorFunction<V, A>;\n\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * ![](reduce.png)\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * ## Example\n *\n * Count the number of click events that happened in 5 seconds\n *\n * ```ts\n * import { fromEvent, takeUntil, interval, map, reduce } from 'rxjs';\n *\n * const clicksInFiveSeconds = fromEvent(document, 'click')\n *   .pipe(takeUntil(interval(5000)));\n *\n * const ones = clicksInFiveSeconds.pipe(map(() => 1));\n * const seed = 0;\n * const count = ones.pipe(reduce((acc, one) => acc + one, seed));\n *\n * count.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: A, value: V, index: number): A} accumulator The accumulator function\n * called on each source value.\n * @param {A} [seed] The initial accumulation value.\n * @return A function that returns an Observable that emits a single value that\n * is the result of accumulating the values emitted by the source Observable.\n */\nexport function reduce<V, A>(accumulator: (acc: V | A, value: V, index: number) => A, seed?: any): OperatorFunction<V, V | A> {\n  return operate(scanInternals(accumulator, seed, arguments.length >= 2, false, true));\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A basic scan operation. This is used for `scan` and `reduce`.\n * @param accumulator The accumulator to use\n * @param seed The seed value for the state to accumulate\n * @param hasSeed Whether or not a seed was provided\n * @param emitOnNext Whether or not to emit the state on next\n * @param emitBeforeComplete Whether or not to emit the before completion\n */\n\nexport function scanInternals<V, A, S>(\n  accumulator: (acc: V | A | S, value: V, index: number) => A,\n  seed: S,\n  hasSeed: boolean,\n  emitOnNext: boolean,\n  emitBeforeComplete?: undefined | true\n) {\n  return (source: Observable<V>, subscriber: Subscriber<any>) => {\n    // Whether or not we have state yet. This will only be\n    // false before the first value arrives if we didn't get\n    // a seed value.\n    let hasState = hasSeed;\n    // The state that we're tracking, starting with the seed,\n    // if there is one, and then updated by the return value\n    // from the accumulator on each emission.\n    let state: any = seed;\n    // An index to pass to the accumulator function.\n    let index = 0;\n\n    // Subscribe to our source. All errors and completions are passed through.\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Always increment the index.\n          const i = index++;\n          // Set the state\n          state = hasState\n            ? // We already have state, so we can get the new state from the accumulator\n              accumulator(state, value, i)\n            : // We didn't have state yet, a seed value was not provided, so\n\n              // we set the state to the first value, and mark that we have state now\n              ((hasState = true), value);\n\n          // Maybe send it to the consumer.\n          emitOnNext && subscriber.next(state);\n        },\n        // If an onComplete was given, call it, otherwise\n        // just pass through the complete notification to the consumer.\n        emitBeforeComplete &&\n          (() => {\n            hasState && subscriber.next(state);\n            subscriber.complete();\n          })\n      )\n    );\n  };\n}\n", "import { mergeMap } from './mergeMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * ![](concatMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, concatMap, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMap(ev => interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * values from each projected inner Observable sequentially.\n */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? mergeMap(project, resultSelector, 1) : mergeMap(project, 1);\n}\n", "import { concatMap } from './concatMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link concatMap} instead: `concatMap(() => result)` */\nexport function concatMapTo<O extends ObservableInput<unknown>>(observable: O): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMapTo<O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: undefined\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function concatMapTo<T, R, O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](concatMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, concatMapTo, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMapTo(interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return A function that returns an Observable of values merged together by\n * joining the passed Observable with itself, one after the other, for each\n * value emitted from the source.\n * @deprecated Will be removed in v9. Use {@link concatMap} instead: `concatMap(() => result)`\n */\nexport function concatMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? concatMap(() => innerObservable, resultSelector) : concatMap(() => innerObservable);\n}\n", "import { OperatorFunction, ObservableInput, ObservedValueOf, SubjectLike } from '../types';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { fromSubscribable } from '../observable/fromSubscribable';\n\n/**\n * An object used to configure {@link connect} operator.\n */\nexport interface ConnectConfig<T> {\n  /**\n   * A factory function used to create the Subject through which the source\n   * is multicast. By default, this creates a {@link Subject}.\n   */\n  connector: () => SubjectLike<T>;\n}\n\n/**\n * The default configuration for `connect`.\n */\nconst DEFAULT_CONFIG: ConnectConfig<unknown> = {\n  connector: () => new Subject<unknown>(),\n};\n\n/**\n * Creates an observable by multicasting the source within a function that\n * allows the developer to define the usage of the multicast prior to connection.\n *\n * This is particularly useful if the observable source you wish to multicast could\n * be synchronous or asynchronous. This sets it apart from {@link share}, which, in the\n * case of totally synchronous sources will fail to share a single subscription with\n * multiple consumers, as by the time the subscription to the result of {@link share}\n * has returned, if the source is synchronous its internal reference count will jump from\n * 0 to 1 back to 0 and reset.\n *\n * To use `connect`, you provide a `selector` function that will give you\n * a multicast observable that is not yet connected. You then use that multicast observable\n * to create a resulting observable that, when subscribed, will set up your multicast. This is\n * generally, but not always, accomplished with {@link merge}.\n *\n * Note that using a {@link takeUntil} inside of `connect`'s `selector` _might_ mean you were looking\n * to use the {@link takeWhile} operator instead.\n *\n * When you subscribe to the result of `connect`, the `selector` function will be called. After\n * the `selector` function returns, the observable it returns will be subscribed to, _then_ the\n * multicast will be connected to the source.\n *\n * ## Example\n *\n * Sharing a totally synchronous observable\n *\n * ```ts\n * import { of, tap, connect, merge, map, filter } from 'rxjs';\n *\n * const source$ = of(1, 2, 3, 4, 5).pipe(\n *   tap({\n *     subscribe: () => console.log('subscription started'),\n *     next: n => console.log(`source emitted ${ n }`)\n *   })\n * );\n *\n * source$.pipe(\n *   // Notice in here we're merging 3 subscriptions to `shared$`.\n *   connect(shared$ => merge(\n *     shared$.pipe(map(n => `all ${ n }`)),\n *     shared$.pipe(filter(n => n % 2 === 0), map(n => `even ${ n }`)),\n *     shared$.pipe(filter(n => n % 2 === 1), map(n => `odd ${ n }`))\n *   ))\n * )\n * .subscribe(console.log);\n *\n * // Expected output: (notice only one subscription)\n * 'subscription started'\n * 'source emitted 1'\n * 'all 1'\n * 'odd 1'\n * 'source emitted 2'\n * 'all 2'\n * 'even 2'\n * 'source emitted 3'\n * 'all 3'\n * 'odd 3'\n * 'source emitted 4'\n * 'all 4'\n * 'even 4'\n * 'source emitted 5'\n * 'all 5'\n * 'odd 5'\n * ```\n *\n * @param selector A function used to set up the multicast. Gives you a multicast observable\n * that is not yet connected. With that, you're expected to create and return\n * and Observable, that when subscribed to, will utilize the multicast observable.\n * After this function is executed -- and its return value subscribed to -- the\n * operator will subscribe to the source, and the connection will be made.\n * @param config The configuration object for `connect`.\n */\nexport function connect<T, O extends ObservableInput<unknown>>(\n  selector: (shared: Observable<T>) => O,\n  config: ConnectConfig<T> = DEFAULT_CONFIG\n): OperatorFunction<T, ObservedValueOf<O>> {\n  const { connector } = config;\n  return operate((source, subscriber) => {\n    const subject = connector();\n    innerFrom(selector(fromSubscribable(subject))).subscribe(subscriber);\n    subscriber.add(source.subscribe(subject));\n  });\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscribable } from '../types';\n\n/**\n * Used to convert a subscribable to an observable.\n *\n * Currently, this is only used within internals.\n *\n * TODO: Discuss ObservableInput supporting \"Subscribable\".\n * https://github.com/ReactiveX/rxjs/issues/5909\n *\n * @param subscribable A subscribable\n */\nexport function fromSubscribable<T>(subscribable: Subscribable<T>) {\n  return new Observable((subscriber: Subscriber<T>) => subscribable.subscribe(subscriber));\n}\n", "import { OperatorFunction } from '../types';\nimport { reduce } from './reduce';\n\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * ![](count.png)\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * ## Examples\n *\n * Counts how many seconds have passed before the first click happened\n *\n * ```ts\n * import { interval, fromEvent, takeUntil, count } from 'rxjs';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const secondsBeforeClick = seconds.pipe(takeUntil(clicks));\n * const result = secondsBeforeClick.pipe(count());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Counts how many odd numbers are there between 1 and 7\n *\n * ```ts\n * import { range, count } from 'rxjs';\n *\n * const numbers = range(1, 7);\n * const result = numbers.pipe(count(i => i % 2 === 1));\n * result.subscribe(x => console.log(x));\n * // Results in:\n * // 4\n * ```\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param predicate A function that is used to analyze the value and the index and\n * determine whether or not to increment the count. Return `true` to increment the count,\n * and return `false` to keep the count the same.\n * If the predicate is not provided, every value will be counted.\n * @return A function that returns an Observable that emits one number that\n * represents the count of emissions.\n */\nexport function count<T>(predicate?: (value: T, index: number) => boolean): OperatorFunction<T, number> {\n  return reduce((total, value, i) => (!predicate || predicate(value, i) ? total + 1 : total), 0);\n}\n", "import { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Emits a notification from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * ![](debounce.svg)\n *\n * `debounce` delays notifications emitted by the source Observable, but drops previous\n * pending delayed emissions if a new notification arrives on the source Observable.\n * This operator keeps track of the most recent notification from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The notification is emitted only when the duration\n * Observable emits a next notification, and if no other notification was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * notification appears before the duration Observable emits, the previous notification will\n * not be emitted and a new duration is scheduled from `durationSelector` is scheduled.\n * If the completing event happens during the scheduled duration the last cached notification\n * is emitted before the completion event is forwarded to the output observable.\n * If the error event happens during the scheduled duration or after it only the error event is\n * forwarded to the output observable. The cache notification is not emitted in this case.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * ## Example\n *\n * Emit the most recent click after a burst of clicks\n *\n * ```ts\n * import { fromEvent, scan, debounce, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   scan(i => ++i, 1),\n *   debounce(i => interval(200 * i))\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link throttle}\n * @see {@link throttleTime}\n *\n * @param durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n */\nexport function debounce<T>(durationSelector: (value: T) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    // The subscriber/subscription for the current debounce, if there is one.\n    let durationSubscriber: Subscriber<any> | null = null;\n\n    const emit = () => {\n      // Unsubscribe any current debounce subscription we have,\n      // we only cared about the first notification from it, and we\n      // want to clean that subscription up as soon as possible.\n      durationSubscriber?.unsubscribe();\n      durationSubscriber = null;\n      if (hasValue) {\n        // We have a value! Free up memory first, then emit the value.\n        hasValue = false;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Cancel any pending debounce duration. We don't\n          // need to null it out here yet tho, because we're just going\n          // to create another one in a few lines.\n          durationSubscriber?.unsubscribe();\n          hasValue = true;\n          lastValue = value;\n          // Capture our duration subscriber, so we can unsubscribe it when we're notified\n          // and we're going to emit the value.\n          durationSubscriber = createOperatorSubscriber(subscriber, emit, noop);\n          // Subscribe to the duration.\n          innerFrom(durationSelector(value)).subscribe(durationSubscriber);\n        },\n        () => {\n          // Source completed.\n          // Emit any pending debounced values then complete\n          emit();\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer\n        undefined,\n        () => {\n          // Finalization.\n          lastValue = durationSubscriber = null;\n        }\n      )\n    );\n  });\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits a notification from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent notification from each burst of emissions.</span>\n *\n * ![](debounceTime.png)\n *\n * `debounceTime` delays notifications emitted by the source Observable, but drops\n * previous pending delayed emissions if a new notification arrives on the source\n * Observable. This operator keeps track of the most recent notification from the\n * source Observable, and emits that only when `dueTime` has passed\n * without any other notification appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous notification will be dropped\n * and will not be emitted and a new `dueTime` is scheduled.\n * If the completing event happens during `dueTime` the last cached notification\n * is emitted before the completion event is forwarded to the output observable.\n * If the error event happens during `dueTime` or after it only the error event is\n * forwarded to the output observable. The cache notification is not emitted in this case.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * notification to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link SchedulerLike} for\n * managing timers.\n *\n * ## Example\n *\n * Emit the most recent click after a burst of clicks\n *\n * ```ts\n * import { fromEvent, debounceTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounceTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link throttle}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the timeout for each value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified `dueTime`, and may drop some values\n * if they occur too frequently.\n */\nexport function debounceTime<T>(dueTime: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let activeTask: Subscription | null = null;\n    let lastValue: T | null = null;\n    let lastTime: number | null = null;\n\n    const emit = () => {\n      if (activeTask) {\n        // We have a value! Free up memory first, then emit the value.\n        activeTask.unsubscribe();\n        activeTask = null;\n        const value = lastValue!;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    };\n    function emitWhenIdle(this: SchedulerAction<unknown>) {\n      // This is called `dueTime` after the first value\n      // but we might have received new values during this window!\n\n      const targetTime = lastTime! + dueTime;\n      const now = scheduler.now();\n      if (now < targetTime) {\n        // On that case, re-schedule to the new target\n        activeTask = this.schedule(undefined, targetTime - now);\n        subscriber.add(activeTask);\n        return;\n      }\n\n      emit();\n    }\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          lastValue = value;\n          lastTime = scheduler.now();\n\n          // Only set up a task if it's not already up\n          if (!activeTask) {\n            activeTask = scheduler.schedule(emitWhenIdle, dueTime);\n            subscriber.add(activeTask);\n          }\n        },\n        () => {\n          // Source completed.\n          // Emit any pending debounced values then complete\n          emit();\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        () => {\n          // Finalization.\n          lastValue = activeTask = null;\n        }\n      )\n    );\n  });\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * ![](defaultIfEmpty.png)\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * ## Example\n *\n * If no clicks happen in 5 seconds, then emit 'no clicks'\n *\n * ```ts\n * import { fromEvent, takeUntil, interval, defaultIfEmpty } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksBeforeFive = clicks.pipe(takeUntil(interval(5000)));\n * const result = clicksBeforeFive.pipe(defaultIfEmpty('no clicks'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param defaultValue The default value used if the source\n * Observable is empty.\n * @return A function that returns an Observable that emits either the\n * specified `defaultValue` if the source Observable emits no items, or the\n * values emitted by the source Observable.\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R): OperatorFunction<T, T | R> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          subscriber.next(value);\n        },\n        () => {\n          if (!hasValue) {\n            subscriber.next(defaultValue!);\n          }\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * ![](delay.svg)\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * ## Examples\n *\n * Delay each click by one second\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(delay(1000)); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * Delay all clicks until a future date happens\n *\n * ```ts\n * import { fromEvent, delay } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const date = new Date('March 15, 2050 12:00:00'); // in the future\n * const delayedClicks = clicks.pipe(delay(date)); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delayWhen}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param {number|Date} due The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the time-shift for each item.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by the specified timeout or Date.\n */\nexport function delay<T>(due: number | Date, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  const duration = timer(due, scheduler);\n  return delayWhen(() => duration);\n}\n", "import { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { concat } from '../observable/concat';\nimport { take } from './take';\nimport { ignoreElements } from './ignoreElements';\nimport { mapTo } from './mapTo';\nimport { mergeMap } from './mergeMap';\nimport { innerFrom } from '../observable/innerFrom';\n\n/** @deprecated The `subscriptionDelay` parameter will be removed in v8. */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => ObservableInput<any>,\n  subscriptionDelay: Observable<any>\n): MonoTypeOperatorFunction<T>;\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => ObservableInput<any>): MonoTypeOperatorFunction<T>;\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * ![](delayWhen.png)\n *\n * `delayWhen` operator shifts each emitted value from the source Observable by\n * a time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the value emitted from\n * the source Observable as the first argument to the `delayDurationSelector`.\n * The `delayDurationSelector` function should return an {@link ObservableInput},\n * that is internally converted to an Observable that is called the \"duration\"\n * Observable.\n *\n * The source value is emitted on the output Observable only when the \"duration\"\n * Observable emits ({@link guide/glossary-and-semantics#next next}s) any value.\n * Upon that, the \"duration\" Observable gets unsubscribed.\n *\n * Before RxJS V7, the {@link guide/glossary-and-semantics#complete completion}\n * of the \"duration\" Observable would have been triggering the emission of the\n * source value to the output Observable, but with RxJS V7, this is not the case\n * anymore.\n *\n * Only next notifications (from the \"duration\" Observable) trigger values from\n * the source Observable to be passed to the output Observable. If the \"duration\"\n * Observable only emits the complete notification (without next), the value\n * emitted by the source Observable will never get to the output Observable - it\n * will be swallowed. If the \"duration\" Observable errors, the error will be\n * propagated to the output Observable.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * ## Example\n *\n * Delay each click by a random amount of time, between 0 and 5 seconds\n *\n * ```ts\n * import { fromEvent, delayWhen, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(\n *   delayWhen(() => interval(Math.random() * 5000))\n * );\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delay}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param delayDurationSelector A function that returns an `ObservableInput` for\n * each `value` emitted by the source Observable, which is then used to delay the\n * emission of that `value` on the output Observable until the `ObservableInput`\n * returned from this function emits a next value. When called, beside `value`,\n * this function receives a zero-based `index` of the emission order.\n * @param subscriptionDelay An Observable that triggers the subscription to the\n * source Observable once it emits any value.\n * @return A function that returns an Observable that delays the emissions of\n * the source Observable by an amount of time specified by the Observable\n * returned by `delayDurationSelector`.\n */\nexport function delayWhen<T>(\n  delayDurationSelector: (value: T, index: number) => ObservableInput<any>,\n  subscriptionDelay?: Observable<any>\n): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) =>\n      concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n  }\n\n  return mergeMap((value, index) => innerFrom(delayDurationSelector(value, index)).pipe(take(1), mapTo(value)));\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n *\n * Take the first 5 seconds of an infinite 1-second interval Observable\n *\n * ```ts\n * import { interval, take } from 'rxjs';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param count The maximum number of `next` values to emit.\n * @return A function that returns an Observable that emits only the first\n * `count` values emitted by the source Observable, or all of the values from\n * the source if the source emits fewer than `count` values.\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return count <= 0\n    ? // If we are taking no values, that's empty.\n      () => EMPTY\n    : operate((source, subscriber) => {\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Increment the number of values we have seen,\n            // then check it against the allowed count to see\n            // if we are still letting values through.\n            if (++seen <= count) {\n              subscriber.next(value);\n              // If we have met or passed our allowed count,\n              // we need to complete. We have to do <= here,\n              // because re-entrant code will increment `seen` twice.\n              if (count <= seen) {\n                subscriber.complete();\n              }\n            }\n          })\n        );\n      });\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * ![](ignoreElements.png)\n *\n * The `ignoreElements` operator suppresses all items emitted by the source Observable,\n * but allows its termination notification (either `error` or `complete`) to pass through unchanged.\n *\n * If you do not care about the items being emitted by an Observable, but you do want to be notified\n * when it completes or when it terminates with an error, you can apply the `ignoreElements` operator\n * to the Observable, which will ensure that it will never call its observers’ `next` handlers.\n *\n * ## Example\n *\n * Ignore all `next` emissions from the source\n *\n * ```ts\n * import { of, ignoreElements } from 'rxjs';\n *\n * of('you', 'talking', 'to', 'me')\n *   .pipe(ignoreElements())\n *   .subscribe({\n *     next: word => console.log(word),\n *     error: err => console.log('error:', err),\n *     complete: () => console.log('the end'),\n *   });\n *\n * // result:\n * // 'the end'\n * ```\n *\n * @return A function that returns an empty Observable that only calls\n * `complete` or `error`, based on which one is called by the source\n * Observable.\n */\nexport function ignoreElements(): OperatorFunction<unknown, never> {\n  return operate((source, subscriber) => {\n    source.subscribe(createOperatorSubscriber(subscriber, noop));\n  });\n}\n", "import { OperatorFunction } from '../types';\nimport { map } from './map';\n\n/** @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`. */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R>;\n/**\n * @deprecated Do not specify explicit type parameters. Signatures with type parameters\n * that cannot be inferred will be removed in v8. `mapTo` itself will be removed in v9,\n * use {@link map} instead: `map(() => value)`.\n * */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R>;\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * ![](mapTo.png)\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * ## Example\n *\n * Map every click to the string `'Hi'`\n *\n * ```ts\n * import { fromEvent, mapTo } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const greetings = clicks.pipe(mapTo('Hi'));\n *\n * greetings.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param value The value to map each source value to.\n * @return A function that returns an Observable that emits the given `value`\n * every time the source Observable emits.\n * @deprecated To be removed in v9. Use {@link map} instead: `map(() => value)`.\n */\nexport function mapTo<R>(value: R): OperatorFunction<unknown, R> {\n  return map(() => value);\n}\n", "import { observeNotification } from '../Notification';\nimport { OperatorFunction, ObservableNotification, ValueFromNotification } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Converts an Observable of {@link ObservableNotification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link ObservableNotification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * ![](dematerialize.png)\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link ObservableNotification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * ## Example\n *\n * Convert an Observable of Notifications to an actual Observable\n *\n * ```ts\n * import { NextNotification, ErrorNotification, of, dematerialize } from 'rxjs';\n *\n * const notifA: NextNotification<string> = { kind: 'N', value: 'A' };\n * const notifB: NextNotification<string> = { kind: 'N', value: 'B' };\n * const notifE: ErrorNotification = { kind: 'E', error: new TypeError('x.toUpperCase is not a function') };\n *\n * const materialized = of(notifA, notifB, notifE);\n *\n * const upperCase = materialized.pipe(dematerialize());\n * upperCase.subscribe({\n *   next: x => console.log(x),\n *   error: e => console.error(e)\n * });\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n * ```\n *\n * @see {@link materialize}\n *\n * @return A function that returns an Observable that emits items and\n * notifications embedded in Notification objects emitted by the source\n * Observable.\n */\nexport function dematerialize<N extends ObservableNotification<any>>(): OperatorFunction<N, ValueFromNotification<N>> {\n  return operate((source, subscriber) => {\n    source.subscribe(createOperatorSubscriber(subscriber, (notification) => observeNotification(notification, subscriber)));\n  });\n}\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a `keySelector` function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If the `keySelector` function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * ## Examples\n *\n * A simple example with numbers\n *\n * ```ts\n * import { of, distinct } from 'rxjs';\n *\n * of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .pipe(distinct())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * An example using the `keySelector` function\n *\n * ```ts\n * import { of, distinct } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo'},\n *   { age: 7, name: 'Bar'},\n *   { age: 5, name: 'Foo'}\n * )\n * .pipe(distinct(({ name }) => name))\n * .subscribe(x => console.log(x));\n *\n * // Outputs\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * ```\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param keySelector Optional `function` to select which value you want to check as distinct.\n * @param flushes Optional `ObservableInput` for flushing the internal HashSet of the operator.\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values.\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K, flushes?: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    const distinctKeys = new Set();\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const key = keySelector ? keySelector(value) : value;\n        if (!distinctKeys.has(key)) {\n          distinctKeys.add(key);\n          subscriber.next(value);\n        }\n      })\n    );\n\n    flushes && innerFrom(flushes).subscribe(createOperatorSubscriber(subscriber, () => distinctKeys.clear(), noop));\n  });\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function distinctUntilChanged<T>(comparator?: (previous: T, current: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(\n  comparator: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns a result {@link Observable} that emits all values pushed by the source observable if they\n * are distinct in comparison to the last value the result observable emitted.\n *\n * When provided without parameters or with the first parameter (`{@link distinctUntilChanged#comparator comparator}`),\n * it behaves like this:\n *\n * 1. It will always emit the first value from the source.\n * 2. For all subsequent values pushed by the source, they will be compared to the previously emitted values\n *    using the provided `comparator` or an `===` equality check.\n * 3. If the value pushed by the source is determined to be unequal by this check, that value is emitted and\n *    becomes the new \"previously emitted value\" internally.\n *\n * When the second parameter (`{@link distinctUntilChanged#keySelector keySelector}`) is provided, the behavior\n * changes:\n *\n * 1. It will always emit the first value from the source.\n * 2. The `keySelector` will be run against all values, including the first value.\n * 3. For all values after the first, the selected key will be compared against the key selected from\n *    the previously emitted value using the `comparator`.\n * 4. If the keys are determined to be unequal by this check, the value (not the key), is emitted\n *    and the selected key from that value is saved for future comparisons against other keys.\n *\n * ## Examples\n *\n * A very basic example with no `{@link distinctUntilChanged#comparator comparator}`. Note that `1` is emitted more than once,\n * because it's distinct in comparison to the _previously emitted_ value,\n * not in comparison to _all other emitted values_.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * of(1, 1, 1, 2, 2, 2, 1, 1, 3, 3)\n *   .pipe(distinctUntilChanged())\n *   .subscribe(console.log);\n * // Logs: 1, 2, 1, 3\n * ```\n *\n * With a `{@link distinctUntilChanged#comparator comparator}`, you can do custom comparisons. Let's say\n * you only want to emit a value when all of its components have\n * changed:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const totallyDifferentBuilds$ = of(\n *   { engineVersion: '1.1.0', transmissionVersion: '1.2.0' },\n *   { engineVersion: '1.1.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.4.0' },\n *   { engineVersion: '1.3.0', transmissionVersion: '1.5.0' },\n *   { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ).pipe(\n *   distinctUntilChanged((prev, curr) => {\n *     return (\n *       prev.engineVersion === curr.engineVersion ||\n *       prev.transmissionVersion === curr.transmissionVersion\n *     );\n *   })\n * );\n *\n * totallyDifferentBuilds$.subscribe(console.log);\n *\n * // Logs:\n * // { engineVersion: '1.1.0', transmissionVersion: '1.2.0' }\n * // { engineVersion: '1.3.0', transmissionVersion: '1.4.0' }\n * // { engineVersion: '2.0.0', transmissionVersion: '1.5.0' }\n * ```\n *\n * You can also provide a custom `{@link distinctUntilChanged#comparator comparator}` to check that emitted\n * changes are only in one direction. Let's say you only want to get\n * the next record temperature:\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * const temps$ = of(30, 31, 20, 34, 33, 29, 35, 20);\n *\n * const recordHighs$ = temps$.pipe(\n *   distinctUntilChanged((prevHigh, temp) => {\n *     // If the current temp is less than\n *     // or the same as the previous record,\n *     // the record hasn't changed.\n *     return temp <= prevHigh;\n *   })\n * );\n *\n * recordHighs$.subscribe(console.log);\n * // Logs: 30, 31, 34, 35\n * ```\n *\n * Selecting update events only when the `updatedBy` field shows\n * the account changed hands.\n *\n * ```ts\n * import { of, distinctUntilChanged } from 'rxjs';\n *\n * // A stream of updates to a given account\n * const accountUpdates$ = of(\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'blesh', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'ncjamieson', data: [] },\n *   { updatedBy: 'blesh', data: [] }\n * );\n *\n * // We only want the events where it changed hands\n * const changedHands$ = accountUpdates$.pipe(\n *   distinctUntilChanged(undefined, update => update.updatedBy)\n * );\n *\n * changedHands$.subscribe(console.log);\n * // Logs:\n * // { updatedBy: 'blesh', data: Array[0] }\n * // { updatedBy: 'ncjamieson', data: Array[0] }\n * // { updatedBy: 'blesh', data: Array[0] }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param comparator A function used to compare the previous and current keys for\n * equality. Defaults to a `===` check.\n * @param keySelector Used to select a key value to be passed to the `comparator`.\n *\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values.\n */\nexport function distinctUntilChanged<T, K>(\n  comparator?: (previous: K, current: K) => boolean,\n  keySelector: (value: T) => K = identity as (value: T) => K\n): MonoTypeOperatorFunction<T> {\n  // We've been allowing `null` do be passed as the `compare`, so we can't do\n  // a default value for the parameter, because that will only work\n  // for `undefined`.\n  comparator = comparator ?? defaultCompare;\n\n  return operate((source, subscriber) => {\n    // The previous key, used to compare against keys selected\n    // from new arrivals to determine \"distinctiveness\".\n    let previousKey: K;\n    // Whether or not this is the first value we've gotten.\n    let first = true;\n\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        // We always call the key selector.\n        const currentKey = keySelector(value);\n\n        // If it's the first value, we always emit it.\n        // Otherwise, we compare this key to the previous key, and\n        // if the comparer returns false, we emit.\n        if (first || !comparator!(previousKey, currentKey)) {\n          // Update our state *before* we emit the value\n          // as emission can be the source of re-entrant code\n          // in functional libraries like this. We only really\n          // need to do this if it's the first value, or if the\n          // key we're tracking in previous needs to change.\n          first = false;\n          previousKey = currentKey;\n\n          // Emit the value!\n          subscriber.next(value);\n        }\n      })\n    );\n  });\n}\n\nfunction defaultCompare(a: any, b: any) {\n  return a === b;\n}\n", "import { distinctUntilChanged } from './distinctUntilChanged';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilKeyChanged<T>(key: keyof T): MonoTypeOperatorFunction<T>;\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * ## Examples\n *\n * An example comparing the name of persons\n *\n * ```ts\n * import { of, distinctUntilKeyChanged } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo' },\n *   { age: 7, name: 'Bar' },\n *   { age: 5, name: 'Foo' },\n *   { age: 6, name: 'Foo' }\n * ).pipe(\n *   distinctUntilKeyChanged('name')\n * )\n * .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n * ```\n *\n * An example comparing the first letters of the name\n *\n * ```ts\n * import { of, distinctUntilKeyChanged } from 'rxjs';\n *\n * of(\n *   { age: 4, name: 'Foo1' },\n *   { age: 7, name: 'Bar' },\n *   { age: 5, name: 'Foo2' },\n *   { age: 6, name: 'Foo3' }\n * ).pipe(\n *   distinctUntilKeyChanged('name', (x, y) => x.substring(0, 3) === y.substring(0, 3))\n * )\n * .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return A function that returns an Observable that emits items from the\n * source Observable with distinct values based on the key specified.\n */\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare?: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T> {\n  return distinctUntilChanged((x: T, y: T) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n", "import { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * ![](elementAt.png)\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * ## Example\n *\n * Emit only the third click event\n *\n * ```ts\n * import { fromEvent, elementAt } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(elementAt(2));\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n * ```\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOfRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return A function that returns an Observable that emits a single item, if\n * it is found. Otherwise, it will emit the default value if given. If not, it\n * emits an error.\n */\nexport function elementAt<T, D = T>(index: number, defaultValue?: D): OperatorFunction<T, T | D> {\n  if (index < 0) {\n    throw new ArgumentOutOfRangeError();\n  }\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      filter((v, i) => i === index),\n      take(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new ArgumentOutOfRangeError())\n    );\n}\n", "import { EmptyError } from '../util/EmptyError';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * If the source observable completes without emitting a value, it will emit\n * an error. The error will be created at that time by the optional\n * `errorFactory` argument, otherwise, the error will be {@link EmptyError}.\n *\n * ![](throwIfEmpty.png)\n *\n * ## Example\n *\n * Throw an error if the document wasn't clicked within 1 second\n *\n * ```ts\n * import { fromEvent, takeUntil, timer, throwIfEmpty } from 'rxjs';\n *\n * const click$ = fromEvent(document, 'click');\n *\n * click$.pipe(\n *   takeUntil(timer(1000)),\n *   throwIfEmpty(() => new Error('The document was not clicked within 1 second'))\n * )\n * .subscribe({\n *   next() {\n *    console.log('The document was clicked');\n *   },\n *   error(err) {\n *     console.error(err.message);\n *   }\n * });\n * ```\n *\n * @param errorFactory A factory function called to produce the\n * error to be thrown when the source observable completes without emitting a\n * value.\n * @return A function that returns an Observable that throws an error if the\n * source Observable completed without emitting.\n */\nexport function throwIfEmpty<T>(errorFactory: () => any = defaultErrorFactory): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          hasValue = true;\n          subscriber.next(value);\n        },\n        () => (hasValue ? subscriber.complete() : subscriber.error(errorFactory()))\n      )\n    );\n  });\n}\n\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}\n", "import { Observable } from '../Observable';\nimport { Falsy, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function every<T>(predicate: BooleanConstructor): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function every<T>(\n  predicate: BooleanConstructor,\n  thisArg: any\n): OperatorFunction<T, Exclude<T, Falsy> extends never ? false : boolean>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function every<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, boolean>;\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, boolean>;\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * <span class=\"informal\">If all values pass predicate before the source completes, emits true before completion,\n * otherwise emit false, then complete.</span>\n *\n * ![](every.png)\n *\n * ## Example\n *\n * A simple example emitting true if all elements are less than 5, false otherwise\n *\n * ```ts\n * import { of, every } from 'rxjs';\n *\n * of(1, 2, 3, 4, 5, 6)\n *   .pipe(every(x => x < 5))\n *   .subscribe(x => console.log(x)); // -> false\n * ```\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return A function that returns an Observable of booleans that determines if\n * all items of the source Observable meet the condition specified.\n */\nexport function every<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          if (!predicate.call(thisArg, value, index++, source)) {\n            subscriber.next(false);\n            subscriber.complete();\n          }\n        },\n        () => {\n          subscriber.next(true);\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { exhaustAll } from './exhaustAll';\n\n/**\n * @deprecated Renamed to {@link exhaustAll}. Will be removed in v8.\n */\nexport const exhaust = exhaustAll;\n", "import { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { exhaustMap } from './exhaustMap';\nimport { identity } from '../util/identity';\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * ![](exhaustAll.svg)\n *\n * `exhaustAll` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaustAll` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * ## Example\n *\n * Run a finite timer for each click, only if there is no currently active timer\n *\n * ```ts\n * import { fromEvent, map, interval, take, exhaustAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(() => interval(1000).pipe(take(5)))\n * );\n * const result = higherOrder.pipe(exhaustAll());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return A function that returns an Observable that takes a source of\n * Observables and propagates the first Observable exclusively until it\n * completes before subscribing to the next.\n */\nexport function exhaustAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return exhaustMap(identity);\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function exhaustMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function exhaustMap<T, I, R>(\n  project: (value: T, index: number) => ObservableInput<I>,\n  resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaustAll}.</span>\n *\n * ![](exhaustMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * ## Example\n *\n * Run a finite timer for each click, only if there is no currently active timer\n *\n * ```ts\n * import { fromEvent, exhaustMap, interval, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   exhaustMap(() => interval(1000).pipe(take(5)))\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable containing projected\n * Observables of each item of the source, ignoring projected Observables that\n * start before their preceding Observable has completed.\n */\nexport function exhaustMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) =>\n      source.pipe(exhaustMap((a, i) => innerFrom(project(a, i)).pipe(map((b: any, ii: any) => resultSelector(a, b, i, ii)))));\n  }\n  return operate((source, subscriber) => {\n    let index = 0;\n    let innerSub: Subscriber<T> | null = null;\n    let isComplete = false;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (outerValue) => {\n          if (!innerSub) {\n            innerSub = createOperatorSubscriber(subscriber, undefined, () => {\n              innerSub = null;\n              isComplete && subscriber.complete();\n            });\n            innerFrom(project(outerValue, index++)).subscribe(innerSub);\n          }\n        },\n        () => {\n          isComplete = true;\n          !innerSub && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { OperatorFunction, ObservableInput, ObservedValueOf, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\n\n/* tslint:disable:max-line-length */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent?: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>>;\n/**\n * @deprecated The `scheduler` parameter will be removed in v8. If you need to schedule the inner subscription,\n * use `subscribeOn` within the projection function: `expand((value) => fn(value).pipe(subscribeOn(scheduler)))`.\n * Details: Details: https://rxjs.dev/deprecations/scheduler-argument\n */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent: number | undefined,\n  scheduler: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * ![](expand.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * ## Example\n *\n * Start emitting the powers of two on every click, at most 10 of them\n *\n * ```ts\n * import { fromEvent, map, expand, of, delay, take } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const powersOfTwo = clicks.pipe(\n *   map(() => 1),\n *   expand(x => of(2 * x).pipe(delay(1000))),\n *   take(10)\n * );\n * powersOfTwo.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each projected inner Observable.\n * @return A function that returns an Observable that emits the source values\n * and also result of applying the projection function to each value emitted on\n * the output Observable and merging the results of the Observables obtained\n * from this transformation.\n */\nexport function expand<T, O extends ObservableInput<unknown>>(\n  project: (value: T, index: number) => O,\n  concurrent = Infinity,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, ObservedValueOf<O>> {\n  concurrent = (concurrent || 0) < 1 ? Infinity : concurrent;\n  return operate((source, subscriber) =>\n    mergeInternals(\n      // General merge params\n      source,\n      subscriber,\n      project,\n      concurrent,\n\n      // onBeforeNext\n      undefined,\n\n      // Expand-specific\n      true, // Use expand path\n      scheduler // Inner subscription scheduler\n    )\n  );\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * The specified function will also be called when the subscriber explicitly unsubscribes.\n *\n * ## Examples\n *\n * Execute callback function when the observable completes\n *\n * ```ts\n * import { interval, take, finalize } from 'rxjs';\n *\n * // emit value in sequence every 1 second\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(5), //take only the first 5 values\n *   finalize(() => console.log('Sequence complete')) // Execute when the observable completes\n * );\n * const subscribe = example.subscribe(val => console.log(val));\n *\n * // results:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * // 'Sequence complete'\n * ```\n *\n * Execute callback function when the subscriber explicitly unsubscribes\n *\n * ```ts\n * import { interval, finalize, tap, noop, timer } from 'rxjs';\n *\n * const source = interval(100).pipe(\n *   finalize(() => console.log('[finalize] Called')),\n *   tap({\n *     next: () => console.log('[next] Called'),\n *     error: () => console.log('[error] Not called'),\n *     complete: () => console.log('[tap complete] Not called')\n *   })\n * );\n *\n * const sub = source.subscribe({\n *   next: x => console.log(x),\n *   error: noop,\n *   complete: () => console.log('[complete] Not called')\n * });\n *\n * timer(150).subscribe(() => sub.unsubscribe());\n *\n * // results:\n * // '[next] Called'\n * // 0\n * // '[finalize] Called'\n * ```\n *\n * @param {function} callback Function to be called when source terminates.\n * @return A function that returns an Observable that mirrors the source, but\n * will call the specified function on termination.\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    // TODO: This try/finally was only added for `useDeprecatedSynchronousErrorHandling`.\n    // REMOVE THIS WHEN THAT HOT GARBAGE IS REMOVED IN V8.\n    try {\n      source.subscribe(subscriber);\n    } finally {\n      subscriber.add(callback);\n    }\n  });\n}\n", "import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function find<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function find<T, S extends T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => value is S,\n  thisArg: A\n): OperatorFunction<T, S | undefined>;\nexport function find<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S\n): OperatorFunction<T, S | undefined>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function find<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, T | undefined>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, T | undefined>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * ![](find.png)\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found\n * (emits `undefined` instead).\n *\n * ## Example\n *\n * Find and emit the first click that happens on a DIV element\n *\n * ```ts\n * import { fromEvent, find } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(find(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits the first item that\n * matches the condition.\n */\nexport function find<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, T | undefined> {\n  return operate(createFind(predicate, thisArg, 'value'));\n}\n\nexport function createFind<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: any,\n  emit: 'value' | 'index'\n) {\n  const findIndex = emit === 'index';\n  return (source: Observable<T>, subscriber: Subscriber<any>) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          const i = index++;\n          if (predicate.call(thisArg, value, i, source)) {\n            subscriber.next(findIndex ? i : value);\n            subscriber.complete();\n          }\n        },\n        () => {\n          subscriber.next(findIndex ? -1 : undefined);\n          subscriber.complete();\n        }\n      )\n    );\n  };\n}\n", "import { Observable } from '../Observable';\nimport { Falsy, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createFind } from './find';\n\nexport function findIndex<T>(predicate: BooleanConstructor): OperatorFunction<T, T extends Falsy ? -1 : number>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function findIndex<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, number>;\nexport function findIndex<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number>;\n\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * ![](findIndex.png)\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * ## Example\n *\n * Emit the index of first click that happens on a DIV element\n *\n * ```ts\n * import { fromEvent, findIndex } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(findIndex(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits the index of the\n * first item that matches the condition.\n */\nexport function findIndex<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, number> {\n  return operate(createFind(predicate, thisArg, 'index'));\n}\n", "import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\n\nexport function first<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\nexport function first<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function first<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\nexport function first<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function first<T, S extends T, D>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue: D\n): OperatorFunction<T, S | D>;\nexport function first<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * ![](first.png)\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. Throws an error if\n * `defaultValue` was not provided and a matching element is not found.\n *\n * ## Examples\n *\n * Emit only the first click that happens on the DOM\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Emits the first click that happens on a DIV\n *\n * ```ts\n * import { fromEvent, first } from 'rxjs';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * This is how `first()` is different from {@link take}(1) which completes instead.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {D} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return A function that returns an Observable that emits the first item that\n * matches the condition.\n */\nexport function first<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n      take(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\n    );\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { ObservableInput, Observer, OperatorFunction, SubjectLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber, OperatorSubscriber } from './OperatorSubscriber';\n\nexport interface BasicGroupByOptions<K, T> {\n  element?: undefined;\n  duration?: (grouped: GroupedObservable<K, T>) => ObservableInput<any>;\n  connector?: () => SubjectLike<T>;\n}\n\nexport interface GroupByOptionsWithElement<K, E, T> {\n  element: (value: T) => E;\n  duration?: (grouped: GroupedObservable<K, E>) => ObservableInput<any>;\n  connector?: () => SubjectLike<E>;\n}\n\nexport function groupBy<T, K>(key: (value: T) => K, options: BasicGroupByOptions<K, T>): OperatorFunction<T, GroupedObservable<K, T>>;\n\nexport function groupBy<T, K, E>(\n  key: (value: T) => K,\n  options: GroupByOptionsWithElement<K, E, T>\n): OperatorFunction<T, GroupedObservable<K, E>>;\n\nexport function groupBy<T, K extends T>(\n  key: (value: T) => value is K\n): OperatorFunction<T, GroupedObservable<true, K> | GroupedObservable<false, Exclude<T, K>>>;\n\nexport function groupBy<T, K>(key: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\n\n/**\n * @deprecated use the options parameter instead.\n */\nexport function groupBy<T, K>(\n  key: (value: T) => K,\n  element: void,\n  duration: (grouped: GroupedObservable<K, T>) => Observable<any>\n): OperatorFunction<T, GroupedObservable<K, T>>;\n\n/**\n * @deprecated use the options parameter instead.\n */\nexport function groupBy<T, K, R>(\n  key: (value: T) => K,\n  element?: (value: T) => R,\n  duration?: (grouped: GroupedObservable<K, R>) => Observable<any>\n): OperatorFunction<T, GroupedObservable<K, R>>;\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * ![](groupBy.png)\n *\n * When the Observable emits an item, a key is computed for this item with the key function.\n *\n * If a {@link GroupedObservable} for this key exists, this {@link GroupedObservable} emits. Otherwise, a new\n * {@link GroupedObservable} for this key is created and emits.\n *\n * A {@link GroupedObservable} represents values belonging to the same group represented by a common key. The common\n * key is available as the `key` field of a {@link GroupedObservable} instance.\n *\n * The elements emitted by {@link GroupedObservable}s are by default the items emitted by the Observable, or elements\n * returned by the element function.\n *\n * ## Examples\n *\n * Group objects by `id` and return as array\n *\n * ```ts\n * import { of, groupBy, mergeMap, reduce } from 'rxjs';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * ).pipe(\n *   groupBy(p => p.id),\n *   mergeMap(group$ => group$.pipe(reduce((acc, cur) => [...acc, cur], [])))\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // [{ id: 1, name: 'JavaScript' }, { id: 1, name: 'TypeScript'}]\n * // [{ id: 2, name: 'Parcel' }, { id: 2, name: 'webpack'}]\n * // [{ id: 3, name: 'TSLint' }]\n * ```\n *\n * Pivot data on the `id` field\n *\n * ```ts\n * import { of, groupBy, mergeMap, reduce, map } from 'rxjs';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * ).pipe(\n *   groupBy(p => p.id, { element: p => p.name }),\n *   mergeMap(group$ => group$.pipe(reduce((acc, cur) => [...acc, cur], [`${ group$.key }`]))),\n *   map(arr => ({ id: parseInt(arr[0], 10), values: arr.slice(1) }))\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'JavaScript', 'TypeScript' ] }\n * // { id: 2, values: [ 'Parcel', 'webpack' ] }\n * // { id: 3, values: [ 'TSLint' ] }\n * ```\n *\n * @param key A function that extracts the key\n * for each item.\n * @param element A function that extracts the\n * return element for each item.\n * @param duration\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @param connector Factory function to create an\n * intermediate Subject through which grouped elements are emitted.\n * @return A function that returns an Observable that emits GroupedObservables,\n * each of which corresponds to a unique key value and each of which emits\n * those items from the source Observable that share that key value.\n *\n * @deprecated Use the options parameter instead.\n */\nexport function groupBy<T, K, R>(\n  key: (value: T) => K,\n  element?: (value: T) => R,\n  duration?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n  connector?: () => Subject<R>\n): OperatorFunction<T, GroupedObservable<K, R>>;\n\n// Impl\nexport function groupBy<T, K, R>(\n  keySelector: (value: T) => K,\n  elementOrOptions?: ((value: any) => any) | void | BasicGroupByOptions<K, T> | GroupByOptionsWithElement<K, R, T>,\n  duration?: (grouped: GroupedObservable<any, any>) => ObservableInput<any>,\n  connector?: () => SubjectLike<any>\n): OperatorFunction<T, GroupedObservable<K, R>> {\n  return operate((source, subscriber) => {\n    let element: ((value: any) => any) | void;\n    if (!elementOrOptions || typeof elementOrOptions === 'function') {\n      element = elementOrOptions as ((value: any) => any);\n    } else {\n      ({ duration, element, connector } = elementOrOptions);\n    }\n\n    // A lookup for the groups that we have so far.\n    const groups = new Map<K, SubjectLike<any>>();\n\n    // Used for notifying all groups and the subscriber in the same way.\n    const notify = (cb: (group: Observer<any>) => void) => {\n      groups.forEach(cb);\n      cb(subscriber);\n    };\n\n    // Used to handle errors from the source, AND errors that occur during the\n    // next call from the source.\n    const handleError = (err: any) => notify((consumer) => consumer.error(err));\n\n    // The number of actively subscribed groups\n    let activeGroups = 0;\n\n    // Whether or not teardown was attempted on this subscription.\n    let teardownAttempted = false;\n\n    // Capturing a reference to this, because we need a handle to it\n    // in `createGroupedObservable` below. This is what we use to\n    // subscribe to our source observable. This sometimes needs to be unsubscribed\n    // out-of-band with our `subscriber` which is the downstream subscriber, or destination,\n    // in cases where a user unsubscribes from the main resulting subscription, but\n    // still has groups from this subscription subscribed and would expect values from it\n    // Consider:  `source.pipe(groupBy(fn), take(2))`.\n    const groupBySourceSubscriber = new OperatorSubscriber(\n      subscriber,\n      (value: T) => {\n        // Because we have to notify all groups of any errors that occur in here,\n        // we have to add our own try/catch to ensure that those errors are propagated.\n        // OperatorSubscriber will only send the error to the main subscriber.\n        try {\n          const key = keySelector(value);\n\n          let group = groups.get(key);\n          if (!group) {\n            // Create our group subject\n            groups.set(key, (group = connector ? connector() : new Subject<any>()));\n\n            // Emit the grouped observable. Note that we can't do a simple `asObservable()` here,\n            // because the grouped observable has special semantics around reference counting\n            // to ensure we don't sever our connection to the source prematurely.\n            const grouped = createGroupedObservable(key, group);\n            subscriber.next(grouped);\n\n            if (duration) {\n              const durationSubscriber = createOperatorSubscriber(\n                // Providing the group here ensures that it is disposed of -- via `unsubscribe` --\n                // when the duration subscription is torn down. That is important, because then\n                // if someone holds a handle to the grouped observable and tries to subscribe to it\n                // after the connection to the source has been severed, they will get an\n                // `ObjectUnsubscribedError` and know they can't possibly get any notifications.\n                group as any,\n                () => {\n                  // Our duration notified! We can complete the group.\n                  // The group will be removed from the map in the finalization phase.\n                  group!.complete();\n                  durationSubscriber?.unsubscribe();\n                },\n                // Completions are also sent to the group, but just the group.\n                undefined,\n                // Errors on the duration subscriber are sent to the group\n                // but only the group. They are not sent to the main subscription.\n                undefined,\n                // Finalization: Remove this group from our map.\n                () => groups.delete(key)\n              );\n\n              // Start our duration notifier.\n              groupBySourceSubscriber.add(innerFrom(duration(grouped)).subscribe(durationSubscriber));\n            }\n          }\n\n          // Send the value to our group.\n          group.next(element ? element(value) : value);\n        } catch (err) {\n          handleError(err);\n        }\n      },\n      // Source completes.\n      () => notify((consumer) => consumer.complete()),\n      // Error from the source.\n      handleError,\n      // Free up memory.\n      // When the source subscription is _finally_ torn down, release the subjects and keys\n      // in our groups Map, they may be quite large and we don't want to keep them around if we\n      // don't have to.\n      () => groups.clear(),\n      () => {\n        teardownAttempted = true;\n        // We only kill our subscription to the source if we have\n        // no active groups. As stated above, consider this scenario:\n        // source$.pipe(groupBy(fn), take(2)).\n        return activeGroups === 0;\n      }\n    );\n\n    // Subscribe to the source\n    source.subscribe(groupBySourceSubscriber);\n\n    /**\n     * Creates the actual grouped observable returned.\n     * @param key The key of the group\n     * @param groupSubject The subject that fuels the group\n     */\n    function createGroupedObservable(key: K, groupSubject: SubjectLike<any>) {\n      const result: any = new Observable<T>((groupSubscriber) => {\n        activeGroups++;\n        const innerSub = groupSubject.subscribe(groupSubscriber);\n        return () => {\n          innerSub.unsubscribe();\n          // We can kill the subscription to our source if we now have no more\n          // active groups subscribed, and a finalization was already attempted on\n          // the source.\n          --activeGroups === 0 && teardownAttempted && groupBySourceSubscriber.unsubscribe();\n        };\n      });\n      result.key = key;\n      return result;\n    }\n  });\n}\n\n/**\n * An observable of values that is the emitted by the result of a {@link groupBy} operator,\n * contains a `key` property for the grouping.\n */\nexport interface GroupedObservable<K, T> extends Observable<T> {\n  /**\n   * The key value for the grouped notifications.\n   */\n  readonly key: K;\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits `false` if the input Observable emits any values, or emits `true` if the\n * input Observable completes without emitting any values.\n *\n * <span class=\"informal\">Tells whether any values are emitted by an Observable.</span>\n *\n * ![](isEmpty.png)\n *\n * `isEmpty` transforms an Observable that emits values into an Observable that\n * emits a single boolean value representing whether or not any values were\n * emitted by the source Observable. As soon as the source Observable emits a\n * value, `isEmpty` will emit a `false` and complete.  If the source Observable\n * completes having not emitted anything, `isEmpty` will emit a `true` and\n * complete.\n *\n * A similar effect could be achieved with {@link count}, but `isEmpty` can emit\n * a `false` value sooner.\n *\n * ## Examples\n *\n * Emit `false` for a non-empty Observable\n *\n * ```ts\n * import { Subject, isEmpty } from 'rxjs';\n *\n * const source = new Subject<string>();\n * const result = source.pipe(isEmpty());\n *\n * source.subscribe(x => console.log(x));\n * result.subscribe(x => console.log(x));\n *\n * source.next('a');\n * source.next('b');\n * source.next('c');\n * source.complete();\n *\n * // Outputs\n * // 'a'\n * // false\n * // 'b'\n * // 'c'\n * ```\n *\n * Emit `true` for an empty Observable\n *\n * ```ts\n * import { EMPTY, isEmpty } from 'rxjs';\n *\n * const result = EMPTY.pipe(isEmpty());\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // true\n * ```\n *\n * @see {@link count}\n * @see {@link EMPTY}\n *\n * @return A function that returns an Observable that emits boolean value\n * indicating whether the source Observable was empty or not.\n */\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          subscriber.next(false);\n          subscriber.complete();\n        },\n        () => {\n          subscriber.next(true);\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction, TruthyTypesOf } from '../types';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\n\nexport function last<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function last<T, D>(predicate: BooleanConstructor, defaultValue: D): OperatorFunction<T, TruthyTypesOf<T> | D>;\nexport function last<T, D = T>(predicate?: null, defaultValue?: D): OperatorFunction<T, T | D>;\nexport function last<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function last<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * ![](last.png)\n *\n * It will throw an error if the source completes without notification or one that matches the predicate. It\n * returns the last value or if a predicate is provided last value that matches the predicate. It returns the\n * given default value if no notification is emitted or matches the predicate.\n *\n * ## Examples\n *\n * Last alphabet from the sequence\n *\n * ```ts\n * import { from, last } from 'rxjs';\n *\n * const source = from(['x', 'y', 'z']);\n * const result = source.pipe(last());\n *\n * result.subscribe(value => console.log(`Last alphabet: ${ value }`));\n *\n * // Outputs\n * // Last alphabet: z\n * ```\n *\n * Default value when the value in the predicate is not matched\n *\n * ```ts\n * import { from, last } from 'rxjs';\n *\n * const source = from(['x', 'y', 'z']);\n * const result = source.pipe(last(char => char === 'a', 'not found'));\n *\n * result.subscribe(value => console.log(`'a' is ${ value }.`));\n *\n * // Outputs\n * // 'a' is not found.\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n * @see {@link skipWhile}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\n * @param {any} [defaultValue] - An optional default value to provide if last\n * predicate isn't met or no values were emitted.\n * @return A function that returns an Observable that emits only the last item\n * satisfying the given condition from the source, or a NoSuchElementException\n * if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n */\nexport function last<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) =>\n    source.pipe(\n      predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n      takeLast(1),\n      hasDefaultValue ? defaultIfEmpty(defaultValue!) : throwIfEmpty(() => new EmptyError())\n    );\n}\n", "import { Notification } from '../Notification';\nimport { OperatorFunction, ObservableNotification } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * ![](materialize.png)\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * ## Example\n *\n * Convert a faulty Observable to an Observable of Notifications\n *\n * ```ts\n * import { of, materialize, map } from 'rxjs';\n *\n * const letters = of('a', 'b', 13, 'd');\n * const upperCase = letters.pipe(map((x: any) => x.toUpperCase()));\n * const materialized = upperCase.pipe(materialize());\n *\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification { kind: 'N', value: 'A', error: undefined, hasValue: true }\n * // - Notification { kind: 'N', value: 'B', error: undefined, hasValue: true }\n * // - Notification { kind: 'E', value: undefined, error: TypeError { message: x.toUpperCase is not a function }, hasValue: false }\n * ```\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return A function that returns an Observable that emits\n * {@link Notification} objects that wrap the original emissions from the\n * source Observable with metadata.\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T> & ObservableNotification<T>> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          subscriber.next(Notification.createNext(value));\n        },\n        () => {\n          subscriber.next(Notification.createComplete());\n          subscriber.complete();\n        },\n        (err) => {\n          subscriber.next(Notification.createError(err));\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * ![](max.png)\n *\n * ## Examples\n *\n * Get the maximal value of a series of numbers\n *\n * ```ts\n * import { of, max } from 'rxjs';\n *\n * of(5, 4, 7, 2, 8)\n *   .pipe(max())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 8\n * ```\n *\n * Use a comparer function to get the maximal item\n *\n * ```ts\n * import { of, max } from 'rxjs';\n *\n * of(\n *   { age: 7, name: 'Foo' },\n *   { age: 5, name: 'Bar' },\n *   { age: 9, name: 'Beer' }\n * ).pipe(\n *   max((a, b) => a.age < b.age ? -1 : 1)\n * )\n * .subscribe(x => console.log(x.name));\n *\n * // Outputs\n * // 'Beer'\n * ```\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return A function that returns an Observable that emits item with the\n * largest value.\n */\nexport function max<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  return reduce(isFunction(comparer) ? (x, y) => (comparer(x, y) > 0 ? x : y) : (x, y) => (x > y ? x : y));\n}\n", "import { mergeMap } from './mergeMap';\n\n/**\n * @deprecated Renamed to {@link mergeMap}. Will be removed in v8.\n */\nexport const flatMap = mergeMap;\n", "import { OperatorFunction, ObservedValueOf, ObservableInput } from '../types';\nimport { mergeMap } from './mergeMap';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link mergeMap} instead: `mergeMap(() => result)` */\nexport function mergeMapTo<O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  concurrent?: number\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/**\n * @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead.\n * Details: https://rxjs.dev/deprecations/resultSelector\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n  concurrent?: number\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * ![](mergeMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * ## Example\n *\n * For each click event, start an interval Observable ticking every 1 second\n *\n * ```ts\n * import { fromEvent, mergeMapTo, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(mergeMapTo(interval(1000)));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {number} [concurrent=Infinity] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return A function that returns an Observable that emits items from the\n * given `innerObservable`.\n * @deprecated Will be removed in v9. Use {@link mergeMap} instead: `mergeMap(() => result)`\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Infinity\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  if (isFunction(resultSelector)) {\n    return mergeMap(() => innerObservable, resultSelector, concurrent);\n  }\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return mergeMap(() => innerObservable, concurrent);\n}\n", "import { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * The first parameter of the `mergeScan` is an `accumulator` function which is\n * being called every time the source Observable emits a value. `mergeScan` will\n * subscribe to the value returned by the `accumulator` function and will emit\n * values to the subscriber emitted by inner Observable.\n *\n * The `accumulator` function is being called with three parameters passed to it:\n * `acc`, `value` and `index`. The `acc` parameter is used as the state parameter\n * whose value is initially set to the `seed` parameter (the second parameter\n * passed to the `mergeScan` operator).\n *\n * `mergeScan` internally keeps the value of the `acc` parameter: as long as the\n * source Observable emits without inner Observable emitting, the `acc` will be\n * set to `seed`. The next time the inner Observable emits a value, `mergeScan`\n * will internally remember it and it will be passed to the `accumulator`\n * function as `acc` parameter the next time source emits.\n *\n * The `value` parameter of the `accumulator` function is the value emitted by the\n * source Observable, while the `index` is a number which represent the order of the\n * current emission by the source Observable. It starts with 0.\n *\n * The last parameter to the `mergeScan` is the `concurrent` value which defaults\n * to Infinity. It represents the maximum number of inner Observable subscriptions\n * at a time.\n *\n * ## Example\n *\n * Count the number of click events\n *\n * ```ts\n * import { fromEvent, map, mergeScan, of } from 'rxjs';\n *\n * const click$ = fromEvent(document, 'click');\n * const one$ = click$.pipe(map(() => 1));\n * const seed = 0;\n * const count$ = one$.pipe(\n *   mergeScan((acc, one) => of(acc + one), seed)\n * );\n *\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * // 1\n * // 2\n * // 3\n * // 4\n * // ...and so on for each click\n * ```\n *\n * @see {@link scan}\n * @see {@link switchScan}\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Infinity] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return A function that returns an Observable of the accumulated values.\n */\nexport function mergeScan<T, R>(\n  accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n  seed: R,\n  concurrent = Infinity\n): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The accumulated state.\n    let state = seed;\n\n    return mergeInternals(\n      source,\n      subscriber,\n      (value, index) => accumulator(state, value, index),\n      concurrent,\n      (value) => {\n        state = value;\n      },\n      false,\n      undefined,\n      () => (state = null!)\n    );\n  });\n}\n", "import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * ![](min.png)\n *\n * ## Examples\n *\n * Get the minimal value of a series of numbers\n *\n * ```ts\n * import { of, min } from 'rxjs';\n *\n * of(5, 4, 7, 2, 8)\n *   .pipe(min())\n *   .subscribe(x => console.log(x));\n *\n * // Outputs\n * // 2\n * ```\n *\n * Use a comparer function to get the minimal item\n *\n * ```ts\n * import { of, min } from 'rxjs';\n *\n * of(\n *   { age: 7, name: 'Foo' },\n *   { age: 5, name: 'Bar' },\n *   { age: 9, name: 'Beer' }\n * ).pipe(\n *   min((a, b) => a.age < b.age ? -1 : 1)\n * )\n * .subscribe(x => console.log(x.name));\n *\n * // Outputs\n * // 'Bar'\n * ```\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return A function that returns an Observable that emits item with the\n * smallest value.\n */\nexport function min<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  return reduce(isFunction(comparer) ? (x, y) => (comparer(x, y) < 0 ? x : y) : (x, y) => (x < y ? x : y));\n}\n", "import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { OperatorFunction, UnaryFunction, ObservedValueOf, ObservableInput } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { connect } from './connect';\n\n/**\n * An operator that creates a {@link ConnectableObservable}, that when connected,\n * with the `connect` method, will use the provided subject to multicast the values\n * from the source to all consumers.\n *\n * @param subject The subject to multicast through.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * If you're using {@link refCount} after `multicast`, use the {@link share} operator instead.\n * `multicast(subject), refCount()` is equivalent to\n * `share({ connector: () => subject, resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T>(subject: Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Because this is deprecated in favor of the {@link connect} operator, and was otherwise poorly documented,\n * rather than duplicate the effort of documenting the same behavior, please see documentation for the\n * {@link connect} operator.\n *\n * @param subject The subject used to multicast.\n * @param selector A setup function to setup the multicast\n * @return A function that returns an observable that mirrors the observable returned by the selector.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `multicast(subject, selector)` is equivalent to\n * `connect(selector, { connector: () => subject })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, O extends ObservableInput<any>>(\n  subject: Subject<T>,\n  selector: (shared: Observable<T>) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * An operator that creates a {@link ConnectableObservable}, that when connected,\n * with the `connect` method, will use the provided subject to multicast the values\n * from the source to all consumers.\n *\n * @param subjectFactory A factory that will be called to create the subject. Passing a function here\n * will cause the underlying subject to be \"reset\" on error, completion, or refCounted unsubscription of\n * the source.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * If you're using {@link refCount} after `multicast`, use the {@link share} operator instead.\n * `multicast(() => new BehaviorSubject('test')), refCount()` is equivalent to\n * `share({ connector: () => new BehaviorSubject('test') })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T>(subjectFactory: () => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Because this is deprecated in favor of the {@link connect} operator, and was otherwise poorly documented,\n * rather than duplicate the effort of documenting the same behavior, please see documentation for the\n * {@link connect} operator.\n *\n * @param subjectFactory A factory that creates the subject used to multicast.\n * @param selector A function to setup the multicast and select the output.\n * @return A function that returns an observable that mirrors the observable returned by the selector.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `multicast(subjectFactory, selector)` is equivalent to\n * `connect(selector, { connector: subjectFactory })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, O extends ObservableInput<any>>(\n  subjectFactory: () => Subject<T>,\n  selector: (shared: Observable<T>) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function multicast<T, R>(\n  subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n  selector?: (source: Observable<T>) => Observable<R>\n): OperatorFunction<T, R> {\n  const subjectFactory = isFunction(subjectOrSubjectFactory) ? subjectOrSubjectFactory : () => subjectOrSubjectFactory;\n\n  if (isFunction(selector)) {\n    // If a selector function is provided, then we're a \"normal\" operator that isn't\n    // going to return a ConnectableObservable. We can use `connect` to do what we\n    // need to do.\n    return connect(selector, {\n      connector: subjectFactory,\n    });\n  }\n\n  return (source: Observable<T>) => new ConnectableObservable<any>(source, subjectFactory);\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * ![](pairwise.png)\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * ## Example\n *\n * On every click (starting from the second), emit the relative distance to the previous click\n *\n * ```ts\n * import { fromEvent, pairwise, map } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const pairs = clicks.pipe(pairwise());\n * const distance = pairs.pipe(\n *   map(([first, second]) => {\n *     const x0 = first.clientX;\n *     const y0 = first.clientY;\n *     const x1 = second.clientX;\n *     const y1 = second.clientY;\n *     return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n *   })\n * );\n *\n * distance.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return A function that returns an Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return operate((source, subscriber) => {\n    let prev: T;\n    let hasPrev = false;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const p = prev;\n        prev = value;\n        hasPrev && subscriber.next([p, value]);\n        hasPrev = true;\n      })\n    );\n  });\n}\n", "import { map } from './map';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T>(k1: K1): OperatorFunction<T, T[K1]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1]>(k1: K1, k2: K2): OperatorFunction<T, T[K1][K2]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2]>(\n  k1: K1,\n  k2: K2,\n  k3: K3\n): OperatorFunction<T, T[K1][K2][K3]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3]>(\n  k1: K1,\n  k2: K2,\n  k3: K3,\n  k4: K4\n): OperatorFunction<T, T[K1][K2][K3][K4]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5): OperatorFunction<T, T[K1][K2][K3][K4][K5]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6): OperatorFunction<T, T[K1][K2][K3][K4][K5][K6]>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<\n  T,\n  K1 extends keyof T,\n  K2 extends keyof T[K1],\n  K3 extends keyof T[K1][K2],\n  K4 extends keyof T[K1][K2][K3],\n  K5 extends keyof T[K1][K2][K3][K4],\n  K6 extends keyof T[K1][K2][K3][K4][K5]\n>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6, ...rest: string[]): OperatorFunction<T, unknown>;\n/** @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8. */\nexport function pluck<T>(...properties: string[]): OperatorFunction<T, unknown>;\n/* tslint:enable:max-line-length */\n\n/**\n * Maps each source value to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted value.</span>\n *\n * ![](pluck.png)\n *\n * Given a list of strings or numbers describing a path to a property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * ## Example\n *\n * Map every click to the tagName of the clicked target element\n *\n * ```ts\n * import { fromEvent, pluck } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const tagNames = clicks.pipe(pluck('target', 'tagName'));\n *\n * tagNames.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param properties The nested properties to pluck from each source\n * value.\n * @return A function that returns an Observable of property values from the\n * source values.\n * @deprecated Use {@link map} and optional chaining: `pluck('foo', 'bar')` is `map(x => x?.foo?.bar)`. Will be removed in v8.\n */\nexport function pluck<T, R>(...properties: Array<string | number | symbol>): OperatorFunction<T, R> {\n  const length = properties.length;\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n  return map((x) => {\n    let currentProp: any = x;\n    for (let i = 0; i < length; i++) {\n      const p = currentProp?.[properties[i]];\n      if (typeof p !== 'undefined') {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n    return currentProp;\n  });\n}\n", "import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { connect } from './connect';\n\n/**\n * Returns a connectable observable that, when connected, will multicast\n * all values through a single underlying {@link Subject} instance.\n *\n * @deprecated Will be removed in v8. To create a connectable observable, use {@link connectable}.\n * `source.pipe(publish())` is equivalent to\n * `connectable(source, { connector: () => new Subject(), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publish`, use {@link share} operator instead.\n * `source.pipe(publish(), refCount())` is equivalent to\n * `source.pipe(share({ resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\n\n/**\n * Returns an observable, that when subscribed to, creates an underlying {@link Subject},\n * provides an observable view of it to a `selector` function, takes the observable result of\n * that selector function and subscribes to it, sending its values to the consumer, _then_ connects\n * the subject to the original source.\n *\n * @param selector A function used to setup multicasting prior to automatic connection.\n *\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `publish(selector)` is equivalent to `connect(selector)`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T, O extends ObservableInput<any>>(selector: (shared: Observable<T>) => O): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <span class=\"informal\">Makes a cold Observable hot</span>\n *\n * ![](publish.png)\n *\n * ## Examples\n *\n * Make `source$` hot by applying `publish` operator, then merge each inner observable into a single one\n * and subscribe\n *\n * ```ts\n * import { zip, interval, of, map, publish, merge, tap } from 'rxjs';\n *\n * const source$ = zip(interval(2000), of(1, 2, 3, 4, 5, 6, 7, 8, 9))\n *   .pipe(map(([, number]) => number));\n *\n * source$\n *   .pipe(\n *     publish(multicasted$ =>\n *       merge(\n *         multicasted$.pipe(tap(x => console.log('Stream 1:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 2:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 3:', x)))\n *       )\n *     )\n *   )\n *   .subscribe();\n *\n * // Results every two seconds\n * // Stream 1: 1\n * // Stream 2: 1\n * // Stream 3: 1\n * // ...\n * // Stream 1: 9\n * // Stream 2: 9\n * // Stream 3: 9\n * ```\n *\n * @see {@link publishLast}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A function that returns a ConnectableObservable that upon connection\n * causes the source Observable to emit items to its Observers.\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publish<T, R>(selector?: OperatorFunction<T, R>): MonoTypeOperatorFunction<T> | OperatorFunction<T, R> {\n  return selector ? (source) => connect(selector)(source) : (source) => multicast(new Subject<T>())(source);\n}\n", "import { Observable } from '../Observable';\nimport { BehaviorSubject } from '../BehaviorSubject';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Creates a {@link ConnectableObservable} that utilizes a {@link BehaviorSubject}.\n *\n * @param initialValue The initial value passed to the {@link BehaviorSubject}.\n * @return A function that returns a {@link ConnectableObservable}\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link BehaviorSubject} under the hood, use {@link connectable}.\n * `source.pipe(publishBehavior(initValue))` is equivalent to\n * `connectable(source, { connector: () => new BehaviorSubject(initValue), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishBehavior`, use the {@link share} operator instead.\n * `source.pipe(publishBehavior(initValue), refCount())` is equivalent to\n * `source.pipe(share({ connector: () => new BehaviorSubject(initValue), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false  }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishBehavior<T>(initialValue: T): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  // Note that this has *never* supported the selector function.\n  return (source) => {\n    const subject = new BehaviorSubject<T>(initialValue);\n    return new ConnectableObservable(source, () => subject);\n  };\n}\n", "import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Returns a connectable observable sequence that shares a single subscription to the\n * underlying sequence containing only the last notification.\n *\n * ![](publishLast.png)\n *\n * Similar to {@link publish}, but it waits until the source observable completes and stores\n * the last emitted value.\n * Similarly to {@link publishReplay} and {@link publishBehavior}, this keeps storing the last\n * value even if it has no more subscribers. If subsequent subscriptions happen, they will\n * immediately get that last stored value and complete.\n *\n * ## Example\n *\n * ```ts\n * import { ConnectableObservable, interval, publishLast, tap, take } from 'rxjs';\n *\n * const connectable = <ConnectableObservable<number>>interval(1000)\n *   .pipe(\n *     tap(x => console.log('side effect', x)),\n *     take(3),\n *     publishLast()\n *   );\n *\n * connectable.subscribe({\n *   next: x => console.log('Sub. A', x),\n *   error: err => console.log('Sub. A Error', err),\n *   complete: () => console.log('Sub. A Complete')\n * });\n *\n * connectable.subscribe({\n *   next: x => console.log('Sub. B', x),\n *   error: err => console.log('Sub. B Error', err),\n *   complete: () => console.log('Sub. B Complete')\n * });\n *\n * connectable.connect();\n *\n * // Results:\n * // 'side effect 0'   - after one second\n * // 'side effect 1'   - after two seconds\n * // 'side effect 2'   - after three seconds\n * // 'Sub. A 2'        - immediately after 'side effect 2'\n * // 'Sub. B 2'\n * // 'Sub. A Complete'\n * // 'Sub. B Complete'\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link publish}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @return A function that returns an Observable that emits elements of a\n * sequence produced by multicasting the source sequence.\n * @deprecated Will be removed in v8. To create a connectable observable with an\n * {@link AsyncSubject} under the hood, use {@link connectable}.\n * `source.pipe(publishLast())` is equivalent to\n * `connectable(source, { connector: () => new AsyncSubject(), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishLast`, use the {@link share} operator instead.\n * `source.pipe(publishLast(), refCount())` is equivalent to\n * `source.pipe(share({ connector: () => new AsyncSubject(), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishLast<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  // Note that this has *never* supported a selector function like `publish` and `publishReplay`.\n  return (source) => {\n    const subject = new AsyncSubject<T>();\n    return new ConnectableObservable(source, () => subject);\n  };\n}\n", "import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\nimport { MonoTypeOperatorFunction, OperatorFunction, TimestampProvider, ObservableInput, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/**\n * Creates a {@link ConnectableObservable} that uses a {@link ReplaySubject}\n * internally.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link ReplaySubject} under the hood, use {@link connectable}.\n * `source.pipe(publishReplay(size, time, scheduler))` is equivalent to\n * `connectable(source, { connector: () => new ReplaySubject(size, time, scheduler), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishReplay`, use the {@link share} operator instead.\n * `publishReplay(size, time, scheduler), refCount()` is equivalent to\n * `share({ connector: () => new ReplaySubject(size, time, scheduler), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T>(\n  bufferSize?: number,\n  windowTime?: number,\n  timestampProvider?: TimestampProvider\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Creates an observable, that when subscribed to, will create a {@link ReplaySubject},\n * and pass an observable from it (using [asObservable](api/index/class/Subject#asObservable)) to\n * the `selector` function, which then returns an observable that is subscribed to before\n * \"connecting\" the source to the internal `ReplaySubject`.\n *\n * Since this is deprecated, for additional details see the documentation for {@link connect}.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param selector A function used to setup the multicast.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. Use the {@link connect} operator instead.\n * `source.pipe(publishReplay(size, window, selector, scheduler))` is equivalent to\n * `source.pipe(connect(selector, { connector: () => new ReplaySubject(size, window, scheduler) }))`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, O extends ObservableInput<any>>(\n  bufferSize: number | undefined,\n  windowTime: number | undefined,\n  selector: (shared: Observable<T>) => O,\n  timestampProvider?: TimestampProvider\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * Creates a {@link ConnectableObservable} that uses a {@link ReplaySubject}\n * internally.\n *\n * @param bufferSize The buffer size for the underlying {@link ReplaySubject}.\n * @param windowTime The window time for the underlying {@link ReplaySubject}.\n * @param selector Passing `undefined` here determines that this operator will return a {@link ConnectableObservable}.\n * @param timestampProvider The timestamp provider for the underlying {@link ReplaySubject}.\n * @deprecated Will be removed in v8. To create a connectable observable that uses a\n * {@link ReplaySubject} under the hood, use {@link connectable}.\n * `source.pipe(publishReplay(size, time, scheduler))` is equivalent to\n * `connectable(source, { connector: () => new ReplaySubject(size, time, scheduler), resetOnDisconnect: false })`.\n * If you're using {@link refCount} after `publishReplay`, use the {@link share} operator instead.\n * `publishReplay(size, time, scheduler), refCount()` is equivalent to\n * `share({ connector: () => new ReplaySubject(size, time, scheduler), resetOnError: false, resetOnComplete: false, resetOnRefCountZero: false })`.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, O extends ObservableInput<any>>(\n  bufferSize: number | undefined,\n  windowTime: number | undefined,\n  selector: undefined,\n  timestampProvider: TimestampProvider\n): OperatorFunction<T, ObservedValueOf<O>>;\n\n/**\n * @deprecated Will be removed in v8. Use the {@link connectable} observable, the {@link connect} operator or the\n * {@link share} operator instead. See the overloads below for equivalent replacement examples of this operator's\n * behaviors.\n * Details: https://rxjs.dev/deprecations/multicasting\n */\nexport function publishReplay<T, R>(\n  bufferSize?: number,\n  windowTime?: number,\n  selectorOrScheduler?: TimestampProvider | OperatorFunction<T, R>,\n  timestampProvider?: TimestampProvider\n) {\n  if (selectorOrScheduler && !isFunction(selectorOrScheduler)) {\n    timestampProvider = selectorOrScheduler;\n  }\n  const selector = isFunction(selectorOrScheduler) ? selectorOrScheduler : undefined;\n  // Note, we're passing `selector!` here, because at runtime, `undefined` is an acceptable argument\n  // but it makes our TypeScript signature for `multicast` unhappy (as it should, because it's gross).\n  return (source: Observable<T>) => multicast(new ReplaySubject<T>(bufferSize, windowTime, timestampProvider), selector!)(source);\n}\n", "import { Subscription } from '../Subscription';\nimport { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { timer } from '../observable/timer';\n\nexport interface RepeatConfig {\n  /**\n   * The number of times to repeat the source. Defaults to `Infinity`.\n   */\n  count?: number;\n\n  /**\n   * If a `number`, will delay the repeat of the source by that number of milliseconds.\n   * If a function, it will provide the number of times the source has been subscribed to,\n   * and the return value should be a valid observable input that will notify when the source\n   * should be repeated. If the notifier observable is empty, the result will complete.\n   */\n  delay?: number | ((count: number) => ObservableInput<any>);\n}\n\n/**\n * Returns an Observable that will resubscribe to the source stream when the source stream completes.\n *\n * <span class=\"informal\">Repeats all values emitted on the source. It's like {@link retry}, but for non error cases.</span>\n *\n * ![](repeat.png)\n *\n * Repeat will output values from a source until the source completes, then it will resubscribe to the\n * source a specified number of times, with a specified delay. Repeat can be particularly useful in\n * combination with closing operators like {@link take}, {@link takeUntil}, {@link first}, or {@link takeWhile},\n * as it can be used to restart a source again from scratch.\n *\n * Repeat is very similar to {@link retry}, where {@link retry} will resubscribe to the source in the error case, but\n * `repeat` will resubscribe if the source completes.\n *\n * Note that `repeat` will _not_ catch errors. Use {@link retry} for that.\n *\n * - `repeat(0)` returns an empty observable\n * - `repeat()` will repeat forever\n * - `repeat({ delay: 200 })` will repeat forever, with a delay of 200ms between repetitions.\n * - `repeat({ count: 2, delay: 400 })` will repeat twice, with a delay of 400ms between repetitions.\n * - `repeat({ delay: (count) => timer(count * 1000) })` will repeat forever, but will have a delay that grows by one second for each repetition.\n *\n * ## Example\n *\n * Repeat a message stream\n *\n * ```ts\n * import { of, repeat } from 'rxjs';\n *\n * const source = of('Repeat message');\n * const result = source.pipe(repeat(3));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results\n * // 'Repeat message'\n * // 'Repeat message'\n * // 'Repeat message'\n * ```\n *\n * Repeat 3 values, 2 times\n *\n * ```ts\n * import { interval, take, repeat } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(take(3), repeat(2));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Results every second\n * // 0\n * // 1\n * // 2\n * // 0\n * // 1\n * // 2\n * ```\n *\n * Defining two complex repeats with delays on the same source.\n * Note that the second repeat cannot be called until the first\n * repeat as exhausted it's count.\n *\n * ```ts\n * import { defer, of, repeat } from 'rxjs';\n *\n * const source = defer(() => {\n *    return of(`Hello, it is ${new Date()}`)\n * });\n *\n * source.pipe(\n *    // Repeat 3 times with a delay of 1 second between repetitions\n *    repeat({\n *      count: 3,\n *      delay: 1000,\n *    }),\n *\n *    // *Then* repeat forever, but with an exponential step-back\n *    // maxing out at 1 minute.\n *    repeat({\n *      delay: (count) => timer(Math.min(60000, 2 ^ count * 1000))\n *    })\n * )\n * ```\n *\n * @see {@link repeatWhen}\n * @see {@link retry}\n *\n * @param count The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n */\nexport function repeat<T>(countOrConfig?: number | RepeatConfig): MonoTypeOperatorFunction<T> {\n  let count = Infinity;\n  let delay: RepeatConfig['delay'];\n\n  if (countOrConfig != null) {\n    if (typeof countOrConfig === 'object') {\n      ({ count = Infinity, delay } = countOrConfig);\n    } else {\n      count = countOrConfig;\n    }\n  }\n\n  return count <= 0\n    ? () => EMPTY\n    : operate((source, subscriber) => {\n        let soFar = 0;\n        let sourceSub: Subscription | null;\n\n        const resubscribe = () => {\n          sourceSub?.unsubscribe();\n          sourceSub = null;\n          if (delay != null) {\n            const notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(soFar));\n            const notifierSubscriber = createOperatorSubscriber(subscriber, () => {\n              notifierSubscriber.unsubscribe();\n              subscribeToSource();\n            });\n            notifier.subscribe(notifierSubscriber);\n          } else {\n            subscribeToSource();\n          }\n        };\n\n        const subscribeToSource = () => {\n          let syncUnsub = false;\n          sourceSub = source.subscribe(\n            createOperatorSubscriber(subscriber, undefined, () => {\n              if (++soFar < count) {\n                if (sourceSub) {\n                  resubscribe();\n                } else {\n                  syncUnsub = true;\n                }\n              } else {\n                subscriber.complete();\n              }\n            })\n          );\n\n          if (syncUnsub) {\n            resubscribe();\n          }\n        };\n\n        subscribeToSource();\n      });\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * ![](repeatWhen.png)\n *\n * ## Example\n *\n * Repeat a message stream on click\n *\n * ```ts\n * import { of, fromEvent, repeatWhen } from 'rxjs';\n *\n * const source = of('Repeat message');\n * const documentClick$ = fromEvent(document, 'click');\n *\n * const result = source.pipe(repeatWhen(() => documentClick$));\n *\n * result.subscribe(data => console.log(data))\n * ```\n *\n * @see {@link repeat}\n * @see {@link retry}\n * @see {@link retryWhen}\n *\n * @param notifier Function that receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return A function that returns an `ObservableInput` that mirrors the source\n * Observable with the exception of a `complete`.\n * @deprecated Will be removed in v9 or v10. Use {@link repeat}'s {@link RepeatConfig#delay delay} option instead.\n * Instead of `repeatWhen(() => notify$)`, use: `repeat({ delay: () => notify$ })`.\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<void>) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null;\n    let syncResub = false;\n    let completions$: Subject<void>;\n    let isNotifierComplete = false;\n    let isMainComplete = false;\n\n    /**\n     * Checks to see if we can complete the result, completes it, and returns `true` if it was completed.\n     */\n    const checkComplete = () => isMainComplete && isNotifierComplete && (subscriber.complete(), true);\n    /**\n     * Gets the subject to send errors through. If it doesn't exist,\n     * we know we need to setup the notifier.\n     */\n    const getCompletionSubject = () => {\n      if (!completions$) {\n        completions$ = new Subject();\n\n        // If the call to `notifier` throws, it will be caught by the OperatorSubscriber\n        // In the main subscription -- in `subscribeForRepeatWhen`.\n        innerFrom(notifier(completions$)).subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            () => {\n              if (innerSub) {\n                subscribeForRepeatWhen();\n              } else {\n                // If we don't have an innerSub yet, that's because the inner subscription\n                // call hasn't even returned yet. We've arrived here synchronously.\n                // So we flag that we want to resub, such that we can ensure finalization\n                // happens before we resubscribe.\n                syncResub = true;\n              }\n            },\n            () => {\n              isNotifierComplete = true;\n              checkComplete();\n            }\n          )\n        );\n      }\n      return completions$;\n    };\n\n    const subscribeForRepeatWhen = () => {\n      isMainComplete = false;\n\n      innerSub = source.subscribe(\n        createOperatorSubscriber(subscriber, undefined, () => {\n          isMainComplete = true;\n          // Check to see if we are complete, and complete if so.\n          // If we are not complete. Get the subject. This calls the `notifier` function.\n          // If that function fails, it will throw and `.next()` will not be reached on this\n          // line. The thrown error is caught by the _complete handler in this\n          // `OperatorSubscriber` and handled appropriately.\n          !checkComplete() && getCompletionSubject().next();\n        })\n      );\n\n      if (syncResub) {\n        // Ensure that the inner subscription is torn down before\n        // moving on to the next subscription in the synchronous case.\n        // If we don't do this here, all inner subscriptions will not be\n        // torn down until the entire observable is done.\n        innerSub.unsubscribe();\n        // It is important to null this out. Not only to free up memory, but\n        // to make sure code above knows we are in a subscribing state to\n        // handle synchronous resubscription.\n        innerSub = null;\n        // We may need to do this multiple times, so reset the flags.\n        syncResub = false;\n        // Resubscribe\n        subscribeForRepeatWhen();\n      }\n    };\n\n    // Start the subscription\n    subscribeForRepeatWhen();\n  });\n}\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { Subscription } from '../Subscription';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\nimport { timer } from '../observable/timer';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * The {@link retry} operator configuration object. `retry` either accepts a `number`\n * or an object described by this interface.\n */\nexport interface RetryConfig {\n  /**\n   * The maximum number of times to retry. If `count` is omitted, `retry` will try to\n   * resubscribe on errors infinite number of times.\n   */\n  count?: number;\n  /**\n   * The number of milliseconds to delay before retrying, OR a function to\n   * return a notifier for delaying. If a function is given, that function should\n   * return a notifier that, when it emits will retry the source. If the notifier\n   * completes _without_ emitting, the resulting observable will complete without error,\n   * if the notifier errors, the error will be pushed to the result.\n   */\n  delay?: number | ((error: any, retryCount: number) => ObservableInput<any>);\n  /**\n   * Whether or not to reset the retry counter when the retried subscription\n   * emits its first value.\n   */\n  resetOnSuccess?: boolean;\n}\n\nexport function retry<T>(count?: number): MonoTypeOperatorFunction<T>;\nexport function retry<T>(config: RetryConfig): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`.\n *\n * If the source Observable calls `error`, this method will resubscribe to the source Observable for a maximum of\n * `count` resubscriptions rather than propagating the `error` call.\n *\n * ![](retry.png)\n *\n * The number of retries is determined by the `count` parameter. It can be set either by passing a number to\n * `retry` function or by setting `count` property when `retry` is configured using {@link RetryConfig}. If\n * `count` is omitted, `retry` will try to resubscribe on errors infinite number of times.\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those\n * emitted during failed subscriptions. For example, if an Observable fails at first but emits `[1, 2]` then\n * succeeds the second time and emits: `[1, 2, 3, 4, 5, complete]` then the complete stream of emissions and\n * notifications would be: `[1, 2, 1, 2, 3, 4, 5, complete]`.\n *\n * ## Example\n *\n * ```ts\n * import { interval, mergeMap, throwError, of, retry } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(\n *   mergeMap(val => val > 5 ? throwError(() => 'Error!') : of(val)),\n *   retry(2) // retry 2 times on error\n * );\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   error: err => console.log(`${ err }: Retried 2 times then quit!`)\n * });\n *\n * // Output:\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 'Error!: Retried 2 times then quit!'\n * ```\n *\n * @see {@link retryWhen}\n *\n * @param configOrCount - Either number of retry attempts before failing or a {@link RetryConfig} object.\n * @return A function that returns an Observable that will resubscribe to the\n * source stream when the source stream errors, at most `count` times.\n */\nexport function retry<T>(configOrCount: number | RetryConfig = Infinity): MonoTypeOperatorFunction<T> {\n  let config: RetryConfig;\n  if (configOrCount && typeof configOrCount === 'object') {\n    config = configOrCount;\n  } else {\n    config = {\n      count: configOrCount as number,\n    };\n  }\n  const { count = Infinity, delay, resetOnSuccess: resetOnSuccess = false } = config;\n\n  return count <= 0\n    ? identity\n    : operate((source, subscriber) => {\n        let soFar = 0;\n        let innerSub: Subscription | null;\n        const subscribeForRetry = () => {\n          let syncUnsub = false;\n          innerSub = source.subscribe(\n            createOperatorSubscriber(\n              subscriber,\n              (value) => {\n                // If we're resetting on success\n                if (resetOnSuccess) {\n                  soFar = 0;\n                }\n                subscriber.next(value);\n              },\n              // Completions are passed through to consumer.\n              undefined,\n              (err) => {\n                if (soFar++ < count) {\n                  // We are still under our retry count\n                  const resub = () => {\n                    if (innerSub) {\n                      innerSub.unsubscribe();\n                      innerSub = null;\n                      subscribeForRetry();\n                    } else {\n                      syncUnsub = true;\n                    }\n                  };\n\n                  if (delay != null) {\n                    // The user specified a retry delay.\n                    // They gave us a number, use a timer, otherwise, it's a function,\n                    // and we're going to call it to get a notifier.\n                    const notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(err, soFar));\n                    const notifierSubscriber = createOperatorSubscriber(\n                      subscriber,\n                      () => {\n                        // After we get the first notification, we\n                        // unsubscribe from the notifier, because we don't want anymore\n                        // and we resubscribe to the source.\n                        notifierSubscriber.unsubscribe();\n                        resub();\n                      },\n                      () => {\n                        // The notifier completed without emitting.\n                        // The author is telling us they want to complete.\n                        subscriber.complete();\n                      }\n                    );\n                    notifier.subscribe(notifierSubscriber);\n                  } else {\n                    // There was no notifier given. Just resub immediately.\n                    resub();\n                  }\n                } else {\n                  // We're past our maximum number of retries.\n                  // Just send along the error.\n                  subscriber.error(err);\n                }\n              }\n            )\n          );\n          if (syncUnsub) {\n            innerSub.unsubscribe();\n            innerSub = null;\n            subscribeForRetry();\n          }\n        };\n        subscribeForRetry();\n      });\n}\n", "import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the `ObservableInput` returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * ![](retryWhen.png)\n *\n * Retry an observable sequence on error based on custom criteria.\n *\n * ## Example\n *\n * ```ts\n * import { interval, map, retryWhen, tap, delayWhen, timer } from 'rxjs';\n *\n * const source = interval(1000);\n * const result = source.pipe(\n *   map(value => {\n *     if (value > 5) {\n *       // error will be picked up by retryWhen\n *       throw value;\n *     }\n *     return value;\n *   }),\n *   retryWhen(errors =>\n *     errors.pipe(\n *       // log error message\n *       tap(value => console.log(`Value ${ value } was too high!`)),\n *       // restart in 5 seconds\n *       delayWhen(value => timer(value * 1000))\n *     )\n *   )\n * );\n *\n * result.subscribe(value => console.log(value));\n *\n * // results:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 'Value 6 was too high!'\n * // - Wait 5 seconds then repeat\n * ```\n *\n * @see {@link retry}\n *\n * @param notifier Function that receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return A function that returns an `ObservableInput` that mirrors the source\n * Observable with the exception of an `error`.\n * @deprecated Will be removed in v9 or v10, use {@link retry}'s `delay` option instead.\n * Will be removed in v9 or v10. Use {@link retry}'s {@link RetryConfig#delay delay} option instead.\n * Instead of `retryWhen(() => notify$)`, use: `retry({ delay: () => notify$ })`.\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let innerSub: Subscription | null;\n    let syncResub = false;\n    let errors$: Subject<any>;\n\n    const subscribeForRetryWhen = () => {\n      innerSub = source.subscribe(\n        createOperatorSubscriber(subscriber, undefined, undefined, (err) => {\n          if (!errors$) {\n            errors$ = new Subject();\n            innerFrom(notifier(errors$)).subscribe(\n              createOperatorSubscriber(subscriber, () =>\n                // If we have an innerSub, this was an asynchronous call, kick off the retry.\n                // Otherwise, if we don't have an innerSub yet, that's because the inner subscription\n                // call hasn't even returned yet. We've arrived here synchronously.\n                // So we flag that we want to resub, such that we can ensure finalization\n                // happens before we resubscribe.\n                innerSub ? subscribeForRetryWhen() : (syncResub = true)\n              )\n            );\n          }\n          if (errors$) {\n            // We have set up the notifier without error.\n            errors$.next(err);\n          }\n        })\n      );\n\n      if (syncResub) {\n        // Ensure that the inner subscription is torn down before\n        // moving on to the next subscription in the synchronous case.\n        // If we don't do this here, all inner subscriptions will not be\n        // torn down until the entire observable is done.\n        innerSub.unsubscribe();\n        innerSub = null;\n        // We may need to do this multiple times, so reset the flag.\n        syncResub = false;\n        // Resubscribe\n        subscribeForRetryWhen();\n      }\n    };\n\n    // Start the subscription\n    subscribeForRetryWhen();\n  });\n}\n", "import { innerFrom } from '../observable/innerFrom';\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` `ObservableInput` emits something.</span>\n *\n * ![](sample.png)\n *\n * Whenever the `notifier` `ObservableInput` emits a value, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * ## Example\n *\n * On every click, sample the most recent `seconds` timer\n *\n * ```ts\n * import { fromEvent, interval, sample } from 'rxjs';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = seconds.pipe(sample(clicks));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param notifier The `ObservableInput` to use for sampling the\n * source Observable.\n * @return A function that returns an Observable that emits the results of\n * sampling the values emitted by the source Observable whenever the notifier\n * Observable emits value or completes.\n */\nexport function sample<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let lastValue: T | null = null;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        hasValue = true;\n        lastValue = value;\n      })\n    );\n    innerFrom(notifier).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          if (hasValue) {\n            hasValue = false;\n            const value = lastValue!;\n            lastValue = null;\n            subscriber.next(value);\n          }\n        },\n        noop\n      )\n    );\n  });\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { sample } from './sample';\nimport { interval } from '../observable/interval';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * ![](sampleTime.png)\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * ## Example\n *\n * Every second, emit the most recent click at most once\n *\n * ```ts\n * import { fromEvent, sampleTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(sampleTime(1000));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the sampling.\n * @return A function that returns an Observable that emits the results of\n * sampling the values emitted by the source Observable at the specified time\n * interval.\n */\nexport function sampleTime<T>(period: number, scheduler: SchedulerLike = asyncScheduler): MonoTypeOperatorFunction<T> {\n  return sample(interval(period, scheduler));\n}\n", "import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { scanInternals } from './scanInternals';\n\nexport function scan<V, A = V>(accumulator: (acc: A | V, value: V, index: number) => A): OperatorFunction<V, V | A>;\nexport function scan<V, A>(accumulator: (acc: A, value: V, index: number) => A, seed: A): OperatorFunction<V, A>;\nexport function scan<V, A, S>(accumulator: (acc: A | S, value: V, index: number) => A, seed: S): OperatorFunction<V, A>;\n\n// TODO: link to a \"redux pattern\" section in the guide (location TBD)\n\n/**\n * Useful for encapsulating and managing state. Applies an accumulator (or \"reducer function\")\n * to each value from the source after an initial state is established -- either via\n * a `seed` value (second argument), or from the first value from the source.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation state after each update</span>\n *\n * ![](scan.png)\n *\n * This operator maintains an internal state and emits it after processing each value as follows:\n *\n * 1. First value arrives\n *   - If a `seed` value was supplied (as the second argument to `scan`), let `state = seed` and `value = firstValue`.\n *   - If NO `seed` value was supplied (no second argument), let `state = firstValue` and go to 3.\n * 2. Let `state = accumulator(state, value)`.\n *   - If an error is thrown by `accumulator`, notify the consumer of an error. The process ends.\n * 3. Emit `state`.\n * 4. Next value arrives, let `value = nextValue`, go to 2.\n *\n * ## Examples\n *\n * An average of previous numbers. This example shows how\n * not providing a `seed` can prime the stream with the\n * first value from the source.\n *\n * ```ts\n * import { of, scan, map } from 'rxjs';\n *\n * const numbers$ = of(1, 2, 3);\n *\n * numbers$\n *   .pipe(\n *     // Get the sum of the numbers coming in.\n *     scan((total, n) => total + n),\n *     // Get the average by dividing the sum by the total number\n *     // received so far (which is 1 more than the zero-based index).\n *     map((sum, index) => sum / (index + 1))\n *   )\n *   .subscribe(console.log);\n * ```\n *\n * The Fibonacci sequence. This example shows how you can use\n * a seed to prime accumulation process. Also... you know... Fibonacci.\n * So important to like, computers and stuff that its whiteboarded\n * in job interviews. Now you can show them the Rx version! (Please don't, haha)\n *\n * ```ts\n * import { interval, scan, map, startWith } from 'rxjs';\n *\n * const firstTwoFibs = [0, 1];\n * // An endless stream of Fibonacci numbers.\n * const fibonacci$ = interval(1000).pipe(\n *   // Scan to get the fibonacci numbers (after 0, 1)\n *   scan(([a, b]) => [b, a + b], firstTwoFibs),\n *   // Get the second number in the tuple, it's the one you calculated\n *   map(([, n]) => n),\n *   // Start with our first two digits :)\n *   startWith(...firstTwoFibs)\n * );\n *\n * fibonacci$.subscribe(console.log);\n * ```\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n * @see {@link switchScan}\n *\n * @param accumulator A \"reducer function\". This will be called for each value after an initial state is\n * acquired.\n * @param seed The initial state. If this is not provided, the first value from the source will\n * be used as the initial state, and emitted without going through the accumulator. All subsequent values\n * will be processed by the accumulator function. If this is provided, all values will go through\n * the accumulator function.\n * @return A function that returns an Observable of the accumulated values.\n */\nexport function scan<V, A, S>(accumulator: (acc: V | A | S, value: V, index: number) => A, seed?: S): OperatorFunction<V, V | A> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  return operate(scanInternals(accumulator, seed as S, arguments.length >= 2, true));\n}\n", "import { OperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Compares all values of two observables in sequence using an optional comparator function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * ![](sequenceEqual.png)\n *\n * `sequenceEqual` subscribes to source observable and `compareTo` `ObservableInput` (that internally\n * gets converted to an observable) and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other completes, the returned observable will never complete.\n *\n * ## Example\n *\n * Figure out if the Konami code matches\n *\n * ```ts\n * import { from, fromEvent, map, bufferCount, mergeMap, sequenceEqual } from 'rxjs';\n *\n * const codes = from([\n *   'ArrowUp',\n *   'ArrowUp',\n *   'ArrowDown',\n *   'ArrowDown',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'KeyB',\n *   'KeyA',\n *   'Enter', // no start key, clearly.\n * ]);\n *\n * const keys = fromEvent<KeyboardEvent>(document, 'keyup').pipe(map(e => e.code));\n * const matches = keys.pipe(\n *   bufferCount(11, 1),\n *   mergeMap(last11 => from(last11).pipe(sequenceEqual(codes)))\n * );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param compareTo The `ObservableInput` sequence to compare the source sequence to.\n * @param comparator An optional function to compare each value pair.\n *\n * @return A function that returns an Observable that emits a single boolean\n * value representing whether or not the values emitted by the source\n * Observable and provided `ObservableInput` were equal in sequence.\n */\nexport function sequenceEqual<T>(\n  compareTo: ObservableInput<T>,\n  comparator: (a: T, b: T) => boolean = (a, b) => a === b\n): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    // The state for the source observable\n    const aState = createState<T>();\n    // The state for the compareTo observable;\n    const bState = createState<T>();\n\n    /** A utility to emit and complete */\n    const emit = (isEqual: boolean) => {\n      subscriber.next(isEqual);\n      subscriber.complete();\n    };\n\n    /**\n     * Creates a subscriber that subscribes to one of the sources, and compares its collected\n     * state -- `selfState` -- to the other source's collected state -- `otherState`. This\n     * is used for both streams.\n     */\n    const createSubscriber = (selfState: SequenceState<T>, otherState: SequenceState<T>) => {\n      const sequenceEqualSubscriber = createOperatorSubscriber(\n        subscriber,\n        (a: T) => {\n          const { buffer, complete } = otherState;\n          if (buffer.length === 0) {\n            // If there's no values in the other buffer\n            // and the other stream is complete, we know\n            // this isn't a match, because we got one more value.\n            // Otherwise, we push onto our buffer, so when the other\n            // stream emits, it can pull this value off our buffer and check it\n            // at the appropriate time.\n            complete ? emit(false) : selfState.buffer.push(a);\n          } else {\n            // If the other stream *does* have values in its buffer,\n            // pull the oldest one off so we can compare it to what we\n            // just got. If it wasn't a match, emit `false` and complete.\n            !comparator(a, buffer.shift()!) && emit(false);\n          }\n        },\n        () => {\n          // Or observable completed\n          selfState.complete = true;\n          const { complete, buffer } = otherState;\n          // If the other observable is also complete, and there's\n          // still stuff left in their buffer, it doesn't match, if their\n          // buffer is empty, then it does match. This is because we can't\n          // possibly get more values here anymore.\n          complete && emit(buffer.length === 0);\n          // Be sure to clean up our stream as soon as possible if we can.\n          sequenceEqualSubscriber?.unsubscribe();\n        }\n      );\n\n      return sequenceEqualSubscriber;\n    };\n\n    // Subscribe to each source.\n    source.subscribe(createSubscriber(aState, bState));\n    innerFrom(compareTo).subscribe(createSubscriber(bState, aState));\n  });\n}\n\n/**\n * A simple structure for the data used to test each sequence\n */\ninterface SequenceState<T> {\n  /** A temporary store for arrived values before they are checked */\n  buffer: T[];\n  /** Whether or not the sequence source has completed. */\n  complete: boolean;\n}\n\n/**\n * Creates a simple structure that is used to represent\n * data used to test each sequence.\n */\nfunction createState<T>(): SequenceState<T> {\n  return {\n    buffer: [],\n    complete: false,\n  };\n}\n", "import { ReplaySubject } from '../ReplaySubject';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { share } from './share';\n\nexport interface ShareReplayConfig {\n  bufferSize?: number;\n  windowTime?: number;\n  refCount: boolean;\n  scheduler?: SchedulerLike;\n}\n\nexport function shareReplay<T>(config: ShareReplayConfig): MonoTypeOperatorFunction<T>;\nexport function shareReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n\n/**\n * Share source and replay specified number of emissions on subscription.\n *\n * This operator is a specialization of `replay` that connects to a source observable\n * and multicasts through a `ReplaySubject` constructed with the specified arguments.\n * A successfully completed source will stay cached in the `shareReplay`ed observable forever,\n * but an errored source can be retried.\n *\n * ## Why use `shareReplay`?\n *\n * You generally want to use `shareReplay` when you have side-effects or taxing computations\n * that you do not wish to be executed amongst multiple subscribers.\n * It may also be valuable in situations where you know you will have late subscribers to\n * a stream that need access to previously emitted values.\n * This ability to replay values on subscription is what differentiates {@link share} and `shareReplay`.\n *\n * ## Reference counting\n *\n * By default `shareReplay` will use `refCount` of false, meaning that it will _not_ unsubscribe the\n * source when the reference counter drops to zero, i.e. the inner `ReplaySubject` will _not_ be unsubscribed\n * (and potentially run for ever).\n * This is the default as it is expected that `shareReplay` is often used to keep around expensive to setup\n * observables which we want to keep running instead of having to do the expensive setup again.\n *\n * As of RXJS version 6.4.0 a new overload signature was added to allow for manual control over what\n * happens when the operators internal reference counter drops to zero.\n * If `refCount` is true, the source will be unsubscribed from once the reference count drops to zero, i.e.\n * the inner `ReplaySubject` will be unsubscribed. All new subscribers will receive value emissions from a\n * new `ReplaySubject` which in turn will cause a new subscription to the source observable.\n *\n * ## Examples\n *\n * Example with a third subscriber coming late to the party\n *\n * ```ts\n * import { interval, take, shareReplay } from 'rxjs';\n *\n * const shared$ = interval(2000).pipe(\n *   take(6),\n *   shareReplay(3)\n * );\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * setTimeout(() => {\n *   shared$.subscribe(y => console.log('sub C: ', y));\n * }, 11000);\n *\n * // Logs:\n * // (after ~2000 ms)\n * // sub A: 0\n * // sub B: 0\n * // (after ~4000 ms)\n * // sub A: 1\n * // sub B: 1\n * // (after ~6000 ms)\n * // sub A: 2\n * // sub B: 2\n * // (after ~8000 ms)\n * // sub A: 3\n * // sub B: 3\n * // (after ~10000 ms)\n * // sub A: 4\n * // sub B: 4\n * // (after ~11000 ms, sub C gets the last 3 values)\n * // sub C: 2\n * // sub C: 3\n * // sub C: 4\n * // (after ~12000 ms)\n * // sub A: 5\n * // sub B: 5\n * // sub C: 5\n * ```\n *\n * Example for `refCount` usage\n *\n * ```ts\n * import { Observable, tap, interval, shareReplay, take } from 'rxjs';\n *\n * const log = <T>(name: string, source: Observable<T>) => source.pipe(\n *   tap({\n *     subscribe: () => console.log(`${ name }: subscribed`),\n *     next: value => console.log(`${ name }: ${ value }`),\n *     complete: () => console.log(`${ name }: completed`),\n *     finalize: () => console.log(`${ name }: unsubscribed`)\n *   })\n * );\n *\n * const obs$ = log('source', interval(1000));\n *\n * const shared$ = log('shared', obs$.pipe(\n *   shareReplay({ bufferSize: 1, refCount: true }),\n *   take(2)\n * ));\n *\n * shared$.subscribe(x => console.log('sub A: ', x));\n * shared$.subscribe(y => console.log('sub B: ', y));\n *\n * // PRINTS:\n * // shared: subscribed <-- reference count = 1\n * // source: subscribed\n * // shared: subscribed <-- reference count = 2\n * // source: 0\n * // shared: 0\n * // sub A: 0\n * // shared: 0\n * // sub B: 0\n * // source: 1\n * // shared: 1\n * // sub A: 1\n * // shared: completed <-- take(2) completes the subscription for sub A\n * // shared: unsubscribed <-- reference count = 1\n * // shared: 1\n * // sub B: 1\n * // shared: completed <-- take(2) completes the subscription for sub B\n * // shared: unsubscribed <-- reference count = 0\n * // source: unsubscribed <-- replaySubject unsubscribes from source observable because the reference count dropped to 0 and refCount is true\n *\n * // In case of refCount being false, the unsubscribe is never called on the source and the source would keep on emitting, even if no subscribers\n * // are listening.\n * // source: 2\n * // source: 3\n * // source: 4\n * // ...\n * ```\n *\n * @see {@link publish}\n * @see {@link share}\n * @see {@link publishReplay}\n *\n * @param configOrBufferSize Maximum element count of the replay buffer or {@link ShareReplayConfig configuration}\n * object.\n * @param windowTime Maximum time length of the replay buffer in milliseconds.\n * @param scheduler Scheduler where connected observers within the selector function\n * will be invoked on.\n * @return A function that returns an Observable sequence that contains the\n * elements of a sequence produced by multicasting the source sequence within a\n * selector function.\n */\nexport function shareReplay<T>(\n  configOrBufferSize?: ShareReplayConfig | number,\n  windowTime?: number,\n  scheduler?: SchedulerLike\n): MonoTypeOperatorFunction<T> {\n  let bufferSize: number;\n  let refCount = false;\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n  } else {\n    bufferSize = (configOrBufferSize ?? Infinity) as number;\n  }\n  return share<T>({\n    connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n    resetOnError: true,\n    resetOnComplete: false,\n    resetOnRefCountZero: refCount,\n  });\n}\n", "import { Observable } from '../Observable';\nimport { EmptyError } from '../util/EmptyError';\n\nimport { MonoTypeOperatorFunction, OperatorFunction, TruthyTypesOf } from '../types';\nimport { SequenceError } from '../util/SequenceError';\nimport { NotFoundError } from '../util/NotFoundError';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function single<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an observable that asserts that only one value is\n * emitted from the observable that matches the predicate. If no\n * predicate is provided, then it will assert that the observable\n * only emits one value.\n *\n * In the event that the observable is empty, it will throw an\n * {@link EmptyError}.\n *\n * In the event that two values are found that match the predicate,\n * or when there are two values emitted and no predicate, it will\n * throw a {@link SequenceError}\n *\n * In the event that no values match the predicate, if one is provided,\n * it will throw a {@link NotFoundError}\n *\n * ## Example\n *\n * Expect only `name` beginning with `'B'`\n *\n * ```ts\n * import { of, single } from 'rxjs';\n *\n * const source1 = of(\n *  { name: 'Ben' },\n *  { name: 'Tracy' },\n *  { name: 'Laney' },\n *  { name: 'Lily' }\n * );\n *\n * source1\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe(x => console.log(x));\n * // Emits 'Ben'\n *\n *\n * const source2 = of(\n *  { name: 'Ben' },\n *  { name: 'Tracy' },\n *  { name: 'Bradley' },\n *  { name: 'Lincoln' }\n * );\n *\n * source2\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe({ error: err => console.error(err) });\n * // Error emitted: SequenceError('Too many values match')\n *\n *\n * const source3 = of(\n *  { name: 'Laney' },\n *  { name: 'Tracy' },\n *  { name: 'Lily' },\n *  { name: 'Lincoln' }\n * );\n *\n * source3\n *   .pipe(single(x => x.name.startsWith('B')))\n *   .subscribe({ error: err => console.error(err) });\n * // Error emitted: NotFoundError('No values match')\n * ```\n *\n * @see {@link first}\n * @see {@link find}\n * @see {@link findIndex}\n * @see {@link elementAt}\n *\n * @throws {NotFoundError} Delivers an NotFoundError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @throws {SequenceError} Delivers a SequenceError if more than one value is emitted that matches the\n * provided predicate. If no predicate is provided, will deliver a SequenceError if more\n * than one value comes from the source\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return A function that returns an Observable that emits the single item\n * emitted by the source Observable that matches the predicate.\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let hasValue = false;\n    let singleValue: T;\n    let seenValue = false;\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          seenValue = true;\n          if (!predicate || predicate(value, index++, source)) {\n            hasValue && subscriber.error(new SequenceError('Too many matching values'));\n            hasValue = true;\n            singleValue = value;\n          }\n        },\n        () => {\n          if (hasValue) {\n            subscriber.next(singleValue);\n            subscriber.complete();\n          } else {\n            subscriber.error(seenValue ? new NotFoundError('No matching values') : new EmptyError());\n          }\n        }\n      )\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { filter } from './filter';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * ![](skip.png)\n *\n * Skips the values until the sent notifications are equal or less than provided skip count. It raises\n * an error if skip count is equal or more than the actual number of emits and source raises an error.\n *\n * ## Example\n *\n * Skip the values before the emission\n *\n * ```ts\n * import { interval, skip } from 'rxjs';\n *\n * // emit every half second\n * const source = interval(500);\n * // skip the first 10 emitted values\n * const result = source.pipe(skip(10));\n *\n * result.subscribe(value => console.log(value));\n * // output: 10...11...12...13...\n * ```\n *\n * @see {@link last}\n * @see {@link skipWhile}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return A function that returns an Observable that skips the first `count`\n * values emitted by the source Observable.\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return filter((_, index) => count <= index);\n}\n", "import { MonoTypeOperatorFunction } from '../types';\nimport { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Skip a specified number of values before the completion of an observable.\n *\n * ![](skipLast.png)\n *\n * Returns an observable that will emit values as soon as it can, given a number of\n * skipped values. For example, if you `skipLast(3)` on a source, when the source\n * emits its fourth value, the first value the source emitted will finally be emitted\n * from the returned observable, as it is no longer part of what needs to be skipped.\n *\n * All values emitted by the result of `skipLast(N)` will be delayed by `N` emissions,\n * as each value is held in a buffer until enough values have been emitted that that\n * the buffered value may finally be sent to the consumer.\n *\n * After subscribing, unsubscribing will not result in the emission of the buffered\n * skipped values.\n *\n * ## Example\n *\n * Skip the last 2 values of an observable with many values\n *\n * ```ts\n * import { of, skipLast } from 'rxjs';\n *\n * const numbers = of(1, 2, 3, 4, 5);\n * const skipLastTwo = numbers.pipe(skipLast(2));\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n * // (4 and 5 are skipped)\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @param skipCount Number of elements to skip from the end of the source Observable.\n * @return A function that returns an Observable that skips the last `count`\n * values emitted by the source Observable.\n */\nexport function skipLast<T>(skipCount: number): MonoTypeOperatorFunction<T> {\n  return skipCount <= 0\n    ? // For skipCounts less than or equal to zero, we are just mirroring the source.\n      identity\n    : operate((source, subscriber) => {\n        // A ring buffer to hold the values while we wait to see\n        // if we can emit it or it's part of the \"skipped\" last values.\n        // Note that it is the _same size_ as the skip count.\n        let ring: T[] = new Array(skipCount);\n        // The number of values seen so far. This is used to get\n        // the index of the current value when it arrives.\n        let seen = 0;\n        source.subscribe(\n          createOperatorSubscriber(subscriber, (value) => {\n            // Get the index of the value we have right now\n            // relative to all other values we've seen, then\n            // increment `seen`. This ensures we've moved to\n            // the next slot in our ring buffer.\n            const valueIndex = seen++;\n            if (valueIndex < skipCount) {\n              // If we haven't seen enough values to fill our buffer yet,\n              // Then we aren't to a number of seen values where we can\n              // emit anything, so let's just start by filling the ring buffer.\n              ring[valueIndex] = value;\n            } else {\n              // We are traversing over the ring array in such\n              // a way that when we get to the end, we loop back\n              // and go to the start.\n              const index = valueIndex % skipCount;\n              // Pull the oldest value out so we can emit it,\n              // and stuff the new value in it's place.\n              const oldValue = ring[index];\n              ring[index] = value;\n              // Emit the old value. It is important that this happens\n              // after we swap the value in the buffer, if it happens\n              // before we swap the value in the buffer, then a synchronous\n              // source can get the buffer out of whack.\n              subscriber.next(oldValue);\n            }\n          })\n        );\n\n        return () => {\n          // Release our values in memory\n          ring = null!;\n        };\n      });\n}\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * The `skipUntil` operator causes the observable stream to skip the emission of values until the passed in observable\n * emits the first value. This can be particularly useful in combination with user interactions, responses of HTTP\n * requests or waiting for specific times to pass by.\n *\n * ![](skipUntil.png)\n *\n * Internally, the `skipUntil` operator subscribes to the passed in `notifier` `ObservableInput` (which gets converted\n * to an Observable) in order to recognize the emission of its first value. When `notifier` emits next, the operator\n * unsubscribes from it and starts emitting the values of the *source* observable until it completes or errors. It\n * will never let the *source* observable emit any values if the `notifier` completes or throws an error without\n * emitting a value before.\n *\n * ## Example\n *\n * In the following example, all emitted values of the interval observable are skipped until the user clicks anywhere\n * within the page\n *\n * ```ts\n * import { interval, fromEvent, skipUntil } from 'rxjs';\n *\n * const intervalObservable = interval(1000);\n * const click = fromEvent(document, 'click');\n *\n * const emitAfterClick = intervalObservable.pipe(\n *   skipUntil(click)\n * );\n * // clicked at 4.6s. output: 5...6...7...8........ or\n * // clicked at 7.3s. output: 8...9...10..11.......\n * emitAfterClick.subscribe(value => console.log(value));\n * ```\n *\n * @see {@link last}\n * @see {@link skip}\n * @see {@link skipWhile}\n * @see {@link skipLast}\n *\n * @param notifier An `ObservableInput` that has to emit an item before the source Observable elements begin to\n * be mirrored by the resulting Observable.\n * @return A function that returns an Observable that skips items from the\n * source Observable until the `notifier` Observable emits an item, then emits the\n * remaining items.\n */\nexport function skipUntil<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let taking = false;\n\n    const skipSubscriber = createOperatorSubscriber(\n      subscriber,\n      () => {\n        skipSubscriber?.unsubscribe();\n        taking = true;\n      },\n      noop\n    );\n\n    innerFrom(notifier).subscribe(skipSubscriber);\n\n    source.subscribe(createOperatorSubscriber(subscriber, (value) => taking && subscriber.next(value)));\n  });\n}\n", "import { Falsy, MonoTypeOperatorFunction, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function skipWhile<T>(predicate: BooleanConstructor): OperatorFunction<T, Extract<T, Falsy> extends never ? never : T>;\nexport function skipWhile<T>(predicate: (value: T, index: number) => true): OperatorFunction<T, never>;\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * ![](skipWhile.png)\n *\n * Skips all the notifications with a truthy predicate. It will not skip the notifications when the predicate is falsy.\n * It can also be skipped using index. Once the predicate is true, it will not be called again.\n *\n * ## Example\n *\n * Skip some super heroes\n *\n * ```ts\n * import { from, skipWhile } from 'rxjs';\n *\n * const source = from(['Green Arrow', 'SuperMan', 'Flash', 'SuperGirl', 'Black Canary'])\n * // Skip the heroes until SuperGirl\n * const example = source.pipe(skipWhile(hero => hero !== 'SuperGirl'));\n * // output: SuperGirl, Black Canary\n * example.subscribe(femaleHero => console.log(femaleHero));\n * ```\n *\n * Skip values from the array until index 5\n *\n * ```ts\n * import { from, skipWhile } from 'rxjs';\n *\n * const source = from([1, 2, 3, 4, 5, 6, 7, 9, 10]);\n * const example = source.pipe(skipWhile((_, i) => i !== 5));\n * // output: 6, 7, 9, 10\n * example.subscribe(value => console.log(value));\n * ```\n *\n * @see {@link last}\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipLast}\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return A function that returns an Observable that begins emitting items\n * emitted by the source Observable when the specified predicate becomes false.\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let taking = false;\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => (taking || (taking = !predicate(value, index++))) && subscriber.next(value))\n    );\n  });\n}\n", "import { concat } from '../observable/concat';\nimport { OperatorFunction, SchedulerLike, ValueFromArray } from '../types';\nimport { popScheduler } from '../util/args';\nimport { operate } from '../util/lift';\n\n// Devs are more likely to pass null or undefined than they are a scheduler\n// without accompanying values. To make things easier for (naughty) devs who\n// use the `strictNullChecks: false` TypeScript compiler option, these\n// overloads with explicit null and undefined values are included.\n\nexport function startWith<T>(value: null): OperatorFunction<T, T | null>;\nexport function startWith<T>(value: undefined): OperatorFunction<T, T | undefined>;\n\n/** @deprecated The `scheduler` parameter will be removed in v8. Use `scheduled` and `concatAll`. Details: https://rxjs.dev/deprecations/scheduler-argument */\nexport function startWith<T, A extends readonly unknown[] = T[]>(\n  ...valuesAndScheduler: [...A, SchedulerLike]\n): OperatorFunction<T, T | ValueFromArray<A>>;\nexport function startWith<T, A extends readonly unknown[] = T[]>(...values: A): OperatorFunction<T, T | ValueFromArray<A>>;\n\n/**\n * Returns an observable that, at the moment of subscription, will synchronously emit all\n * values provided to this operator, then subscribe to the source and mirror all of its emissions\n * to subscribers.\n *\n * This is a useful way to know when subscription has occurred on an existing observable.\n *\n * <span class=\"informal\">First emits its arguments in order, and then any\n * emissions from the source.</span>\n *\n * ![](startWith.png)\n *\n * ## Examples\n *\n * Emit a value when a timer starts.\n *\n * ```ts\n * import { timer, map, startWith } from 'rxjs';\n *\n * timer(1000)\n *   .pipe(\n *     map(() => 'timer emit'),\n *     startWith('timer start')\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // results:\n * // 'timer start'\n * // 'timer emit'\n * ```\n *\n * @param values Items you want the modified Observable to emit first.\n * @return A function that returns an Observable that synchronously emits\n * provided values before subscribing to the source Observable.\n *\n * @see {@link endWith}\n * @see {@link finalize}\n * @see {@link concat}\n */\nexport function startWith<T, D>(...values: D[]): OperatorFunction<T, T | D> {\n  const scheduler = popScheduler(values);\n  return operate((source, subscriber) => {\n    // Here we can't pass `undefined` as a scheduler, because if we did, the\n    // code inside of `concat` would be confused by the `undefined`, and treat it\n    // like an invalid observable. So we have to split it two different ways.\n    (scheduler ? concat(values, source, scheduler) : concat(values, source)).subscribe(subscriber);\n  });\n}\n", "import { OperatorFunction, ObservableInput, ObservedValueOf } from '../types';\nimport { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\n\n/**\n * Converts a higher-order Observable into a first-order Observable\n * producing values only from the most recent observable sequence\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](switchAll.png)\n *\n * `switchAll` subscribes to a source that is an observable of observables, also known as a\n * \"higher-order observable\" (or `Observable<Observable<T>>`). It subscribes to the most recently\n * provided \"inner observable\" emitted by the source, unsubscribing from any previously subscribed\n * to inner observable, such that only the most recent inner observable may be subscribed to at\n * any point in time. The resulting observable returned by `switchAll` will only complete if the\n * source observable completes, *and* any currently subscribed to inner observable also has completed,\n * if there are any.\n *\n * ## Examples\n *\n * Spawn a new interval observable for each click event, but for every new\n * click, cancel the previous interval and subscribe to the new one\n *\n * ```ts\n * import { fromEvent, tap, map, interval, switchAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click').pipe(tap(() => console.log('click')));\n * const source = clicks.pipe(map(() => interval(1000)));\n *\n * source\n *   .pipe(switchAll())\n *   .subscribe(x => console.log(x));\n *\n * // Output\n * // click\n * // 0\n * // 1\n * // 2\n * // 3\n * // ...\n * // click\n * // 0\n * // 1\n * // 2\n * // ...\n * // click\n * // ...\n * ```\n *\n * @see {@link combineLatestAll}\n * @see {@link concatAll}\n * @see {@link exhaustAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link mergeAll}\n *\n * @return A function that returns an Observable that converts a higher-order\n * Observable into a first-order Observable producing values only from the most\n * recent Observable sequence.\n */\nexport function switchAll<O extends ObservableInput<any>>(): OperatorFunction<O, ObservedValueOf<O>> {\n  return switchMap(identity);\n}\n", "import { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: undefined\n): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switchAll}.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n *\n * Generate new Observable according to source Observable values\n *\n * ```ts\n * import { of, switchMap } from 'rxjs';\n *\n * const switched = of(1, 2, 3).pipe(switchMap(x => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // 3\n * // 9\n * // 27\n * ```\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMap, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap(() => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return A function that returns an Observable that emits the result of\n * applying the projection function (and the optional deprecated\n * `resultSelector`) to each item emitted by the source Observable and taking\n * only the values from the most recently projected inner Observable.\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return operate((source, subscriber) => {\n    let innerSubscriber: Subscriber<ObservedValueOf<O>> | null = null;\n    let index = 0;\n    // Whether or not the source subscription has completed\n    let isComplete = false;\n\n    // We only complete the result if the source is complete AND we don't have an active inner subscription.\n    // This is called both when the source completes and when the inners complete.\n    const checkComplete = () => isComplete && !innerSubscriber && subscriber.complete();\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          // Cancel the previous inner subscription if there was one\n          innerSubscriber?.unsubscribe();\n          let innerIndex = 0;\n          const outerIndex = index++;\n          // Start the next inner subscription\n          innerFrom(project(value, outerIndex)).subscribe(\n            (innerSubscriber = createOperatorSubscriber(\n              subscriber,\n              // When we get a new inner value, next it through. Note that this is\n              // handling the deprecate result selector here. This is because with this architecture\n              // it ends up being smaller than using the map operator.\n              (innerValue) => subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue),\n              () => {\n                // The inner has completed. Null out the inner subscriber to\n                // free up memory and to signal that we have no inner subscription\n                // currently.\n                innerSubscriber = null!;\n                checkComplete();\n              }\n            ))\n          );\n        },\n        () => {\n          isComplete = true;\n          checkComplete();\n        }\n      )\n    );\n  });\n}\n", "import { switchMap } from './switchMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { isFunction } from '../util/isFunction';\n\n/** @deprecated Will be removed in v9. Use {@link switchMap} instead: `switchMap(() => result)` */\nexport function switchMapTo<O extends ObservableInput<unknown>>(observable: O): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMapTo<O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: undefined\n): OperatorFunction<unknown, ObservedValueOf<O>>;\n/** @deprecated The `resultSelector` parameter will be removed in v8. Use an inner `map` instead. Details: https://rxjs.dev/deprecations/resultSelector */\nexport function switchMapTo<T, R, O extends ObservableInput<unknown>>(\n  observable: O,\n  resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, R>;\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switchMap} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](switchMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * ## Example\n *\n * Restart an interval Observable on every click event\n *\n * ```ts\n * import { fromEvent, switchMapTo, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMapTo(interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return A function that returns an Observable that emits items from the\n * given `innerObservable` (and optionally transformed through the deprecated\n * `resultSelector`) every time a value is emitted on the source Observable,\n * and taking only the values from the most recently projected inner\n * Observable.\n * @deprecated Will be removed in v9. Use {@link switchMap} instead: `switchMap(() => result)`\n */\nexport function switchMapTo<T, R, O extends ObservableInput<unknown>>(\n  innerObservable: O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O> | R> {\n  return isFunction(resultSelector) ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n", "import { ObservableInput, ObservedValueOf, OperatorFunction } from '../types';\nimport { switchMap } from './switchMap';\nimport { operate } from '../util/lift';\n\n// TODO: Generate a marble diagram for these docs.\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, emitting values\n * only from the most recently returned Observable.\n *\n * <span class=\"informal\">It's like {@link mergeScan}, but only the most recent\n * Observable returned by the accumulator is merged into the outer Observable.</span>\n *\n * @see {@link scan}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @return A function that returns an observable of the accumulated values.\n */\nexport function switchScan<T, R, O extends ObservableInput<any>>(\n  accumulator: (acc: R, value: T, index: number) => O,\n  seed: R\n): OperatorFunction<T, ObservedValueOf<O>> {\n  return operate((source, subscriber) => {\n    // The state we will keep up to date to pass into our\n    // accumulator function at each new value from the source.\n    let state = seed;\n\n    // Use `switchMap` on our `source` to do the work of creating\n    // this operator. Note the backwards order here of `switchMap()(source)`\n    // to avoid needing to use `pipe` unnecessarily\n    switchMap(\n      // On each value from the source, call the accumulator with\n      // our previous state, the value and the index.\n      (value: T, index) => accumulator(state, value, index),\n      // Using the deprecated result selector here as a dirty trick\n      // to update our state with the flattened value.\n      (_, innerValue) => ((state = innerValue), innerValue)\n    )(source).subscribe(subscriber);\n\n    return () => {\n      // Release state on finalization\n      state = null!;\n    };\n  });\n}\n", "import { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * ![](takeUntil.png)\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * ## Example\n *\n * Tick every second until the first click happens\n *\n * ```ts\n * import { interval, fromEvent, takeUntil } from 'rxjs';\n *\n * const source = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = source.pipe(takeUntil(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return A function that returns an Observable that emits the values from the\n * source Observable until `notifier` emits its first value.\n */\nexport function takeUntil<T>(notifier: ObservableInput<any>): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, () => subscriber.complete(), noop));\n    !subscriber.closed && source.subscribe(subscriber);\n  });\n}\n", "import { OperatorFunction, MonoTypeOperatorFunction, TruthyTypesOf } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\nexport function takeWhile<T>(predicate: BooleanConstructor, inclusive: true): MonoTypeOperatorFunction<T>;\nexport function takeWhile<T>(predicate: BooleanConstructor, inclusive: false): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function takeWhile<T>(predicate: BooleanConstructor): OperatorFunction<T, TruthyTypesOf<T>>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S, inclusive: false): OperatorFunction<T, S>;\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive?: boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * ![](takeWhile.png)\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * ## Example\n *\n * Emit click events only while the clientX property is greater than 200\n *\n * ```ts\n * import { fromEvent, takeWhile } from 'rxjs';\n *\n * const clicks = fromEvent<PointerEvent>(document, 'click');\n * const result = clicks.pipe(takeWhile(ev => ev.clientX > 200));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @param {boolean} inclusive When set to `true` the value that caused\n * `predicate` to return `false` will also be emitted.\n * @return A function that returns an Observable that emits values from the\n * source Observable so long as each value satisfies the condition defined by\n * the `predicate`, then completes.\n */\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive = false): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    let index = 0;\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const result = predicate(value, index++);\n        (result || inclusive) && subscriber.next(value);\n        !result && subscriber.complete();\n      })\n    );\n  });\n}\n", "import { MonoTypeOperatorFunction, Observer } from '../types';\nimport { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\n\n/**\n * An extension to the {@link Observer} interface used only by the {@link tap} operator.\n *\n * It provides a useful set of callbacks a user can register to do side-effects in\n * cases other than what the usual {@link Observer} callbacks are\n * ({@link guide/glossary-and-semantics#next next},\n * {@link guide/glossary-and-semantics#error error} and/or\n * {@link guide/glossary-and-semantics#complete complete}).\n *\n * ## Example\n *\n * ```ts\n * import { fromEvent, switchMap, tap, interval, take } from 'rxjs';\n *\n * const source$ = fromEvent(document, 'click');\n * const result$ = source$.pipe(\n *   switchMap((_, i) => i % 2 === 0\n *     ? fromEvent(document, 'mousemove').pipe(\n *         tap({\n *           subscribe: () => console.log('Subscribed to the mouse move events after click #' + i),\n *           unsubscribe: () => console.log('Mouse move events #' + i + ' unsubscribed'),\n *           finalize: () => console.log('Mouse move events #' + i + ' finalized')\n *         })\n *       )\n *     : interval(1_000).pipe(\n *         take(5),\n *         tap({\n *           subscribe: () => console.log('Subscribed to the 1-second interval events after click #' + i),\n *           unsubscribe: () => console.log('1-second interval events #' + i + ' unsubscribed'),\n *           finalize: () => console.log('1-second interval events #' + i + ' finalized')\n *         })\n *       )\n *   )\n * );\n *\n * const subscription = result$.subscribe({\n *   next: console.log\n * });\n *\n * setTimeout(() => {\n *   console.log('Unsubscribe after 60 seconds');\n *   subscription.unsubscribe();\n * }, 60_000);\n * ```\n */\nexport interface TapObserver<T> extends Observer<T> {\n  /**\n   * The callback that `tap` operator invokes at the moment when the source Observable\n   * gets subscribed to.\n   */\n  subscribe: () => void;\n  /**\n   * The callback that `tap` operator invokes when an explicit\n   * {@link guide/glossary-and-semantics#unsubscription unsubscribe} happens. It won't get invoked on\n   * `error` or `complete` events.\n   */\n  unsubscribe: () => void;\n  /**\n   * The callback that `tap` operator invokes when any kind of\n   * {@link guide/glossary-and-semantics#finalization finalization} happens - either when\n   * the source Observable `error`s or `complete`s or when it gets explicitly unsubscribed\n   * by the user. There is no difference in using this callback or the {@link finalize}\n   * operator, but if you're already using `tap` operator, you can use this callback\n   * instead. You'd get the same result in either case.\n   */\n  finalize: () => void;\n}\nexport function tap<T>(observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void)): MonoTypeOperatorFunction<T>;\n/** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\nexport function tap<T>(\n  next?: ((value: T) => void) | null,\n  error?: ((error: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T>;\n\n/**\n * Used to perform side-effects for notifications from the source observable\n *\n * <span class=\"informal\">Used when you want to affect outside state with a notification without altering the notification</span>\n *\n * ![](tap.png)\n *\n * Tap is designed to allow the developer a designated place to perform side effects. While you _could_ perform side-effects\n * inside of a `map` or a `mergeMap`, that would make their mapping functions impure, which isn't always a big deal, but will\n * make it so you can't do things like memoize those functions. The `tap` operator is designed solely for such side-effects to\n * help you remove side-effects from other operations.\n *\n * For any notification, next, error, or complete, `tap` will call the appropriate callback you have provided to it, via a function\n * reference, or a partial observer, then pass that notification down the stream.\n *\n * The observable returned by `tap` is an exact mirror of the source, with one exception: Any error that occurs -- synchronously -- in a handler\n * provided to `tap` will be emitted as an error from the returned observable.\n *\n * > Be careful! You can mutate objects as they pass through the `tap` operator's handlers.\n *\n * The most common use of `tap` is actually for debugging. You can place a `tap(console.log)` anywhere\n * in your observable `pipe`, log out the notifications as they are emitted by the source returned by the previous\n * operation.\n *\n * ## Examples\n *\n * Check a random number before it is handled. Below is an observable that will use a random number between 0 and 1,\n * and emit `'big'` or `'small'` depending on the size of that number. But we wanted to log what the original number\n * was, so we have added a `tap(console.log)`.\n *\n * ```ts\n * import { of, tap, map } from 'rxjs';\n *\n * of(Math.random()).pipe(\n *   tap(console.log),\n *   map(n => n > 0.5 ? 'big' : 'small')\n * ).subscribe(console.log);\n * ```\n *\n * Using `tap` to analyze a value and force an error. Below is an observable where in our system we only\n * want to emit numbers 3 or less we get from another source. We can force our observable to error\n * using `tap`.\n *\n * ```ts\n * import { of, tap } from 'rxjs';\n *\n * const source = of(1, 2, 3, 4, 5);\n *\n * source.pipe(\n *   tap(n => {\n *     if (n > 3) {\n *       throw new TypeError(`Value ${ n } is greater than 3`);\n *     }\n *   })\n * )\n * .subscribe({ next: console.log, error: err => console.log(err.message) });\n * ```\n *\n * We want to know when an observable completes before moving on to the next observable. The system\n * below will emit a random series of `'X'` characters from 3 different observables in sequence. The\n * only way we know when one observable completes and moves to the next one, in this case, is because\n * we have added a `tap` with the side effect of logging to console.\n *\n * ```ts\n * import { of, concatMap, interval, take, map, tap } from 'rxjs';\n *\n * of(1, 2, 3).pipe(\n *   concatMap(n => interval(1000).pipe(\n *     take(Math.round(Math.random() * 10)),\n *     map(() => 'X'),\n *     tap({ complete: () => console.log(`Done with ${ n }`) })\n *   ))\n * )\n * .subscribe(console.log);\n * ```\n *\n * @see {@link finalize}\n * @see {@link TapObserver}\n *\n * @param observerOrNext A next handler or partial observer\n * @param error An error handler\n * @param complete A completion handler\n * @return A function that returns an Observable identical to the source, but\n * runs the specified Observer or callback(s) for each item.\n */\nexport function tap<T>(\n  observerOrNext?: Partial<TapObserver<T>> | ((value: T) => void) | null,\n  error?: ((e: any) => void) | null,\n  complete?: (() => void) | null\n): MonoTypeOperatorFunction<T> {\n  // We have to check to see not only if next is a function,\n  // but if error or complete were passed. This is because someone\n  // could technically call tap like `tap(null, fn)` or `tap(null, null, fn)`.\n  const tapObserver =\n    isFunction(observerOrNext) || error || complete\n      ? // tslint:disable-next-line: no-object-literal-type-assertion\n        ({ next: observerOrNext as Exclude<typeof observerOrNext, Partial<TapObserver<T>>>, error, complete } as Partial<TapObserver<T>>)\n      : observerOrNext;\n\n  return tapObserver\n    ? operate((source, subscriber) => {\n        tapObserver.subscribe?.();\n        let isUnsub = true;\n        source.subscribe(\n          createOperatorSubscriber(\n            subscriber,\n            (value) => {\n              tapObserver.next?.(value);\n              subscriber.next(value);\n            },\n            () => {\n              isUnsub = false;\n              tapObserver.complete?.();\n              subscriber.complete();\n            },\n            (err) => {\n              isUnsub = false;\n              tapObserver.error?.(err);\n              subscriber.error(err);\n            },\n            () => {\n              if (isUnsub) {\n                tapObserver.unsubscribe?.();\n              }\n              tapObserver.finalize?.();\n            }\n          )\n        );\n      })\n    : // Tap was called with no valid tap observer or handler\n      // (e.g. `tap(null, null, null)` or `tap(null)` or `tap()`)\n      // so we're going to just mirror the source.\n      identity;\n}\n", "import { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, ObservableInput } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * An object interface used by {@link throttle} or {@link throttleTime} that ensure\n * configuration options of these operators.\n *\n * @see {@link throttle}\n * @see {@link throttleTime}\n */\nexport interface ThrottleConfig {\n  /**\n   * If `true`, the resulting Observable will emit the first value from the source\n   * Observable at the **start** of the \"throttling\" process (when starting an\n   * internal timer that prevents other emissions from the source to pass through).\n   * If `false`, it will not emit the first value from the source Observable at the\n   * start of the \"throttling\" process.\n   *\n   * If not provided, defaults to: `true`.\n   */\n  leading?: boolean;\n  /**\n   * If `true`, the resulting Observable will emit the last value from the source\n   * Observable at the **end** of the \"throttling\" process (when ending an internal\n   * timer that prevents other emissions from the source to pass through).\n   * If `false`, it will not emit the last value from the source Observable at the\n   * end of the \"throttling\" process.\n   *\n   * If not provided, defaults to: `false`.\n   */\n  trailing?: boolean;\n}\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](throttle.svg)\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, throttle, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttle(() => interval(1000)));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param durationSelector A function that receives a value from the source\n * Observable, for computing the silencing duration for each source value,\n * returned as an `ObservableInput`.\n * @param config A configuration object to define `leading` and `trailing`\n * behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return A function that returns an Observable that performs the throttle\n * operation to limit the rate of emissions from the source.\n */\nexport function throttle<T>(durationSelector: (value: T) => ObservableInput<any>, config?: ThrottleConfig): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    const { leading = true, trailing = false } = config ?? {};\n    let hasValue = false;\n    let sendValue: T | null = null;\n    let throttled: Subscription | null = null;\n    let isComplete = false;\n\n    const endThrottling = () => {\n      throttled?.unsubscribe();\n      throttled = null;\n      if (trailing) {\n        send();\n        isComplete && subscriber.complete();\n      }\n    };\n\n    const cleanupThrottling = () => {\n      throttled = null;\n      isComplete && subscriber.complete();\n    };\n\n    const startThrottle = (value: T) =>\n      (throttled = innerFrom(durationSelector(value)).subscribe(createOperatorSubscriber(subscriber, endThrottling, cleanupThrottling)));\n\n    const send = () => {\n      if (hasValue) {\n        // Ensure we clear out our value and hasValue flag\n        // before we emit, otherwise reentrant code can cause\n        // issues here.\n        hasValue = false;\n        const value = sendValue!;\n        sendValue = null;\n        // Emit the value.\n        subscriber.next(value);\n        !isComplete && startThrottle(value);\n      }\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        // Regarding the presence of throttled.closed in the following\n        // conditions, if a synchronous duration selector is specified - weird,\n        // but legal - an already-closed subscription will be assigned to\n        // throttled, so the subscription's closed property needs to be checked,\n        // too.\n        (value) => {\n          hasValue = true;\n          sendValue = value;\n          !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));\n        },\n        () => {\n          isComplete = true;\n          !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();\n        }\n      )\n    );\n  });\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { throttle, ThrottleConfig } from './throttle';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { timer } from '../observable/timer';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * ![](throttleTime.png)\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link SchedulerLike} for managing timers.\n *\n * ## Examples\n *\n * ### Limit click rate\n *\n * Emit clicks at a rate of at most one click per second\n *\n * ```ts\n * import { fromEvent, throttleTime } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttleTime(1000));\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param scheduler The {@link SchedulerLike} to use for\n * managing the timers that handle the throttling. Defaults to {@link asyncScheduler}.\n * @param config A configuration object to define `leading` and\n * `trailing` behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return A function that returns an Observable that performs the throttle\n * operation to limit the rate of emissions from the source.\n */\nexport function throttleTime<T>(\n  duration: number,\n  scheduler: SchedulerLike = asyncScheduler,\n  config?: ThrottleConfig\n): MonoTypeOperatorFunction<T> {\n  const duration$ = timer(duration, scheduler);\n  return throttle(() => duration$, config);\n}\n", "import { asyncScheduler } from '../scheduler/async';\nimport { SchedulerLike, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits an object containing the current value, and the time that has\n * passed between emitting the current value and the previous value, which is\n * calculated by using the provided `scheduler`'s `now()` method to retrieve\n * the current time at each emission, then calculating the difference. The `scheduler`\n * defaults to {@link asyncScheduler}, so by default, the `interval` will be in\n * milliseconds.\n *\n * <span class=\"informal\">Convert an Observable that emits items into one that\n * emits indications of the amount of time elapsed between those emissions.</span>\n *\n * ![](timeInterval.png)\n *\n * ## Example\n *\n * Emit interval between current value with the last value\n *\n * ```ts\n * import { interval, timeInterval } from 'rxjs';\n *\n * const seconds = interval(1000);\n *\n * seconds\n *   .pipe(timeInterval())\n *   .subscribe(value => console.log(value));\n *\n * // NOTE: The values will never be this precise,\n * // intervals created with `interval` or `setInterval`\n * // are non-deterministic.\n *\n * // { value: 0, interval: 1000 }\n * // { value: 1, interval: 1000 }\n * // { value: 2, interval: 1000 }\n * ```\n *\n * @param {SchedulerLike} [scheduler] Scheduler used to get the current time.\n * @return A function that returns an Observable that emits information about\n * value and interval.\n */\nexport function timeInterval<T>(scheduler: SchedulerLike = asyncScheduler): OperatorFunction<T, TimeInterval<T>> {\n  return operate((source, subscriber) => {\n    let last = scheduler.now();\n    source.subscribe(\n      createOperatorSubscriber(subscriber, (value) => {\n        const now = scheduler.now();\n        const interval = now - last;\n        last = now;\n        subscriber.next(new TimeInterval(value, interval));\n      })\n    );\n  });\n}\n\n// TODO(benlesh): make this an interface, export the interface, but not the implemented class,\n// there's no reason users should be manually creating this type.\n\nexport class TimeInterval<T> {\n  /**\n   * @deprecated Internal implementation detail, do not construct directly. Will be made an interface in v8.\n   */\n  constructor(public value: T, public interval: number) {}\n}\n", "import { async } from '../scheduler/async';\nimport { isValidDate } from '../util/isDate';\nimport { ObservableInput, OperatorFunction, SchedulerLike } from '../types';\nimport { timeout } from './timeout';\n\n/** @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(someDate, a$, scheduler)`, use the configuration object\n * `timeout({ first: someDate, with: () => a$, scheduler })`. Will be removed in v8. */\nexport function timeoutWith<T, R>(dueBy: Date, switchTo: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n/** @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(100, a$, scheduler)`, use the configuration object\n *  `timeout({ each: 100, with: () => a$, scheduler })`. Will be removed in v8. */\nexport function timeoutWith<T, R>(waitFor: number, switchTo: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n\n/**\n * When the passed timespan elapses before the source emits any given value, it will unsubscribe from the source,\n * and switch the subscription to another observable.\n *\n * <span class=\"informal\">Used to switch to a different observable if your source is being slow.</span>\n *\n * Useful in cases where:\n *\n * - You want to switch to a different source that may be faster.\n * - You want to notify a user that the data stream is slow.\n * - You want to emit a custom error rather than the {@link TimeoutError} emitted\n *   by the default usage of {@link timeout}.\n *\n * If the first parameter is passed as Date and the time of the Date arrives before the first value arrives from the source,\n * it will unsubscribe from the source and switch the subscription to another observable.\n *\n * <span class=\"informal\">Use Date object to switch to a different observable if the first value doesn't arrive by a specific time.</span>\n *\n * Can be used to set a timeout only for the first value, however it's recommended to use the {@link timeout} operator with\n * the `first` configuration to get the same effect.\n *\n * ## Examples\n *\n * Fallback to a faster observable\n *\n * ```ts\n * import { interval, timeoutWith } from 'rxjs';\n *\n * const slow$ = interval(1000);\n * const faster$ = interval(500);\n *\n * slow$\n *   .pipe(timeoutWith(900, faster$))\n *   .subscribe(console.log);\n * ```\n *\n * Emit your own custom timeout error\n *\n * ```ts\n * import { interval, timeoutWith, throwError } from 'rxjs';\n *\n * class CustomTimeoutError extends Error {\n *   constructor() {\n *     super('It was too slow');\n *     this.name = 'CustomTimeoutError';\n *   }\n * }\n *\n * const slow$ = interval(1000);\n *\n * slow$\n *   .pipe(timeoutWith(900, throwError(() => new CustomTimeoutError())))\n *   .subscribe({\n *     error: err => console.error(err.message)\n *   });\n * ```\n *\n * @see {@link timeout}\n *\n * @param due When passed a number, used as the time (in milliseconds) allowed between each value from the source before timeout\n * is triggered. When passed a Date, used as the exact time at which the timeout will be triggered if the first value does not arrive.\n * @param withObservable The observable to switch to when timeout occurs.\n * @param scheduler The scheduler to use with time-related operations within this operator. Defaults to {@link asyncScheduler}\n * @return A function that returns an Observable that mirrors behaviour of the\n * source Observable, unless timeout happens when it starts emitting values\n * from the `ObservableInput` passed as a second parameter.\n * @deprecated Replaced with {@link timeout}. Instead of `timeoutWith(100, a$, scheduler)`, use {@link timeout} with the configuration\n * object: `timeout({ each: 100, with: () => a$, scheduler })`. Instead of `timeoutWith(someDate, a$, scheduler)`, use {@link timeout}\n * with the configuration object: `timeout({ first: someDate, with: () => a$, scheduler })`. Will be removed in v8.\n */\nexport function timeoutWith<T, R>(\n  due: number | Date,\n  withObservable: ObservableInput<R>,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, T | R> {\n  let first: number | Date | undefined;\n  let each: number | undefined;\n  let _with: () => ObservableInput<R>;\n  scheduler = scheduler ?? async;\n\n  if (isValidDate(due)) {\n    first = due;\n  } else if (typeof due === 'number') {\n    each = due;\n  }\n\n  if (withObservable) {\n    _with = () => withObservable;\n  } else {\n    throw new TypeError('No observable provided to switch to');\n  }\n\n  if (first == null && each == null) {\n    // Ensure timeout was provided at runtime.\n    throw new TypeError('No timeout provided.');\n  }\n\n  return timeout<T, ObservableInput<R>>({\n    first,\n    each,\n    scheduler,\n    with: _with,\n  });\n}\n", "import { OperatorFunction, TimestampProvider, Timestamp } from '../types';\nimport { dateTimestampProvider } from '../scheduler/dateTimestampProvider';\nimport { map } from './map';\n\n/**\n * Attaches a timestamp to each item emitted by an observable indicating when it was emitted\n *\n * The `timestamp` operator maps the *source* observable stream to an object of type\n * `{value: T, timestamp: R}`. The properties are generically typed. The `value` property contains the value\n * and type of the *source* observable. The `timestamp` is generated by the schedulers `now` function. By\n * default, it uses the `asyncScheduler` which simply returns `Date.now()` (milliseconds since 1970/01/01\n * 00:00:00:000) and therefore is of type `number`.\n *\n * ![](timestamp.png)\n *\n * ## Example\n *\n * In this example there is a timestamp attached to the document's click events\n *\n * ```ts\n * import { fromEvent, timestamp } from 'rxjs';\n *\n * const clickWithTimestamp = fromEvent(document, 'click').pipe(\n *   timestamp()\n * );\n *\n * // Emits data of type { value: PointerEvent, timestamp: number }\n * clickWithTimestamp.subscribe(data => {\n *   console.log(data);\n * });\n * ```\n *\n * @param timestampProvider An object with a `now()` method used to get the current timestamp.\n * @return A function that returns an Observable that attaches a timestamp to\n * each item emitted by the source Observable indicating when it was emitted.\n */\nexport function timestamp<T>(timestampProvider: TimestampProvider = dateTimestampProvider): OperatorFunction<T, Timestamp<T>> {\n  return map((value: T) => ({ value, timestamp: timestampProvider.now() }));\n}\n", "import { Observable } from '../Observable';\nimport { OperatorFunction, ObservableInput } from '../types';\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * ![](window.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * `windowBoundaries` emits an item. `windowBoundaries` can be any type that\n * `ObservableInput` accepts. It internally gets converted to an Observable.\n * Because each window is an Observable, the output is a higher-order Observable.\n *\n * ## Example\n *\n * In every window of 1 second each, emit at most 2 click events\n *\n * ```ts\n * import { fromEvent, interval, window, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const sec = interval(1000);\n * const result = clicks.pipe(\n *   window(sec),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param windowBoundaries An `ObservableInput` that completes the\n * previous window and starts a new window.\n * @return A function that returns an Observable of windows, which are\n * Observables emitting values of the source Observable.\n */\nexport function window<T>(windowBoundaries: ObservableInput<any>): OperatorFunction<T, Observable<T>> {\n  return operate((source, subscriber) => {\n    let windowSubject: Subject<T> = new Subject<T>();\n\n    subscriber.next(windowSubject.asObservable());\n\n    const errorHandler = (err: any) => {\n      windowSubject.error(err);\n      subscriber.error(err);\n    };\n\n    // Subscribe to our source\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => windowSubject?.next(value),\n        () => {\n          windowSubject.complete();\n          subscriber.complete();\n        },\n        errorHandler\n      )\n    );\n\n    // Subscribe to the window boundaries.\n    innerFrom(windowBoundaries).subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        () => {\n          windowSubject.complete();\n          subscriber.next((windowSubject = new Subject()));\n        },\n        noop,\n        errorHandler\n      )\n    );\n\n    return () => {\n      // Unsubscribing the subject ensures that anyone who has captured\n      // a reference to this window that tries to use it after it can\n      // no longer get values from the source will get an ObjectUnsubscribedError.\n      windowSubject?.unsubscribe();\n      windowSubject = null!;\n    };\n  });\n}\n", "import { Subject } from '../Subject';\nimport { asyncScheduler } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { Observer, OperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\n\nexport function windowTime<T>(windowTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(\n  windowTimeSpan: number,\n  windowCreationInterval: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(\n  windowTimeSpan: number,\n  windowCreationInterval: number | null | void,\n  maxWindowSize: number,\n  scheduler?: SchedulerLike\n): OperatorFunction<T, Observable<T>>;\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowTime.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * ## Examples\n *\n * In every window of 1 second each, emit at most 2 click events\n *\n * ```ts\n * import { fromEvent, windowTime, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds start a window 1 second long, and emit at most 2 click events per window\n *\n * ```ts\n * import { fromEvent, windowTime, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Same as example above but with `maxWindowCount` instead of `take`\n *\n * ```ts\n * import { fromEvent, windowTime, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000, 2), // take at most 2 emissions from each window\n *   mergeAll()                 // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param windowTimeSpan The amount of time, in milliseconds, to fill each window.\n * @param windowCreationInterval The interval at which to start new\n * windows.\n * @param maxWindowSize Max number of\n * values each window can emit before completion.\n * @param scheduler The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return A function that returns an Observable of windows, which in turn are\n * Observables.\n */\nexport function windowTime<T>(windowTimeSpan: number, ...otherArgs: any[]): OperatorFunction<T, Observable<T>> {\n  const scheduler = popScheduler(otherArgs) ?? asyncScheduler;\n  const windowCreationInterval = (otherArgs[0] as number) ?? null;\n  const maxWindowSize = (otherArgs[1] as number) || Infinity;\n\n  return operate((source, subscriber) => {\n    // The active windows, their related subscriptions, and removal functions.\n    let windowRecords: WindowRecord<T>[] | null = [];\n    // If true, it means that every time we close a window, we want to start a new window.\n    // This is only really used for when *just* the time span is passed.\n    let restartOnClose = false;\n\n    const closeWindow = (record: { window: Subject<T>; subs: Subscription }) => {\n      const { window, subs } = record;\n      window.complete();\n      subs.unsubscribe();\n      arrRemove(windowRecords, record);\n      restartOnClose && startWindow();\n    };\n\n    /**\n     * Called every time we start a new window. This also does\n     * the work of scheduling the job to close the window.\n     */\n    const startWindow = () => {\n      if (windowRecords) {\n        const subs = new Subscription();\n        subscriber.add(subs);\n        const window = new Subject<T>();\n        const record = {\n          window,\n          subs,\n          seen: 0,\n        };\n        windowRecords.push(record);\n        subscriber.next(window.asObservable());\n        executeSchedule(subs, scheduler, () => closeWindow(record), windowTimeSpan);\n      }\n    };\n\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      // The user passed both a windowTimeSpan (required), and a creation interval\n      // That means we need to start new window on the interval, and those windows need\n      // to wait the required time span before completing.\n      executeSchedule(subscriber, scheduler, startWindow, windowCreationInterval, true);\n    } else {\n      restartOnClose = true;\n    }\n\n    startWindow();\n\n    /**\n     * We need to loop over a copy of the window records several times in this operator.\n     * This is to save bytes over the wire more than anything.\n     * The reason we copy the array is that reentrant code could mutate the array while\n     * we are iterating over it.\n     */\n    const loop = (cb: (record: WindowRecord<T>) => void) => windowRecords!.slice().forEach(cb);\n\n    /**\n     * Used to notify all of the windows and the subscriber in the same way\n     * in the error and complete handlers.\n     */\n    const terminate = (cb: (consumer: Observer<any>) => void) => {\n      loop(({ window }) => cb(window));\n      cb(subscriber);\n      subscriber.unsubscribe();\n    };\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value: T) => {\n          // Notify all windows of the value.\n          loop((record) => {\n            record.window.next(value);\n            // If the window is over the max size, we need to close it.\n            maxWindowSize <= ++record.seen && closeWindow(record);\n          });\n        },\n        // Complete the windows and the downstream subscriber and clean up.\n        () => terminate((consumer) => consumer.complete()),\n        // Notify the windows and the downstream subscriber of the error and clean up.\n        (err) => terminate((consumer) => consumer.error(err))\n      )\n    );\n\n    // Additional finalization. This will be called when the\n    // destination tears down. Other finalizations are registered implicitly\n    // above via subscription.\n    return () => {\n      // Ensure that the buffer is released.\n      windowRecords = null!;\n    };\n  });\n}\n\ninterface WindowRecord<T> {\n  seen: number;\n  window: Subject<T>;\n  subs: Subscription;\n}\n", "import { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowWhen.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * ## Example\n *\n * Emit only the first two clicks events in every window of [1-5] random seconds\n *\n * ```ts\n * import { fromEvent, windowWhen, interval, map, take, mergeAll } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowWhen(() => interval(1000 + Math.random() * 4000)),\n *   map(win => win.pipe(take(2))), // take at most 2 emissions from each window\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return A function that returns an Observable of windows, which in turn are\n * Observables.\n */\nexport function windowWhen<T>(closingSelector: () => ObservableInput<any>): OperatorFunction<T, Observable<T>> {\n  return operate((source, subscriber) => {\n    let window: Subject<T> | null;\n    let closingSubscriber: Subscriber<any> | undefined;\n\n    /**\n     * When we get an error, we have to notify both the\n     * destination subscriber and the window.\n     */\n    const handleError = (err: any) => {\n      window!.error(err);\n      subscriber.error(err);\n    };\n\n    /**\n     * Called every time we need to open a window.\n     * Recursive, as it will start the closing notifier, which\n     * inevitably *should* call openWindow -- but may not if\n     * it is a \"never\" observable.\n     */\n    const openWindow = () => {\n      // We need to clean up our closing subscription,\n      // we only cared about the first next or complete notification.\n      closingSubscriber?.unsubscribe();\n\n      // Close our window before starting a new one.\n      window?.complete();\n\n      // Start the new window.\n      window = new Subject<T>();\n      subscriber.next(window.asObservable());\n\n      // Get our closing notifier.\n      let closingNotifier: Observable<any>;\n      try {\n        closingNotifier = innerFrom(closingSelector());\n      } catch (err) {\n        handleError(err);\n        return;\n      }\n\n      // Subscribe to the closing notifier, be sure\n      // to capture the subscriber (aka Subscription)\n      // so we can clean it up when we close the window\n      // and open a new one.\n      closingNotifier.subscribe((closingSubscriber = createOperatorSubscriber(subscriber, openWindow, openWindow, handleError)));\n    };\n\n    // Start the first window.\n    openWindow();\n\n    // Subscribe to the source\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => window!.next(value),\n        () => {\n          // The source completed, close the window and complete.\n          window!.complete();\n          subscriber.complete();\n        },\n        handleError,\n        () => {\n          // Be sure to clean up our closing subscription\n          // when this tears down.\n          closingSubscriber?.unsubscribe();\n          window = null!;\n        }\n      )\n    );\n  });\n}\n", "import { OperatorFunction, ObservableInput } from '../types';\nimport { zip } from '../observable/zip';\nimport { joinAllInternals } from './joinAllInternals';\n\n/**\n * Collects all observable inner sources from the source, once the source completes,\n * it will subscribe to all inner sources, combining their values by index and emitting\n * them.\n *\n * @see {@link zipWith}\n * @see {@link zip}\n */\nexport function zipAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function zipAll<T>(): OperatorFunction<any, T[]>;\nexport function zipAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function zipAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\nexport function zipAll<T, R>(project?: (...values: T[]) => R) {\n  return joinAllInternals(zip, project);\n}\n", "/* Operator exports */\nexport { audit } from '../internal/operators/audit';\nexport { auditTime } from '../internal/operators/auditTime';\nexport { buffer } from '../internal/operators/buffer';\nexport { bufferCount } from '../internal/operators/bufferCount';\nexport { bufferTime } from '../internal/operators/bufferTime';\nexport { bufferToggle } from '../internal/operators/bufferToggle';\nexport { bufferWhen } from '../internal/operators/bufferWhen';\nexport { catchError } from '../internal/operators/catchError';\nexport { combineAll } from '../internal/operators/combineAll';\nexport { combineLatestAll } from '../internal/operators/combineLatestAll';\nexport { combineLatest } from '../internal/operators/combineLatest';\nexport { combineLatestWith } from '../internal/operators/combineLatestWith';\nexport { concat } from '../internal/operators/concat';\nexport { concatAll } from '../internal/operators/concatAll';\nexport { concatMap } from '../internal/operators/concatMap';\nexport { concatMapTo } from '../internal/operators/concatMapTo';\nexport { concatWith } from '../internal/operators/concatWith';\nexport { connect, ConnectConfig } from '../internal/operators/connect';\nexport { count } from '../internal/operators/count';\nexport { debounce } from '../internal/operators/debounce';\nexport { debounceTime } from '../internal/operators/debounceTime';\nexport { defaultIfEmpty } from '../internal/operators/defaultIfEmpty';\nexport { delay } from '../internal/operators/delay';\nexport { delayWhen } from '../internal/operators/delayWhen';\nexport { dematerialize } from '../internal/operators/dematerialize';\nexport { distinct } from '../internal/operators/distinct';\nexport { distinctUntilChanged } from '../internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from '../internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from '../internal/operators/elementAt';\nexport { endWith } from '../internal/operators/endWith';\nexport { every } from '../internal/operators/every';\nexport { exhaust } from '../internal/operators/exhaust';\nexport { exhaustAll } from '../internal/operators/exhaustAll';\nexport { exhaustMap } from '../internal/operators/exhaustMap';\nexport { expand } from '../internal/operators/expand';\nexport { filter } from '../internal/operators/filter';\nexport { finalize } from '../internal/operators/finalize';\nexport { find } from '../internal/operators/find';\nexport { findIndex } from '../internal/operators/findIndex';\nexport { first } from '../internal/operators/first';\nexport { groupBy, BasicGroupByOptions, GroupByOptionsWithElement } from '../internal/operators/groupBy';\nexport { ignoreElements } from '../internal/operators/ignoreElements';\nexport { isEmpty } from '../internal/operators/isEmpty';\nexport { last } from '../internal/operators/last';\nexport { map } from '../internal/operators/map';\nexport { mapTo } from '../internal/operators/mapTo';\nexport { materialize } from '../internal/operators/materialize';\nexport { max } from '../internal/operators/max';\nexport { merge } from '../internal/operators/merge';\nexport { mergeAll } from '../internal/operators/mergeAll';\nexport { flatMap } from '../internal/operators/flatMap';\nexport { mergeMap } from '../internal/operators/mergeMap';\nexport { mergeMapTo } from '../internal/operators/mergeMapTo';\nexport { mergeScan } from '../internal/operators/mergeScan';\nexport { mergeWith } from '../internal/operators/mergeWith';\nexport { min } from '../internal/operators/min';\nexport { multicast } from '../internal/operators/multicast';\nexport { observeOn } from '../internal/operators/observeOn';\nexport { onErrorResumeNext } from '../internal/operators/onErrorResumeNextWith';\nexport { pairwise } from '../internal/operators/pairwise';\nexport { partition } from '../internal/operators/partition';\nexport { pluck } from '../internal/operators/pluck';\nexport { publish } from '../internal/operators/publish';\nexport { publishBehavior } from '../internal/operators/publishBehavior';\nexport { publishLast } from '../internal/operators/publishLast';\nexport { publishReplay } from '../internal/operators/publishReplay';\nexport { race } from '../internal/operators/race';\nexport { raceWith } from '../internal/operators/raceWith';\nexport { reduce } from '../internal/operators/reduce';\nexport { repeat, RepeatConfig } from '../internal/operators/repeat';\nexport { repeatWhen } from '../internal/operators/repeatWhen';\nexport { retry, RetryConfig } from '../internal/operators/retry';\nexport { retryWhen } from '../internal/operators/retryWhen';\nexport { refCount } from '../internal/operators/refCount';\nexport { sample } from '../internal/operators/sample';\nexport { sampleTime } from '../internal/operators/sampleTime';\nexport { scan } from '../internal/operators/scan';\nexport { sequenceEqual } from '../internal/operators/sequenceEqual';\nexport { share, ShareConfig } from '../internal/operators/share';\nexport { shareReplay, ShareReplayConfig } from '../internal/operators/shareReplay';\nexport { single } from '../internal/operators/single';\nexport { skip } from '../internal/operators/skip';\nexport { skipLast } from '../internal/operators/skipLast';\nexport { skipUntil } from '../internal/operators/skipUntil';\nexport { skipWhile } from '../internal/operators/skipWhile';\nexport { startWith } from '../internal/operators/startWith';\nexport { subscribeOn } from '../internal/operators/subscribeOn';\nexport { switchAll } from '../internal/operators/switchAll';\nexport { switchMap } from '../internal/operators/switchMap';\nexport { switchMapTo } from '../internal/operators/switchMapTo';\nexport { switchScan } from '../internal/operators/switchScan';\nexport { take } from '../internal/operators/take';\nexport { takeLast } from '../internal/operators/takeLast';\nexport { takeUntil } from '../internal/operators/takeUntil';\nexport { takeWhile } from '../internal/operators/takeWhile';\nexport { tap, TapObserver } from '../internal/operators/tap';\nexport { throttle, ThrottleConfig } from '../internal/operators/throttle';\nexport { throttleTime } from '../internal/operators/throttleTime';\nexport { throwIfEmpty } from '../internal/operators/throwIfEmpty';\nexport { timeInterval } from '../internal/operators/timeInterval';\nexport { timeout, TimeoutConfig, TimeoutInfo } from '../internal/operators/timeout';\nexport { timeoutWith } from '../internal/operators/timeoutWith';\nexport { timestamp } from '../internal/operators/timestamp';\nexport { toArray } from '../internal/operators/toArray';\nexport { window } from '../internal/operators/window';\nexport { windowCount } from '../internal/operators/windowCount';\nexport { windowTime } from '../internal/operators/windowTime';\nexport { windowToggle } from '../internal/operators/windowToggle';\nexport { windowWhen } from '../internal/operators/windowWhen';\nexport { withLatestFrom } from '../internal/operators/withLatestFrom';\nexport { zip } from '../internal/operators/zip';\nexport { zipAll } from '../internal/operators/zipAll';\nexport { zipWith } from '../internal/operators/zipWith';\n", "import { not } from '../util/not';\nimport { filter } from './filter';\nimport { Observable } from '../Observable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n *\n * Partition click events into those on DIV elements and those elsewhere\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { partition } from 'rxjs/operators';\n *\n * const div = document.createElement('div');\n * div.style.cssText = 'width: 200px; height: 200px; background: #09c;';\n * document.body.appendChild(div);\n *\n * const clicks = fromEvent(document, 'click');\n * const [clicksOnDivs, clicksElsewhere] = clicks.pipe(partition(ev => (<HTMLElement>ev.target).tagName === 'DIV'));\n *\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an array with two Observables: one with\n * values that passed the predicate, and another with values that did not pass\n * the predicate.\n * @deprecated Replaced with the `partition` static creation function. Will be removed in v8.\n */\nexport function partition<T>(\n  predicate: (value: T, index: number) => boolean,\n  thisArg?: any\n): UnaryFunction<Observable<T>, [Observable<T>, Observable<T>]> {\n  return (source: Observable<T>) =>\n    [filter(predicate, thisArg)(source), filter(not(predicate, thisArg))(source)] as [Observable<T>, Observable<T>];\n}\n", "export interface IModalTheme {\n  bgColor: string;\n  textColor: string;\n  solidTextColor: string;\n  headerButtonColor: string;\n  dividerColor: string;\n  helpBgColor: string;\n  notAvailableTextColor: string;\n  notAvailableBgColor: string;\n  notAvailableBorderColor: string;\n}\n\n/**\n * @deprecated - This type is deprecated, use `IModalTheme` instead\n */\nexport type ITheme = IModalTheme;\n\nexport interface IButtonTheme {\n  bgColor: string;\n  textColor: string;\n  solidTextColor: string;\n  dividerColor: string;\n  buttonPadding: string;\n  buttonBorderRadius: string;\n}\n\nexport enum WalletNetwork {\n  PUBLIC = 'Public Global Stellar Network ; September 2015',\n  TESTNET = 'Test SDF Network ; September 2015',\n  FUTURENET = 'Test SDF Future Network ; October 2022',\n  SANDBOX = 'Local Sandbox Stellar Network ; September 2022',\n  STANDALONE = 'Standalone Network ; February 2017',\n}\n\nexport enum ModuleType {\n  HW_WALLET = 'HW_WALLET',\n  HOT_WALLET = 'HOT_WALLET',\n  BRIDGE_WALLET = 'BRIDGE_WALLET',\n  AIR_GAPED_WALLET = 'AIR_GAPED_WALLET',\n}\n\nexport interface ISupportedWallet {\n  id: string;\n  name: string;\n  type: string;\n  isAvailable: boolean;\n  isPlatformWrapper: boolean;\n  icon: string;\n  url: string;\n}\n\n/**\n * The Kit Actions are the methods the kit use to interact with the Wallet/Service\n */\nexport interface KitActions {\n  /**\n   * Function used to request the public key from the active account or\n   * specific path on a wallet.\n   *\n   * @param params\n   * @param params.path - The path to tell the wallet which position to ask. This is commonly used in hardware wallets.\n   * @param params.skipRequestAccess - Freighter separates the access request from the logic of getting the address, if this is set to true we will avoid requesting the access\n   *\n   * @return Promise<{ address: string }>\n   */\n  getAddress(params?: { path?: string; skipRequestAccess?: boolean; }): Promise<{ address: string }>;\n\n  /**\n   * A function to request a wallet to sign a built transaction in its XDR mode\n   *\n   * @param xdr - A Transaction or a FeeBumpTransaction\n   * @param opts - Options compatible with https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0043.md#signtransaction\n   * @param opts.networkPassphrase - The Stellar network to use when signing\n   * @param opts.address - The public key of the account that should be used to sign\n   * @param opts.path - This options is added for special cases like Hardware wallets\n   *\n   * @return Promise<{ signedTxXdr: string; signerAddress: string }>\n   */\n  signTransaction(\n    xdr: string,\n    opts?: {\n      networkPassphrase?: string;\n      address?: string;\n      path?: string;\n      submit?: boolean;\n      submitUrl?: string;\n    }\n  ): Promise<{ signedTxXdr: string; signerAddress?: string }>;\n\n  /**\n   * A function to request a wallet to sign an AuthEntry XDR.\n   *\n   * @param authEntry - An XDR string version of `HashIdPreimageSorobanAuthorization`\n   * @param opts - Options compatible with https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0043.md#signauthentry\n   * @param opts.networkPassphrase - The Stellar network to use when signing\n   * @param opts.address - The public key of the account that should be used to sign\n   * @param opts.path - This options is added for special cases like Hardware wallets\n   *\n   * @return - Promise<{ signedAuthEntry: string; signerAddress: string }>\n   */\n  signAuthEntry(\n    authEntry: string,\n    opts?: {\n      networkPassphrase?: string;\n      address?: string;\n      path?: string;\n    }\n  ): Promise<{ signedAuthEntry: string; signerAddress?: string }>;\n\n  /**\n   * A function to request a wallet to sign an AuthEntry XDR.\n   *\n   * @param message - An arbitrary string rather than a transaction or auth entry\n   * @param opts - Options compatible with https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0043.md#signmessage\n   * @param opts.networkPassphrase - The Stellar network to use when signing\n   * @param opts.address - The public key of the account that should be used to sign\n   * @param opts.path - This options is added for special cases like Hardware wallets\n   *\n   * @return - Promise<{ signedMessage: string; signerAddress: string }>\n   */\n  signMessage(\n    message: string,\n    opts?: {\n      networkPassphrase?: string;\n      address?: string;\n      path?: string;\n    }\n  ): Promise<{ signedMessage: string; signerAddress?: string }>;\n\n  /**\n   * A function to request the current selected network in the wallet. This comes\n   * handy when you are dealing with a wallet that doesn't allow you to specify which network to use (For example Lobstr and Rabet)\n   *\n   * @return - Promise<{ network: string; networkPassphrase: string }>\n   */\n  getNetwork(): Promise<{ network: string; networkPassphrase: string }>;\n\n  /**\n   * This method should be included if your wallet have some sort of async connection, for example WalletConnect\n   * Once this method is called, the module should clear all connections\n   */\n  disconnect?(): Promise<void>;\n}\n\n/**\n * A module is a \"plugin\" we can use within the kit so is able to handle a\n * specific type of wallet/service. There are some modules that are already\n * in the kit but any wallet developer can create their own plugins\n */\nexport interface ModuleInterface extends KitActions {\n  /**\n   * The Module type is used for filtering purposes, define the correct one in\n   * your module so we display it accordingly\n   */\n  moduleType: ModuleType;\n\n  /**\n   * This ID of the module, you should expose this ID as a constant variable\n   * so developers can use it to show/filter this module if they need to.\n   */\n  productId: string;\n\n  /**\n   * This is the name the kit will show in the builtin Modal.\n   */\n  productName: string;\n\n  /**\n   * This is the URL where users can either download, buy and just know how to\n   * get the product.\n   */\n  productUrl: string;\n\n  /**\n   * This icon will be displayed in the builtin Modal along with the product name.\n   */\n  productIcon: string;\n\n  /**\n   * This function should return true is the wallet is installed and/or available.\n   * If for example this wallet/service doesn't need to be installed to be used,\n   * return `true`.\n   *\n   * Important:\n   * Your wallet/library needs to be able to answer this function in less than 500ms.\n   * Otherwise, the kit will show it as unavailable\n   *\n   */\n  isAvailable(): Promise<boolean>;\n\n  /**\n   * This method will take care of letting the kit know if the user is currently using this wallet to open the dapp.\n   * An example will be how Freighter, xBull, Lobstr, etc have in-app browsers in their mobile versions\n   *\n   * Important:\n   * Your wallet/library needs to be able to answer this request in less than 500ms.\n   * Otherwise, the kit will assume is not wrapping the site\n   */\n  isPlatformWrapper?(): Promise<boolean>;\n}\n", "import { createStore, select, setProp, withProps } from '@ngneat/elf';\nimport { Observable } from 'rxjs';\nimport { ISupportedWallet, IModalTheme, WalletNetwork, IButtonTheme } from '../types';\n\nexport interface StateProps {\n  allowedWallets: ISupportedWallet[];\n\n  horizonUrl?: string;\n\n  selectedNetwork?: WalletNetwork;\n  selectedModuleId?: string;\n\n  modalTheme?: IModalTheme;\n  buttonTheme?: IButtonTheme;\n\n  activeAddress?: string;\n  mnemonicPath?: string;\n  hardwareWalletPaths: { publicKey: string; index: number }[];\n}\n\nexport const store = createStore(\n  { name: 'state' },\n  withProps<StateProps>({\n    allowedWallets: [],\n    hardwareWalletPaths: [],\n  })\n);\n\nexport const allowedWallets$: Observable<ISupportedWallet[]> = store.pipe(\n  select((state: StateProps) => state.allowedWallets)\n);\n\nexport const selectedNetwork$: Observable<StateProps['selectedNetwork']> = store.pipe(\n  select((state: StateProps) => state.selectedNetwork)\n);\n\nexport const modalTheme$: Observable<IModalTheme | undefined> = store.pipe(\n  select((state: StateProps) => state.modalTheme)\n);\n\nexport const buttonTheme$: Observable<IButtonTheme | undefined> = store.pipe(\n  select((state: StateProps) => state.buttonTheme)\n);\n\nexport const activeAddress$: Observable<string | undefined> = store.pipe(\n  select((state: StateProps) => state.activeAddress)\n);\n\nexport const horizonUrl$: Observable<string | undefined> = store.pipe(select((state: StateProps) => state.horizonUrl));\n\nexport const mnemonicPath$: Observable<string | undefined> = store.pipe(\n  select((state: StateProps) => state.mnemonicPath)\n);\n\nexport const hardwareWalletPaths$: Observable<{ publicKey: string; index: number }[]> = store.pipe(\n  select((state: StateProps) => state.hardwareWalletPaths)\n);\n\nexport function setSelectedModuleId(moduleId: Required<StateProps['selectedModuleId']>): void {\n  store.update(setProp('selectedModuleId', moduleId));\n}\n\nexport function setNetwork(network: WalletNetwork): void {\n  if (!Object.values(WalletNetwork).includes(network)) {\n    throw new Error(`Wallet network \"${network}\" is not supported`);\n  }\n\n  store.update(setProp('selectedNetwork', network));\n}\n\nexport function setModalTheme(theme: IModalTheme): void {\n  store.update(setProp('modalTheme', theme));\n}\n\nexport function seButtonTheme(theme: IButtonTheme): void {\n  store.update(setProp('buttonTheme', theme));\n}\n\nexport function setAllowedWallets(data: ISupportedWallet[]) {\n  store.update(setProp('allowedWallets', data));\n}\n\nexport function setAddress(address: string): void {\n  store.update(setProp('activeAddress', address));\n}\n\nexport function removeAddress(): void {\n  store.update(setProp('activeAddress', undefined));\n}\n\nexport function setHorizonUrl(url: string): void {\n  store.update(setProp('horizonUrl', url));\n}\n\nexport function setMnemonicPath(path: string): void {\n  store.update(setProp('mnemonicPath', path));\n}\n\nexport function removeMnemonicPath(): void {\n  store.update(setProp('mnemonicPath', undefined));\n}\n\nexport function setHardwareWalletPaths(accounts: { publicKey: string; index: number }[]): void {\n  store.update(setProp('hardwareWalletPaths', accounts));\n}\n\nexport function removeHardwareWalletPaths(): void {\n  store.update(setProp('hardwareWalletPaths', []));\n}\n", "import { StellarWalletsButton } from './components/button/stellar-wallets-button';\nimport { StellarWalletsModal } from './components/modal/stellar-wallets-modal';\nimport {\n  removeAddress,\n  seButtonTheme,\n  setAddress,\n  setAllowedWallets,\n  setHorizonUrl,\n  setModalTheme,\n  setNetwork,\n  setSelectedModuleId,\n  store,\n} from './state/store';\nimport { IButtonTheme, ISupportedWallet, IModalTheme, KitActions, ModuleInterface, WalletNetwork } from './types';\n\nexport interface StellarWalletsKitParams {\n  selectedWalletId?: string;\n  network: WalletNetwork;\n  modules: ModuleInterface[];\n  /**\n   * @deprecated - This parameter will be removed in a future release, use `modalTheme` instead\n   */\n  theme?: IModalTheme;\n  modalTheme?: IModalTheme;\n  buttonTheme?: IButtonTheme;\n}\n\nexport class StellarWalletsKit implements KitActions {\n  private buttonElement?: StellarWalletsButton;\n  private modalElement?: StellarWalletsModal;\n  private readonly modules: ModuleInterface[];\n\n  private get selectedModule(): ModuleInterface {\n    const { selectedModuleId } = store.getValue();\n\n    if (!selectedModuleId) {\n      throw { code: -3, message: 'Please set the wallet first' };\n    }\n\n    const target: ModuleInterface | undefined = this.modules.find(\n      (mod: ModuleInterface): boolean => mod.productId === selectedModuleId\n    );\n\n    if (!target) {\n      throw { code: -3, message: 'Please set the wallet first' };\n    }\n\n    return target;\n  }\n\n  constructor(params: StellarWalletsKitParams) {\n    this.modules = params.modules;\n    if (params.selectedWalletId) this.setWallet(params.selectedWalletId);\n    setNetwork(params.network);\n\n    const modalTheme: IModalTheme | undefined = params.theme || params.modalTheme;\n    if (modalTheme) {\n      setModalTheme(modalTheme);\n    }\n\n    if (params.buttonTheme) {\n      seButtonTheme(params.buttonTheme);\n    }\n\n    this.getSupportedWallets().then((value: ISupportedWallet[]): void => {\n      setAllowedWallets(value);\n    });\n  }\n\n  /**\n   * This method will return an array with all wallets supported by this kit but will let you know those the user have already installed/has access to\n   * There are wallets that are by default available since they either don't need to be installed or have a fallback\n   */\n  public async getSupportedWallets(): Promise<ISupportedWallet[]> {\n    return Promise.all(\n      this.modules.map(async (mod: ModuleInterface): Promise<ISupportedWallet> => {\n        const timer: Promise<false> = new Promise(r => setTimeout(() => r(false), 500));\n        return {\n          id: mod.productId,\n          name: mod.productName,\n          type: mod.moduleType,\n          icon: mod.productIcon,\n          isAvailable: await Promise.race([timer, mod.isAvailable()]),\n          isPlatformWrapper: await Promise.race([\n            timer, mod.isPlatformWrapper ? mod.isPlatformWrapper() : Promise.resolve(false)\n          ]),\n          url: mod.productUrl,\n        };\n      })\n    );\n  }\n\n  public setWallet(id: string): void {\n    const target: ModuleInterface | undefined = this.modules.find(\n      (mod: ModuleInterface): boolean => mod.productId === id\n    );\n\n    if (!target) {\n      throw new Error(`Wallet id \"${id}\" is not supported`);\n    }\n\n    setSelectedModuleId(target.productId);\n  }\n\n  public async getAddress(params?: { path?: string; skipRequestAccess?: boolean; }): Promise<{ address: string }> {\n    const { address } = await this.selectedModule.getAddress(params);\n    setAddress(address);\n    return { address };\n  }\n\n  public async signTransaction(\n    xdr: string,\n    opts?: {\n      networkPassphrase?: string;\n      address?: string;\n      path?: string;\n      submit?: boolean;\n      submitUrl?: string;\n    }\n  ): Promise<{ signedTxXdr: string; signerAddress?: string }> {\n    return this.selectedModule.signTransaction(xdr, {\n      ...opts,\n      networkPassphrase: opts?.networkPassphrase || store.getValue().selectedNetwork,\n    });\n  }\n\n  public async signAuthEntry(\n    authEntry: string,\n    opts?: {\n      networkPassphrase?: string;\n      address?: string;\n      path?: string;\n    }\n  ): Promise<{ signedAuthEntry: string; signerAddress?: string }> {\n    return this.selectedModule.signAuthEntry(authEntry, {\n      ...opts,\n      networkPassphrase: opts?.networkPassphrase || store.getValue().selectedNetwork,\n    });\n  }\n\n  public async signMessage(\n    message: string,\n    opts?: {\n      networkPassphrase?: string;\n      address?: string;\n      path?: string;\n    }\n  ): Promise<{ signedMessage: string; signerAddress?: string }> {\n    return this.selectedModule.signMessage(message, {\n      ...opts,\n      networkPassphrase: opts?.networkPassphrase || store.getValue().selectedNetwork,\n    });\n  }\n\n  async getNetwork(): Promise<{ network: string; networkPassphrase: string }> {\n    return this.selectedModule.getNetwork();\n  }\n\n  async disconnect(): Promise<void> {\n    removeAddress();\n  }\n\n  // ---- Button methods\n  public isButtonCreated(): boolean {\n    return !!this.buttonElement;\n  }\n\n  /**\n   * This method allows developers to set their own buttons (for connection and disconnection) on their website\n   * while letting the kit handle the logic behind opening the modal, setting and removing the address from the storage, etc\n   */\n  public assignButtons(params: {\n    connectEl: HTMLElement | string;\n    disconnectEl?: HTMLElement | string;\n    onConnect: (response: { address: string }) => void;\n    onDisconnect: () => void;\n  }): void {\n    const connectEl: HTMLElement =\n      typeof params.connectEl === 'string'\n        ? (document.querySelector(params.connectEl) as HTMLElement)\n        : params.connectEl;\n\n    if (!connectEl) throw new Error('connectEl is not available');\n\n    connectEl.addEventListener(\n      'click',\n      () => {\n        this.openModal({\n          onWalletSelected: option => {\n            setSelectedModuleId(option.id);\n            this.getAddress().then((r: { address: string }) => params.onConnect(r));\n          },\n        }).then();\n      },\n      false\n    );\n\n    if (!params.disconnectEl) return;\n\n    const disconnectEl: HTMLElement =\n      typeof params.disconnectEl === 'string'\n        ? (document.querySelector(params.disconnectEl) as HTMLElement)\n        : params.disconnectEl;\n\n    if (!disconnectEl) throw new Error('disconnectEl is not available');\n\n    disconnectEl.addEventListener(\n      'click',\n      () => {\n        params.onDisconnect();\n        removeAddress();\n\n        if (this.selectedModule.disconnect) {\n          this.selectedModule.disconnect().then();\n        }\n      },\n      false\n    );\n  }\n\n  /**\n   *\n   * @param params {Object}\n   * @param params.container {HTMLElement} - The container where the button should be rendered.\n   * @param params.onConnect {Function} - This callback is called after the user has clicked the button and selected a wallet\n   * @param params.onClosed {Function} - This callback is called if the user closes the modal without selecting any wallet.\n   * @param params.onError {Function} - This callback is called if there is an error while trying to get the address once the user has selected the wallet from the modal.\n   * @param params.onDisconnect {Function} - This callback is called once the user disconnects from the dropdown modal\n   * @param params.horizonUrl {String} - If this url is set, the dropdown modal will show the current XLM balance of the address fetched from the wallet\n   * @param params.buttonText {String} - A custom text to set inside the button.\n   */\n  public async createButton(params: {\n    container: HTMLElement;\n    onConnect: (response: { address: string }) => void;\n    onClosed?: (err: Error) => void;\n    onError?: (err: Error) => void;\n    onDisconnect: () => void;\n    horizonUrl?: string;\n    buttonText?: string;\n  }): Promise<void> {\n    if (this.buttonElement) {\n      throw new Error(`Stellar Wallets Kit button is already created`);\n    }\n\n    this.buttonElement = document.createElement('stellar-wallets-button') as StellarWalletsButton;\n\n    if (params.buttonText) {\n      this.buttonElement.setAttribute('buttonText', params.buttonText);\n    }\n\n    if (params.horizonUrl) {\n      setHorizonUrl(params.horizonUrl);\n    }\n\n    params.container.appendChild(this.buttonElement);\n\n    this.buttonElement.addEventListener(\n      'button-clicked',\n      () => {\n        this.openModal({\n          onWalletSelected: option => {\n            setSelectedModuleId(option.id);\n            this.getAddress()\n              .then((r: { address: string }) => params.onConnect(r))\n              .catch(err => {\n                if (params.onError) params.onError(err);\n              });\n          },\n          onClosed: (err: Error): void => {\n            if (params.onClosed) params.onClosed(err);\n          },\n        });\n      },\n      false\n    );\n\n    this.buttonElement.addEventListener(\n      'disconnect-wallet',\n      () => {\n        params.onDisconnect();\n\n        if (this.selectedModule.disconnect) {\n          this.selectedModule.disconnect();\n        }\n      },\n      false\n    );\n  }\n\n  /**\n   * Removes the button elements from the HTML and from the kit's instance.\n   *\n   * @param params.skipDisconnect - Set this to `true` if you want to prevent that we disconnect (for example, disconnecting WalletConnect or removing the address)\n   */\n  public async removeButton(params?: { skipDisconnect?: boolean }): Promise<void> {\n    if (!this.buttonElement) {\n      throw new Error(`Stellar Wallets Kit button hasn't been created yet`);\n    }\n\n    if (params?.skipDisconnect !== true) {\n      this.buttonElement.disconnect();\n    }\n\n    this.buttonElement.remove();\n    delete this.buttonElement;\n  }\n  // ---- END Button methods\n\n  // ---- Modal methods\n  public async openModal(params: {\n    onWalletSelected: (option: ISupportedWallet) => void;\n    onClosed?: (err: Error) => void;\n    modalTitle?: string;\n    notAvailableText?: string;\n  }): Promise<void> {\n    if (this.modalElement && !this.buttonElement) {\n      throw new Error(`Stellar Wallets Kit modal is already open`);\n    } else {\n      this.modalElement = document.createElement('stellar-wallets-modal') as StellarWalletsModal;\n    }\n\n    const supportedWallets: ISupportedWallet[] = await this.getSupportedWallets();\n    setAllowedWallets(supportedWallets);\n\n    this.modalElement.setAttribute('showModal', '');\n\n    if (params.modalTitle) {\n      this.modalElement.setAttribute('modalTitle', params.modalTitle);\n    }\n\n    if (params.notAvailableText) {\n      this.modalElement.setAttribute('notAvailableText', params.notAvailableText);\n    }\n\n    document.body.appendChild(this.modalElement);\n\n    const listener = (event: CustomEvent) => {\n      params.onWalletSelected(event.detail);\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      this.modalElement.removeEventListener('wallet-selected', listener, false);\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      document.body.removeChild(this.modalElement);\n      this.modalElement = undefined;\n    };\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.modalElement.addEventListener('wallet-selected', listener, false);\n\n    const errorListener = (event: CustomEvent) => {\n      if (params.onClosed) {\n        params.onClosed(event.detail);\n      }\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      this.modalElement.removeEventListener('wallet-selected', listener, false);\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      this.modalElement.removeEventListener('modal-closed', errorListener, false);\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      document.body.removeChild(this.modalElement);\n      this.modalElement = undefined;\n    };\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    this.modalElement.addEventListener('modal-closed', errorListener, false);\n  }\n  // ---- END Modal methods\n}\n", "import\"@lit/reactive-element\";import\"lit-html\";export*from\"lit-element/lit-element.js\";export*from\"lit-html/is-server.js\";\n//# sourceMappingURL=index.js.map\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Use this module if you want to create your own base class extending\n * {@link ReactiveElement}.\n * @packageDocumentation\n */\n\nimport {\n  getCompatibleStyle,\n  adoptStyles,\n  CSSResultGroup,\n  CSSResultOrNative,\n} from './css-tag.js';\nimport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\n// In the Node build, this import will be injected by Rollup:\n// import {HTMLElement, customElements} from '@lit-labs/ssr-dom-shim';\n\nexport * from './css-tag.js';\nexport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\n/**\n * Removes the `readonly` modifier from properties in the union K.\n *\n * This is a safer way to cast a value to a type with a mutable version of a\n * readonly field, than casting to an interface with the field re-declared\n * because it preserves the type of all the fields and warns on typos.\n */\ntype Mutable<T, K extends keyof T> = Omit<T, K> & {\n  -readonly [P in keyof Pick<T, K>]: P extends K ? T[P] : never;\n};\n\n// TODO (justinfagnani): Add `hasOwn` here when we ship ES2022\nconst {\n  is,\n  defineProperty,\n  getOwnPropertyDescriptor,\n  getOwnPropertyNames,\n  getOwnPropertySymbols,\n  getPrototypeOf,\n} = Object;\n\nconst NODE_MODE = false;\n\n// Lets a minifier replace globalThis references with a minified name\nconst global = globalThis;\n\nif (NODE_MODE) {\n  global.customElements ??= customElements;\n}\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nconst trustedTypes = (global as unknown as {trustedTypes?: {emptyScript: ''}})\n  .trustedTypes;\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nconst polyfillSupport = DEV_MODE\n  ? global.reactiveElementPolyfillSupportDevMode\n  : global.reactiveElementPolyfillSupport;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  global.litIssuedWarnings ??= new Set();\n\n  /**\n   * Issue a warning if we haven't already, based either on `code` or `warning`.\n   * Warnings are disabled automatically only by `warning`; disabling via `code`\n   * can be done by users.\n   */\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (\n      !global.litIssuedWarnings!.has(warning) &&\n      !global.litIssuedWarnings!.has(code)\n    ) {\n      console.warn(warning);\n      global.litIssuedWarnings!.add(warning);\n    }\n  };\n\n  queueMicrotask(() => {\n    issueWarning(\n      'dev-mode',\n      `Lit is in dev mode. Not recommended for production!`\n    );\n\n    // Issue polyfill support warning.\n    if (global.ShadyDOM?.inUse && polyfillSupport === undefined) {\n      issueWarning(\n        'polyfill-support-missing',\n        `Shadow DOM is being polyfilled via \\`ShadyDOM\\` but ` +\n          `the \\`polyfill-support\\` module has not been loaded.`\n      );\n    }\n  });\n}\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace ReactiveUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry = Update;\n    export interface Update {\n      kind: 'update';\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: ReactiveUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<ReactiveUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = <P extends PropertyKey>(\n  prop: P,\n  _obj: unknown\n): P => prop;\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string | null, type?: TypeHint): Type;\n\n  /**\n   * Called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n  | ComplexAttributeConverter<Type>\n  | ((value: string | null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * When set to `true`, indicates the property is internal private state. The\n   * property should not be set by users. When using TypeScript, this property\n   * should be marked as `private` or `protected`, and it is also a common\n   * practice to use a leading `_` in the name. The property is not added to\n   * `observedAttributes`.\n   */\n  readonly state?: boolean;\n\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean | string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n\n  /**\n   * Whether this property is wrapping accessors. This is set by `@property`\n   * to control the initial value change and reflection logic.\n   *\n   * @internal\n   */\n  wrapped?: boolean;\n\n  /**\n   * When `true`, uses the initial value of the property as the default value,\n   * which changes how attributes are handled:\n   *  - The initial value does *not* reflect, even if the `reflect` option is `true`.\n   *    Subsequent changes to the property will reflect, even if they are equal to the\n   *     default value.\n   *  - When the attribute is removed, the property is set to the default value\n   *  - The initial value will not trigger an old value in the `changedProperties` map\n   *    argument to update lifecycle methods.\n   *\n   * When set, properties must be initialized, either with a field initializer, or an\n   * assignment in the constructor. Not initializing the property may lead to\n   * improper handling of subsequent property assignments.\n   *\n   * While this behavior is opt-in, most properties that reflect to attributes should\n   * use `useDefault: true` so that their initial values do not reflect.\n   */\n  useDefault?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * A Map of property keys to values.\n *\n * Takes an optional type parameter T, which when specified as a non-any,\n * non-unknown type, will make the Map more strongly-typed, associating the map\n * keys with their corresponding value type on T.\n *\n * Use `PropertyValues<this>` when overriding ReactiveElement.update() and\n * other lifecycle methods in order to get stronger type-checking on keys\n * and values.\n */\n// This type is conditional so that if the parameter T is not specified, or\n// is `any`, the type will include `Map<PropertyKey, unknown>`. Since T is not\n// given in the uses of PropertyValues in this file, all uses here fallback to\n// meaning `Map<PropertyKey, unknown>`, but if a developer uses\n// `PropertyValues<this>` (or any other value for T) they will get a\n// strongly-typed Map type.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type PropertyValues<T = any> = T extends object\n  ? PropertyValueMap<T>\n  : Map<PropertyKey, unknown>;\n\n/**\n * Do not use, instead prefer {@linkcode PropertyValues}.\n */\n// This type must be exported such that JavaScript generated by the Google\n// Closure Compiler can import a type reference.\nexport interface PropertyValueMap<T> extends Map<PropertyKey, unknown> {\n  get<K extends keyof T>(k: K): T[K] | undefined;\n  set<K extends keyof T>(key: K, value: T[K]): this;\n  has<K extends keyof T>(k: K): boolean;\n  delete<K extends keyof T>(k: K): boolean;\n}\n\nexport const defaultConverter: ComplexAttributeConverter = {\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        value = value ? emptyStringForBooleanAttribute : null;\n        break;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        value = value == null ? value : JSON.stringify(value);\n        break;\n    }\n    return value;\n  },\n\n  fromAttribute(value: string | null, type?: unknown) {\n    let fromValue: unknown = value;\n    switch (type) {\n      case Boolean:\n        fromValue = value !== null;\n        break;\n      case Number:\n        fromValue = value === null ? null : Number(value);\n        break;\n      case Object:\n      case Array:\n        // Do *not* generate exception when invalid JSON is set as elements\n        // don't normally complain on being mis-configured.\n        // TODO(sorvell): Do generate exception in *dev mode*.\n        try {\n          // Assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n          fromValue = JSON.parse(value!) as unknown;\n        } catch (e) {\n          fromValue = null;\n        }\n        break;\n    }\n    return fromValue;\n  },\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean =>\n  !is(value, old);\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  useDefault: false,\n  hasChanged: notEqual,\n};\n\n/**\n * A string representing one of the supported dev mode warning categories.\n */\nexport type WarningKind =\n  | 'change-in-update'\n  | 'migration'\n  | 'async-perform-update';\n\nexport type Initializer = (element: ReactiveElement) => void;\n\n// Temporary, until google3 is on TypeScript 5.2\ndeclare global {\n  interface SymbolConstructor {\n    readonly metadata: unique symbol;\n  }\n}\n\n// Ensure metadata is enabled. TypeScript does not polyfill\n// Symbol.metadata, so we must ensure that it exists.\n(Symbol as {metadata: symbol}).metadata ??= Symbol('metadata');\n\ndeclare global {\n  // This is public global API, do not change!\n  // eslint-disable-next-line no-var\n  var litPropertyMetadata: WeakMap<\n    object,\n    Map<PropertyKey, PropertyDeclaration>\n  >;\n}\n\n// Map from a class's metadata object to property options\n// Note that we must use nullish-coalescing assignment so that we only use one\n// map even if we load multiple version of this module.\nglobal.litPropertyMetadata ??= new WeakMap<\n  object,\n  Map<PropertyKey, PropertyDeclaration>\n>();\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclasses to render updates as desired.\n * @noInheritDoc\n */\nexport abstract class ReactiveElement\n  // In the Node build, this `extends` clause will be substituted with\n  // `(globalThis.HTMLElement ?? HTMLElement)`.\n  //\n  // This way, we will first prefer any global `HTMLElement` polyfill that the\n  // user has assigned, and then fall back to the `HTMLElement` shim which has\n  // been imported (see note at the top of this file about how this import is\n  // generated by Rollup). Note that the `HTMLElement` variable has been\n  // shadowed by this import, so it no longer refers to the global.\n  extends HTMLElement\n  implements ReactiveControllerHost\n{\n  // Note: these are patched in only in DEV_MODE.\n  /**\n   * Read or set all the enabled warning categories for this class.\n   *\n   * This property is only used in development builds.\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enabledWarnings?: WarningKind[];\n\n  /**\n   * Enable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Enable for all ReactiveElement subclasses\n   * ReactiveElement.enableWarning?.('migration');\n   *\n   * // Enable for only MyElement and subclasses\n   * MyElement.enableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Disable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Disable for all ReactiveElement subclasses\n   * ReactiveElement.disableWarning?.('migration');\n   *\n   * // Disable for only MyElement and subclasses\n   * MyElement.disableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static disableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Adds an initializer function to the class that is called during instance\n   * construction.\n   *\n   * This is useful for code that runs against a `ReactiveElement`\n   * subclass, such as a decorator, that needs to do work for each\n   * instance, such as setting up a `ReactiveController`.\n   *\n   * ```ts\n   * const myDecorator = (target: typeof ReactiveElement, key: string) => {\n   *   target.addInitializer((instance: ReactiveElement) => {\n   *     // This is run during construction of the element\n   *     new MyController(instance);\n   *   });\n   * }\n   * ```\n   *\n   * Decorating a field will then cause each instance to run an initializer\n   * that adds a controller:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   @myDecorator foo;\n   * }\n   * ```\n   *\n   * Initializers are stored per-constructor. Adding an initializer to a\n   * subclass does not add it to a superclass. Since initializers are run in\n   * constructors, initializers will run in order of the class hierarchy,\n   * starting with superclasses and progressing to the instance's class.\n   *\n   * @nocollapse\n   */\n  static addInitializer(initializer: Initializer) {\n    this.__prepare();\n    (this._initializers ??= []).push(initializer);\n  }\n\n  static _initializers?: Initializer[];\n\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   * @nocollapse\n   */\n  private static __attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having been finalized, which includes creating properties\n   * from `static properties`, but does *not* include all properties created\n   * from decorators.\n   * @nocollapse\n   */\n  protected static finalized: true | undefined;\n\n  /**\n   * Memoized list of all element properties, including any superclass\n   * properties. Created lazily on user subclasses when finalizing the class.\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static elementProperties: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring reactive properties. When\n   * a reactive property is set the element will update and render.\n   *\n   * By default properties are public fields, and as such, they should be\n   * considered as primarily settable by element users, either via attribute or\n   * the property itself.\n   *\n   * Generally, properties that are changed by the element should be private or\n   * protected fields and should use the `state: true` option. Properties\n   * marked as `state` do not reflect from the corresponding attribute\n   *\n   * However, sometimes element code does need to set a public property. This\n   * should typically only be done in response to user interaction, and an event\n   * should be fired informing the user; for example, a checkbox sets its\n   * `checked` property when clicked and fires a `changed` event. Mutating\n   * public properties should typically not be done for non-primitive (object or\n   * array) properties. In other cases when an element needs to manage state, a\n   * private property set with the `state: true` option should be used. When\n   * needed, state properties can be initialized via public properties to\n   * facilitate complex interactions.\n   * @nocollapse\n   * @category properties\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Memoized list of all element styles.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category styles\n   */\n  static elementStyles: Array<CSSResultOrNative> = [];\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the {@linkcode css} tag function, via constructible stylesheets, or\n   * imported from native CSS module scripts.\n   *\n   * Note on Content Security Policy:\n   *\n   * Element styles are implemented with `<style>` tags when the browser doesn't\n   * support adopted StyleSheets. To use such `<style>` tags with the style-src\n   * CSP directive, the style-src value must either include 'unsafe-inline' or\n   * `nonce-<base64-value>` with `<base64-value>` replaced be a server-generated\n   * nonce.\n   *\n   * To provide a nonce to use on generated `<style>` elements, set\n   * `window.litNonce` to a server-generated nonce in your page's HTML, before\n   * loading application code:\n   *\n   * ```html\n   * <script>\n   *   // Generated and unique per request:\n   *   window.litNonce = 'a1b2c3d4';\n   * </script>\n   * ```\n   * @nocollapse\n   * @category styles\n   */\n  static styles?: CSSResultGroup;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   * @category attributes\n   */\n  static get observedAttributes() {\n    // Ensure we've created all properties\n    this.finalize();\n    // this.__attributeToPropertyMap is only undefined after finalize() in\n    // ReactiveElement itself. ReactiveElement.observedAttributes is only\n    // accessed with ReactiveElement as the receiver when a subclass or mixin\n    // calls super.observedAttributes\n    return (\n      this.__attributeToPropertyMap && [...this.__attributeToPropertyMap.keys()]\n    );\n  }\n\n  private __instanceProperties?: PropertyValues = undefined;\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a {@linkcode PropertyDeclaration} for the property with the\n   * given options. The property setter calls the property's `hasChanged`\n   * property option or uses a strict identity check to determine whether or not\n   * to request an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * ```ts\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static createProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    // If this is a state property, force the attribute to false.\n    if (options.state) {\n      (options as Mutable<PropertyDeclaration, 'attribute'>).attribute = false;\n    }\n    this.__prepare();\n    // Whether this property is wrapping accessors.\n    // Helps control the initial value change and reflection logic.\n    if (this.prototype.hasOwnProperty(name)) {\n      options = Object.create(options);\n      options.wrapped = true;\n    }\n    this.elementProperties.set(name, options);\n    if (!options.noAccessor) {\n      const key = DEV_MODE\n        ? // Use Symbol.for in dev mode to make it easier to maintain state\n          // when doing HMR.\n          Symbol.for(`${String(name)} (@property() cache)`)\n        : Symbol();\n      const descriptor = this.getPropertyDescriptor(name, key, options);\n      if (descriptor !== undefined) {\n        defineProperty(this.prototype, name, descriptor);\n      }\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   static getPropertyDescriptor(name, key, options) {\n   *     const defaultDescriptor =\n   *         super.getPropertyDescriptor(name, key, options);\n   *     const setter = defaultDescriptor.set;\n   *     return {\n   *       get: defaultDescriptor.get,\n   *       set(value) {\n   *         setter.call(this, value);\n   *         // custom action.\n   *       },\n   *       configurable: true,\n   *       enumerable: true\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  protected static getPropertyDescriptor(\n    name: PropertyKey,\n    key: string | symbol,\n    options: PropertyDeclaration\n  ): PropertyDescriptor | undefined {\n    const {get, set} = getOwnPropertyDescriptor(this.prototype, name) ?? {\n      get(this: ReactiveElement) {\n        return this[key as keyof typeof this];\n      },\n      set(this: ReactiveElement, v: unknown) {\n        (this as unknown as Record<string | symbol, unknown>)[key] = v;\n      },\n    };\n    if (DEV_MODE && get == null) {\n      if ('value' in (getOwnPropertyDescriptor(this.prototype, name) ?? {})) {\n        throw new Error(\n          `Field ${JSON.stringify(String(name))} on ` +\n            `${this.name} was declared as a reactive property ` +\n            `but it's actually declared as a value on the prototype. ` +\n            `Usually this is due to using @property or @state on a method.`\n        );\n      }\n      issueWarning(\n        'reactive-property-without-getter',\n        `Field ${JSON.stringify(String(name))} on ` +\n          `${this.name} was declared as a reactive property ` +\n          `but it does not have a getter. This will be an error in a ` +\n          `future version of Lit.`\n      );\n    }\n    return {\n      get,\n      set(this: ReactiveElement, value: unknown) {\n        const oldValue = get?.call(this);\n        set?.call(this, value);\n        this.requestUpdate(name, oldValue, options);\n      },\n      configurable: true,\n      enumerable: true,\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a `PropertyDeclaration` via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override\n   * {@linkcode createProperty}.\n   *\n   * @nocollapse\n   * @final\n   * @category properties\n   */\n  static getPropertyOptions(name: PropertyKey) {\n    return this.elementProperties.get(name) ?? defaultPropertyDeclaration;\n  }\n\n  // Temporary, until google3 is on TypeScript 5.2\n  declare static [Symbol.metadata]: object & Record<PropertyKey, unknown>;\n\n  /**\n   * Initializes static own properties of the class used in bookkeeping\n   * for element properties, initializers, etc.\n   *\n   * Can be called multiple times by code that needs to ensure these\n   * properties exist before using them.\n   *\n   * This method ensures the superclass is finalized so that inherited\n   * property metadata can be copied down.\n   * @nocollapse\n   */\n  private static __prepare() {\n    if (\n      this.hasOwnProperty(JSCompiler_renameProperty('elementProperties', this))\n    ) {\n      // Already prepared\n      return;\n    }\n    // Finalize any superclasses\n    const superCtor = getPrototypeOf(this) as typeof ReactiveElement;\n    superCtor.finalize();\n\n    // Create own set of initializers for this class if any exist on the\n    // superclass and copy them down. Note, for a small perf boost, avoid\n    // creating initializers unless needed.\n    if (superCtor._initializers !== undefined) {\n      this._initializers = [...superCtor._initializers];\n    }\n    // Initialize elementProperties from the superclass\n    this.elementProperties = new Map(superCtor.elementProperties);\n  }\n\n  /**\n   * Finishes setting up the class so that it's ready to be registered\n   * as a custom element and instantiated.\n   *\n   * This method is called by the ReactiveElement.observedAttributes getter.\n   * If you override the observedAttributes getter, you must either call\n   * super.observedAttributes to trigger finalization, or call finalize()\n   * yourself.\n   *\n   * @nocollapse\n   */\n  protected static finalize() {\n    if (this.hasOwnProperty(JSCompiler_renameProperty('finalized', this))) {\n      return;\n    }\n    this.finalized = true;\n    this.__prepare();\n\n    // Create properties from the static properties block:\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      const propKeys = [\n        ...getOwnPropertyNames(props),\n        ...getOwnPropertySymbols(props),\n      ] as Array<keyof typeof props>;\n      for (const p of propKeys) {\n        this.createProperty(p, props[p]);\n      }\n    }\n\n    // Create properties from standard decorator metadata:\n    const metadata = this[Symbol.metadata];\n    if (metadata !== null) {\n      const properties = litPropertyMetadata.get(metadata);\n      if (properties !== undefined) {\n        for (const [p, options] of properties) {\n          this.elementProperties.set(p, options);\n        }\n      }\n    }\n\n    // Create the attribute-to-property map\n    this.__attributeToPropertyMap = new Map();\n    for (const [p, options] of this.elementProperties) {\n      const attr = this.__attributeNameForProperty(p, options);\n      if (attr !== undefined) {\n        this.__attributeToPropertyMap.set(attr, p);\n      }\n    }\n\n    this.elementStyles = this.finalizeStyles(this.styles);\n\n    if (DEV_MODE) {\n      if (this.hasOwnProperty('createProperty')) {\n        issueWarning(\n          'no-override-create-property',\n          'Overriding ReactiveElement.createProperty() is deprecated. ' +\n            'The override will not be called with standard decorators'\n        );\n      }\n      if (this.hasOwnProperty('getPropertyDescriptor')) {\n        issueWarning(\n          'no-override-get-property-descriptor',\n          'Overriding ReactiveElement.getPropertyDescriptor() is deprecated. ' +\n            'The override will not be called with standard decorators'\n        );\n      }\n    }\n  }\n\n  /**\n   * Options used when calling `attachShadow`. Set this property to customize\n   * the options for the shadowRoot; for example, to create a closed\n   * shadowRoot: `{mode: 'closed'}`.\n   *\n   * Note, these options are used in `createRenderRoot`. If this method\n   * is customized, options should be respected if possible.\n   * @nocollapse\n   * @category rendering\n   */\n  static shadowRootOptions: ShadowRootInit = {mode: 'open'};\n\n  /**\n   * Takes the styles the user supplied via the `static styles` property and\n   * returns the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * Styles are deduplicated preserving the _last_ instance in the list. This\n   * is a performance optimization to avoid duplicated styles that can occur\n   * especially when composing via subclassing. The last item is kept to try\n   * to preserve the cascade order with the assumption that it's most important\n   * that last added styles override previous styles.\n   *\n   * @nocollapse\n   * @category styles\n   */\n  protected static finalizeStyles(\n    styles?: CSSResultGroup\n  ): Array<CSSResultOrNative> {\n    const elementStyles = [];\n    if (Array.isArray(styles)) {\n      // Dedupe the flattened array in reverse order to preserve the last items.\n      // Casting to Array<unknown> works around TS error that\n      // appears to come from trying to flatten a type CSSResultArray.\n      const set = new Set((styles as Array<unknown>).flat(Infinity).reverse());\n      // Then preserve original order by adding the set items in reverse order.\n      for (const s of set) {\n        elementStyles.unshift(getCompatibleStyle(s as CSSResultOrNative));\n      }\n    } else if (styles !== undefined) {\n      elementStyles.push(getCompatibleStyle(styles));\n    }\n    return elementStyles;\n  }\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   * @category rendering\n   */\n  readonly renderRoot!: HTMLElement | DocumentFragment;\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static __attributeNameForProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration\n  ) {\n    const attribute = options.attribute;\n    return attribute === false\n      ? undefined\n      : typeof attribute === 'string'\n        ? attribute\n        : typeof name === 'string'\n          ? name.toLowerCase()\n          : undefined;\n  }\n\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private __updatePromise!: Promise<boolean>;\n\n  /**\n   * True if there is a pending update as a result of calling `requestUpdate()`.\n   * Should only be read.\n   * @category updates\n   */\n  isUpdatePending = false;\n\n  /**\n   * Is set to `true` after the first update. The element code cannot assume\n   * that `renderRoot` exists before the element `hasUpdated`.\n   * @category updates\n   */\n  hasUpdated = false;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   *\n   * @internal\n   */\n  _$changedProperties!: PropertyValues;\n\n  /**\n   * Records property default values when the\n   * `useDefault` option is used.\n   */\n  private __defaultValues?: Map<PropertyKey, unknown>;\n\n  /**\n   * Properties that should be reflected when updated.\n   */\n  private __reflectingProperties?: Set<PropertyKey>;\n\n  /**\n   * Name of currently reflecting property\n   */\n  private __reflectingProperty: PropertyKey | null = null;\n\n  /**\n   * Set of controllers.\n   */\n  private __controllers?: Set<ReactiveController>;\n\n  constructor() {\n    super();\n    this.__initialize();\n  }\n\n  /**\n   * Internal only override point for customizing work done when elements\n   * are constructed.\n   */\n  private __initialize() {\n    this.__updatePromise = new Promise<boolean>(\n      (res) => (this.enableUpdating = res)\n    );\n    this._$changedProperties = new Map();\n    // This enqueues a microtask that must run before the first update, so it\n    // must be called before requestUpdate()\n    this.__saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdate();\n    (this.constructor as typeof ReactiveElement)._initializers?.forEach((i) =>\n      i(this)\n    );\n  }\n\n  /**\n   * Registers a `ReactiveController` to participate in the element's reactive\n   * update cycle. The element automatically calls into any registered\n   * controllers during its lifecycle callbacks.\n   *\n   * If the element is connected when `addController()` is called, the\n   * controller's `hostConnected()` callback will be immediately called.\n   * @category controllers\n   */\n  addController(controller: ReactiveController) {\n    (this.__controllers ??= new Set()).add(controller);\n    // If a controller is added after the element has been connected,\n    // call hostConnected. Note, re-using existence of `renderRoot` here\n    // (which is set in connectedCallback) to avoid the need to track a\n    // first connected state.\n    if (this.renderRoot !== undefined && this.isConnected) {\n      controller.hostConnected?.();\n    }\n  }\n\n  /**\n   * Removes a `ReactiveController` from the element.\n   * @category controllers\n   */\n  removeController(controller: ReactiveController) {\n    this.__controllers?.delete(controller);\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs.\n   */\n  private __saveInstanceProperties() {\n    const instanceProperties = new Map<PropertyKey, unknown>();\n    const elementProperties = (this.constructor as typeof ReactiveElement)\n      .elementProperties;\n    for (const p of elementProperties.keys() as IterableIterator<keyof this>) {\n      if (this.hasOwnProperty(p)) {\n        instanceProperties.set(p, this[p]);\n        delete this[p];\n      }\n    }\n    if (instanceProperties.size > 0) {\n      this.__instanceProperties = instanceProperties;\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   *\n   * @return Returns a node into which to render.\n   * @category rendering\n   */\n  protected createRenderRoot(): HTMLElement | DocumentFragment {\n    const renderRoot =\n      this.shadowRoot ??\n      this.attachShadow(\n        (this.constructor as typeof ReactiveElement).shadowRootOptions\n      );\n    adoptStyles(\n      renderRoot,\n      (this.constructor as typeof ReactiveElement).elementStyles\n    );\n    return renderRoot;\n  }\n\n  /**\n   * On first connection, creates the element's renderRoot, sets up\n   * element styling, and enables updating.\n   * @category lifecycle\n   */\n  connectedCallback() {\n    // Create renderRoot before controllers `hostConnected`\n    (this as Mutable<typeof this, 'renderRoot'>).renderRoot ??=\n      this.createRenderRoot();\n    this.enableUpdating(true);\n    this.__controllers?.forEach((c) => c.hostConnected?.());\n  }\n\n  /**\n   * Note, this method should be considered final and not overridden. It is\n   * overridden on the element instance with a function that triggers the first\n   * update.\n   * @category updates\n   */\n  protected enableUpdating(_requestedUpdate: boolean) {}\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   * @category lifecycle\n   */\n  disconnectedCallback() {\n    this.__controllers?.forEach((c) => c.hostDisconnected?.());\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * Specifically, when an attribute is set, the corresponding property is set.\n   * You should rarely need to implement this callback. If this method is\n   * overridden, `super.attributeChangedCallback(name, _old, value)` must be\n   * called.\n   *\n   * See [responding to attribute changes](https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_custom_elements#responding_to_attribute_changes)\n   * on MDN for more information about the `attributeChangedCallback`.\n   * @category attributes\n   */\n  attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null\n  ) {\n    this._$attributeToProperty(name, value);\n  }\n\n  private __propertyToAttribute(name: PropertyKey, value: unknown) {\n    const elemProperties: PropertyDeclarationMap = (\n      this.constructor as typeof ReactiveElement\n    ).elementProperties;\n    const options = elemProperties.get(name)!;\n    const attr = (\n      this.constructor as typeof ReactiveElement\n    ).__attributeNameForProperty(name, options);\n    if (attr !== undefined && options.reflect === true) {\n      const converter =\n        (options.converter as ComplexAttributeConverter)?.toAttribute !==\n        undefined\n          ? (options.converter as ComplexAttributeConverter)\n          : defaultConverter;\n      const attrValue = converter.toAttribute!(value, options.type);\n      if (\n        DEV_MODE &&\n        (this.constructor as typeof ReactiveElement).enabledWarnings!.includes(\n          'migration'\n        ) &&\n        attrValue === undefined\n      ) {\n        issueWarning(\n          'undefined-attribute-value',\n          `The attribute value for the ${name as string} property is ` +\n            `undefined on element ${this.localName}. The attribute will be ` +\n            `removed, but in the previous version of \\`ReactiveElement\\`, ` +\n            `the attribute would not have changed.`\n        );\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this.__reflectingProperty = name;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /** @internal */\n  _$attributeToProperty(name: string, value: string | null) {\n    const ctor = this.constructor as typeof ReactiveElement;\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    const propName = (ctor.__attributeToPropertyMap as AttributeMap).get(name);\n    // Use tracking info to avoid reflecting a property value to an attribute\n    // if it was just set because the attribute changed.\n    if (propName !== undefined && this.__reflectingProperty !== propName) {\n      const options = ctor.getPropertyOptions(propName);\n      const converter =\n        typeof options.converter === 'function'\n          ? {fromAttribute: options.converter}\n          : options.converter?.fromAttribute !== undefined\n            ? options.converter\n            : defaultConverter;\n      // mark state reflecting\n      this.__reflectingProperty = propName;\n      const convertedValue = converter.fromAttribute!(value, options.type);\n      this[propName as keyof this] =\n        convertedValue ??\n        this.__defaultValues?.get(propName) ??\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (convertedValue as any);\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should be called\n   * when an element should update based on some state not triggered by setting\n   * a reactive property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored.\n   *\n   * @param name name of requesting property\n   * @param oldValue old value of requesting property\n   * @param options property options to use instead of the previously\n   *     configured options\n   * @category updates\n   */\n  requestUpdate(\n    name?: PropertyKey,\n    oldValue?: unknown,\n    options?: PropertyDeclaration\n  ): void {\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      if (DEV_MODE && (name as unknown) instanceof Event) {\n        issueWarning(\n          ``,\n          `The requestUpdate() method was called with an Event as the property name. This is probably a mistake caused by binding this.requestUpdate as an event listener. Instead bind a function that will call it with no arguments: () => this.requestUpdate()`\n        );\n      }\n      const ctor = this.constructor as typeof ReactiveElement;\n      const newValue = this[name as keyof this];\n      options ??= ctor.getPropertyOptions(name);\n      const changed =\n        (options.hasChanged ?? notEqual)(newValue, oldValue) ||\n        // When there is no change, check a corner case that can occur when\n        // 1. there's a initial value which was not reflected\n        // 2. the property is subsequently set to this value.\n        // For example, `prop: {useDefault: true, reflect: true}`\n        // and el.prop = 'foo'. This should be considered a change if the\n        // attribute is not set because we will now reflect the property to the attribute.\n        (options.useDefault &&\n          options.reflect &&\n          newValue === this.__defaultValues?.get(name) &&\n          !this.hasAttribute(ctor.__attributeNameForProperty(name, options)!));\n      if (changed) {\n        this._$changeProperty(name, oldValue, options);\n      } else {\n        // Abort the request if the property should not be considered changed.\n        return;\n      }\n    }\n    if (this.isUpdatePending === false) {\n      this.__updatePromise = this.__enqueueUpdate();\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _$changeProperty(\n    name: PropertyKey,\n    oldValue: unknown,\n    {useDefault, reflect, wrapped}: PropertyDeclaration,\n    initializeValue?: unknown\n  ) {\n    // Record default value when useDefault is used. This allows us to\n    // restore this value when the attribute is removed.\n    if (useDefault && !(this.__defaultValues ??= new Map()).has(name)) {\n      this.__defaultValues.set(\n        name,\n        initializeValue ?? oldValue ?? this[name as keyof this]\n      );\n      // if this is not wrapping an accessor, it must be an initial setting\n      // and in this case we do not want to record the change or reflect.\n      if (wrapped !== true || initializeValue !== undefined) {\n        return;\n      }\n    }\n    // TODO (justinfagnani): Create a benchmark of Map.has() + Map.set(\n    // vs just Map.set()\n    if (!this._$changedProperties.has(name)) {\n      // On the initial change, the old value should be `undefined`, except\n      // with `useDefault`\n      if (!this.hasUpdated && !useDefault) {\n        oldValue = undefined;\n      }\n      this._$changedProperties.set(name, oldValue);\n    }\n    // Add to reflecting properties set.\n    // Note, it's important that every change has a chance to add the\n    // property to `__reflectingProperties`. This ensures setting\n    // attribute + property reflects correctly.\n    if (reflect === true && this.__reflectingProperty !== name) {\n      (this.__reflectingProperties ??= new Set<PropertyKey>()).add(name);\n    }\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async __enqueueUpdate() {\n    this.isUpdatePending = true;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this.__updatePromise;\n    } catch (e) {\n      // Refire any previous errors async so they do not disrupt the update\n      // cycle. Errors are refired so developers have a chance to observe\n      // them, and this can be done by implementing\n      // `window.onunhandledrejection`.\n      Promise.reject(e);\n    }\n    const result = this.scheduleUpdate();\n    // If `scheduleUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this.isUpdatePending;\n  }\n\n  /**\n   * Schedules an element update. You can override this method to change the\n   * timing of updates by returning a Promise. The update will await the\n   * returned Promise, and you should resolve the Promise to allow the update\n   * to proceed. If this method is overridden, `super.scheduleUpdate()`\n   * must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```ts\n   * override protected async scheduleUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.scheduleUpdate();\n   * }\n   * ```\n   * @category updates\n   */\n  protected scheduleUpdate(): void | Promise<unknown> {\n    const result = this.performUpdate();\n    if (\n      DEV_MODE &&\n      (this.constructor as typeof ReactiveElement).enabledWarnings!.includes(\n        'async-perform-update'\n      ) &&\n      typeof (result as unknown as Promise<unknown> | undefined)?.then ===\n        'function'\n    ) {\n      issueWarning(\n        'async-perform-update',\n        `Element ${this.localName} returned a Promise from performUpdate(). ` +\n          `This behavior is deprecated and will be removed in a future ` +\n          `version of ReactiveElement.`\n      );\n    }\n    return result;\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * Call `performUpdate()` to immediately process a pending update. This should\n   * generally not be needed, but it can be done in rare cases when you need to\n   * update synchronously.\n   *\n   * @category updates\n   */\n  protected performUpdate(): void {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this.isUpdatePending) {\n      return;\n    }\n    debugLogEvent?.({kind: 'update'});\n    if (!this.hasUpdated) {\n      // Create renderRoot before first update. This occurs in `connectedCallback`\n      // but is done here to support out of tree calls to `enableUpdating`/`performUpdate`.\n      (this as Mutable<typeof this, 'renderRoot'>).renderRoot ??=\n        this.createRenderRoot();\n      if (DEV_MODE) {\n        // Produce warning if any reactive properties on the prototype are\n        // shadowed by class fields. Instance fields set before upgrade are\n        // deleted by this point, so any own property is caused by class field\n        // initialization in the constructor.\n        const ctor = this.constructor as typeof ReactiveElement;\n        const shadowedProperties = [...ctor.elementProperties.keys()].filter(\n          (p) => this.hasOwnProperty(p) && p in getPrototypeOf(this)\n        );\n        if (shadowedProperties.length) {\n          throw new Error(\n            `The following properties on element ${this.localName} will not ` +\n              `trigger updates as expected because they are set using class ` +\n              `fields: ${shadowedProperties.join(', ')}. ` +\n              `Native class fields and some compiled output will overwrite ` +\n              `accessors used for detecting changes. See ` +\n              `https://lit.dev/msg/class-field-shadowing ` +\n              `for more information.`\n          );\n        }\n      }\n      // Mixin instance properties once, if they exist.\n      if (this.__instanceProperties) {\n        // TODO (justinfagnani): should we use the stored value? Could a new value\n        // have been set since we stored the own property value?\n        for (const [p, value] of this.__instanceProperties) {\n          this[p as keyof this] = value as this[keyof this];\n        }\n        this.__instanceProperties = undefined;\n      }\n      // Trigger initial value reflection and populate the initial\n      // `changedProperties` map, but only for the case of properties created\n      // via `createProperty` on accessors, which will not have already\n      // populated the `changedProperties` map since they are not set.\n      // We can't know if these accessors had initializers, so we just set\n      // them anyway - a difference from experimental decorators on fields and\n      // standard decorators on auto-accessors.\n      // For context see:\n      // https://github.com/lit/lit/pull/4183#issuecomment-1711959635\n      const elementProperties = (this.constructor as typeof ReactiveElement)\n        .elementProperties;\n      if (elementProperties.size > 0) {\n        for (const [p, options] of elementProperties) {\n          const {wrapped} = options;\n          const value = this[p as keyof this];\n          if (\n            wrapped === true &&\n            !this._$changedProperties.has(p) &&\n            value !== undefined\n          ) {\n            this._$changeProperty(p, undefined, options, value);\n          }\n        }\n      }\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._$changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.willUpdate(changedProperties);\n        this.__controllers?.forEach((c) => c.hostUpdate?.());\n        this.update(changedProperties);\n      } else {\n        this.__markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this.__markUpdated();\n      throw e;\n    }\n    // The update is no longer considered pending and further updates are now allowed.\n    if (shouldUpdate) {\n      this._$didUpdate(changedProperties);\n    }\n  }\n\n  /**\n   * Invoked before `update()` to compute values needed during the update.\n   *\n   * Implement `willUpdate` to compute property values that depend on other\n   * properties and are used in the rest of the update process.\n   *\n   * ```ts\n   * willUpdate(changedProperties) {\n   *   // only need to check changed properties for an expensive computation.\n   *   if (changedProperties.has('firstName') || changedProperties.has('lastName')) {\n   *     this.sha = computeSHA(`${this.firstName} ${this.lastName}`);\n   *   }\n   * }\n   *\n   * render() {\n   *   return html`SHA: ${this.sha}`;\n   * }\n   * ```\n   *\n   * @category updates\n   */\n  protected willUpdate(_changedProperties: PropertyValues): void {}\n\n  // Note, this is an override point for polyfill-support.\n  // @internal\n  _$didUpdate(changedProperties: PropertyValues) {\n    this.__controllers?.forEach((c) => c.hostUpdated?.());\n    if (!this.hasUpdated) {\n      this.hasUpdated = true;\n      this.firstUpdated(changedProperties);\n    }\n    this.updated(changedProperties);\n    if (\n      DEV_MODE &&\n      this.isUpdatePending &&\n      (this.constructor as typeof ReactiveElement).enabledWarnings!.includes(\n        'change-in-update'\n      )\n    ) {\n      issueWarning(\n        'change-in-update',\n        `Element ${this.localName} scheduled an update ` +\n          `(generally because a property was set) ` +\n          `after an update completed, causing a new update to be scheduled. ` +\n          `This is inefficient and should be avoided unless the next update ` +\n          `can only be scheduled as a side effect of the previous update.`\n      );\n    }\n  }\n\n  private __markUpdated() {\n    this._$changedProperties = new Map();\n    this.isUpdatePending = false;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super.getUpdateComplete()`, then any subsequent state.\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  get updateComplete(): Promise<boolean> {\n    return this.getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   override async getUpdateComplete() {\n   *     const result = await super.getUpdateComplete();\n   *     await this._myChild.updateComplete;\n   *     return result;\n   *   }\n   * }\n   * ```\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  protected getUpdateComplete(): Promise<boolean> {\n    return this.__updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update()` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected update(_changedProperties: PropertyValues) {\n    // The forEach() expression will only run when __reflectingProperties is\n    // defined, and it returns undefined, setting __reflectingProperties to\n    // undefined\n    this.__reflectingProperties &&= this.__reflectingProperties.forEach((p) =>\n      this.__propertyToAttribute(p, this[p as keyof this])\n    ) as undefined;\n    this.__markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected updated(_changedProperties: PropertyValues) {}\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * ```ts\n   * firstUpdated() {\n   *   this.renderRoot.getElementById('my-text-area').focus();\n   * }\n   * ```\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {}\n}\n// Assigned here to work around a jscompiler bug with static fields\n// when compiling to ES5.\n// https://github.com/google/closure-compiler/issues/3177\n(ReactiveElement as unknown as Record<string, unknown>)[\n  JSCompiler_renameProperty('elementProperties', ReactiveElement)\n] = new Map();\n(ReactiveElement as unknown as Record<string, unknown>)[\n  JSCompiler_renameProperty('finalized', ReactiveElement)\n] = new Map();\n\n// Apply polyfills if available\npolyfillSupport?.({ReactiveElement});\n\n// Dev mode warnings...\nif (DEV_MODE) {\n  // Default warning set.\n  ReactiveElement.enabledWarnings = [\n    'change-in-update',\n    'async-perform-update',\n  ];\n  const ensureOwnWarnings = function (ctor: typeof ReactiveElement) {\n    if (\n      !ctor.hasOwnProperty(JSCompiler_renameProperty('enabledWarnings', ctor))\n    ) {\n      ctor.enabledWarnings = ctor.enabledWarnings!.slice();\n    }\n  };\n  ReactiveElement.enableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    if (!this.enabledWarnings!.includes(warning)) {\n      this.enabledWarnings!.push(warning);\n    }\n  };\n  ReactiveElement.disableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    const i = this.enabledWarnings!.indexOf(warning);\n    if (i >= 0) {\n      this.enabledWarnings!.splice(i, 1);\n    }\n  };\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for ReactiveElement usage.\n(global.reactiveElementVersions ??= []).push('2.1.1');\nif (DEV_MODE && global.reactiveElementVersions.length > 1) {\n  queueMicrotask(() => {\n    issueWarning!(\n      'multiple-versions',\n      `Multiple versions of Lit loaded. Loading multiple versions ` +\n        `is not recommended.`\n    );\n  });\n}\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nconst NODE_MODE = false;\n\n// Allows minifiers to rename references to globalThis\nconst global = globalThis;\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets: boolean =\n  global.ShadowRoot &&\n  (global.ShadyCSS === undefined || global.ShadyCSS.nativeShadow) &&\n  'adoptedStyleSheets' in Document.prototype &&\n  'replace' in CSSStyleSheet.prototype;\n\n/**\n * A CSSResult or native CSSStyleSheet.\n *\n * In browsers that support constructible CSS style sheets, CSSStyleSheet\n * object can be used for styling along side CSSResult from the `css`\n * template tag.\n */\nexport type CSSResultOrNative = CSSResult | CSSStyleSheet;\n\nexport type CSSResultArray = Array<CSSResultOrNative | CSSResultArray>;\n\n/**\n * A single CSSResult, CSSStyleSheet, or an array or nested arrays of those.\n */\nexport type CSSResultGroup = CSSResultOrNative | CSSResultArray;\n\nconst constructionToken = Symbol();\n\nconst cssTagCache = new WeakMap<TemplateStringsArray, CSSStyleSheet>();\n\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nexport class CSSResult {\n  // This property needs to remain unminified.\n  ['_$cssResult$'] = true;\n  readonly cssText: string;\n  private _styleSheet?: CSSStyleSheet;\n  private _strings: TemplateStringsArray | undefined;\n\n  private constructor(\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n        'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.'\n      );\n    }\n    this.cssText = cssText;\n    this._strings = strings;\n  }\n\n  // This is a getter so that it's lazy. In practice, this means stylesheets\n  // are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet | undefined {\n    // If `supportsAdoptingStyleSheets` is true then we assume CSSStyleSheet is\n    // constructable.\n    let styleSheet = this._styleSheet;\n    const strings = this._strings;\n    if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n      const cacheable = strings !== undefined && strings.length === 1;\n      if (cacheable) {\n        styleSheet = cssTagCache.get(strings);\n      }\n      if (styleSheet === undefined) {\n        (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(\n          this.cssText\n        );\n        if (cacheable) {\n          cssTagCache.set(strings, styleSheet);\n        }\n      }\n    }\n    return styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\ntype ConstructableCSSResult = CSSResult & {\n  new (\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ): CSSResult;\n};\n\nconst textFromCSSResult = (value: CSSResultGroup | number) => {\n  // This property needs to remain unminified.\n  if ((value as CSSResult)['_$cssResult$'] === true) {\n    return (value as CSSResult).cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n      `Value passed to 'css' function must be a 'css' function result: ` +\n        `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n        `to ensure page security.`\n    );\n  }\n};\n\n/**\n * Wrap a value for interpolation in a {@linkcode css} tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) =>\n  new (CSSResult as ConstructableCSSResult)(\n    typeof value === 'string' ? value : String(value),\n    undefined,\n    constructionToken\n  );\n\n/**\n * A template literal tag which can be used with LitElement's\n * {@linkcode LitElement.styles} property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values {@linkcode unsafeCSS}\n * may be used inside an expression.\n */\nexport const css = (\n  strings: TemplateStringsArray,\n  ...values: (CSSResultGroup | number)[]\n): CSSResult => {\n  const cssText =\n    strings.length === 1\n      ? strings[0]\n      : values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]\n        );\n  return new (CSSResult as ConstructableCSSResult)(\n    cssText,\n    strings,\n    constructionToken\n  );\n};\n\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic the native feature](https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/adoptedStyleSheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nexport const adoptStyles = (\n  renderRoot: ShadowRoot,\n  styles: Array<CSSResultOrNative>\n) => {\n  if (supportsAdoptingStyleSheets) {\n    (renderRoot as ShadowRoot).adoptedStyleSheets = styles.map((s) =>\n      s instanceof CSSStyleSheet ? s : s.styleSheet!\n    );\n  } else {\n    for (const s of styles) {\n      const style = document.createElement('style');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const nonce = (global as any)['litNonce'];\n      if (nonce !== undefined) {\n        style.setAttribute('nonce', nonce);\n      }\n      style.textContent = (s as CSSResult).cssText;\n      renderRoot.appendChild(style);\n    }\n  }\n};\n\nconst cssResultFromStyleSheet = (sheet: CSSStyleSheet) => {\n  let cssText = '';\n  for (const rule of sheet.cssRules) {\n    cssText += rule.cssText;\n  }\n  return unsafeCSS(cssText);\n};\n\nexport const getCompatibleStyle =\n  supportsAdoptingStyleSheets ||\n  (NODE_MODE && global.CSSStyleSheet === undefined)\n    ? (s: CSSResultOrNative) => s\n    : (s: CSSResultOrNative) =>\n        s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// IMPORTANT: these imports must be type-only\nimport type {Directive, DirectiveResult, PartInfo} from './directive.js';\nimport type {TrustedHTML, TrustedTypesWindow} from 'trusted-types/lib/index.js';\n\nconst DEV_MODE = true;\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\nconst NODE_MODE = false;\n\n// Allows minifiers to rename references to globalThis\nconst global = globalThis;\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace LitUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | TemplatePrep\n      | TemplateInstantiated\n      | TemplateInstantiatedAndUpdated\n      | TemplateUpdating\n      | BeginRender\n      | EndRender\n      | CommitPartEntry\n      | SetPartValue;\n    export interface TemplatePrep {\n      kind: 'template prep';\n      template: Template;\n      strings: TemplateStringsArray;\n      clonableTemplate: HTMLTemplateElement;\n      parts: TemplatePart[];\n    }\n    export interface BeginRender {\n      kind: 'begin render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart | undefined;\n    }\n    export interface EndRender {\n      kind: 'end render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart;\n    }\n    export interface TemplateInstantiated {\n      kind: 'template instantiated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateInstantiatedAndUpdated {\n      kind: 'template instantiated and updated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateUpdating {\n      kind: 'template updating';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface SetPartValue {\n      kind: 'set part';\n      part: Part;\n      value: unknown;\n      valueIndex: number;\n      values: unknown[];\n      templateInstance: TemplateInstance;\n    }\n\n    export type CommitPartEntry =\n      | CommitNothingToChildEntry\n      | CommitText\n      | CommitNode\n      | CommitAttribute\n      | CommitProperty\n      | CommitBooleanAttribute\n      | CommitEventListener\n      | CommitToElementBinding;\n\n    export interface CommitNothingToChildEntry {\n      kind: 'commit nothing to child';\n      start: ChildNode;\n      end: ChildNode | null;\n      parent: Disconnectable | undefined;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitText {\n      kind: 'commit text';\n      node: Text;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitNode {\n      kind: 'commit node';\n      start: Node;\n      parent: Disconnectable | undefined;\n      value: Node;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitAttribute {\n      kind: 'commit attribute';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitProperty {\n      kind: 'commit property';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitBooleanAttribute {\n      kind: 'commit boolean attribute';\n      element: Element;\n      name: string;\n      value: boolean;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitEventListener {\n      kind: 'commit event listener';\n      element: Element;\n      name: string;\n      value: unknown;\n      oldListener: unknown;\n      options: RenderOptions | undefined;\n      // True if we're removing the old event listener (e.g. because settings changed, or value is nothing)\n      removeListener: boolean;\n      // True if we're adding a new event listener (e.g. because first render, or settings changed)\n      addListener: boolean;\n    }\n\n    export interface CommitToElementBinding {\n      kind: 'commit to element binding';\n      element: Element;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: LitUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<LitUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n// Used for connecting beginRender and endRender events when there are nested\n// renders when errors are thrown preventing an endRender event from being\n// called.\nlet debugLogRenderId = 0;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  global.litIssuedWarnings ??= new Set();\n\n  /**\n   * Issue a warning if we haven't already, based either on `code` or `warning`.\n   * Warnings are disabled automatically only by `warning`; disabling via `code`\n   * can be done by users.\n   */\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (\n      !global.litIssuedWarnings!.has(warning) &&\n      !global.litIssuedWarnings!.has(code)\n    ) {\n      console.warn(warning);\n      global.litIssuedWarnings!.add(warning);\n    }\n  };\n\n  queueMicrotask(() => {\n    issueWarning(\n      'dev-mode',\n      `Lit is in dev mode. Not recommended for production!`\n    );\n  });\n}\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  global.ShadyDOM?.inUse &&\n  global.ShadyDOM?.noPatch === true\n    ? (global.ShadyDOM!.wrap as <T extends Node>(node: T) => T)\n    : <T extends Node>(node: T) => node;\n\nconst trustedTypes = (global as unknown as TrustedTypesWindow).trustedTypes;\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes\n  ? trustedTypes.createPolicy('lit-html', {\n      createHTML: (s) => s,\n    })\n  : undefined;\n\n/**\n * Used to sanitize any value before it is written into the DOM. This can be\n * used to implement a security policy of allowed and disallowed values in\n * order to prevent XSS attacks.\n *\n * One way of using this callback would be to check attributes and properties\n * against a list of high risk fields, and require that values written to such\n * fields be instances of a class which is safe by construction. Closure's Safe\n * HTML Types is one implementation of this technique (\n * https://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\n * The TrustedTypes polyfill in API-only mode could also be used as a basis\n * for this technique (https://github.com/WICG/trusted-types).\n *\n * @param node The HTML node (usually either a #text node or an Element) that\n *     is being written to. Note that this is just an exemplar node, the write\n *     may take place against another instance of the same class of node.\n * @param name The name of an attribute or property (for example, 'href').\n * @param type Indicates whether the write that's about to be performed will\n *     be to a property or a node.\n * @return A function that will sanitize this class of writes.\n */\nexport type SanitizerFactory = (\n  node: Node,\n  name: string,\n  type: 'property' | 'attribute'\n) => ValueSanitizer;\n\n/**\n * A function which can sanitize values that will be written to a specific kind\n * of DOM sink.\n *\n * See SanitizerFactory.\n *\n * @param value The value to sanitize. Will be the actual value passed into\n *     the lit-html template literal, so this could be of any type.\n * @return The value to write to the DOM. Usually the same as the input value,\n *     unless sanitization is needed.\n */\nexport type ValueSanitizer = (value: unknown) => unknown;\n\nconst identityFunction: ValueSanitizer = (value: unknown) => value;\nconst noopSanitizer: SanitizerFactory = (\n  _node: Node,\n  _name: string,\n  _type: 'property' | 'attribute'\n) => identityFunction;\n\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer: SanitizerFactory) => {\n  if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n    return;\n  }\n  if (sanitizerFactoryInternal !== noopSanitizer) {\n    throw new Error(\n      `Attempted to overwrite existing lit-html security policy.` +\n        ` setSanitizeDOMValueFactory should be called at most once.`\n    );\n  }\n  sanitizerFactoryInternal = newSanitizer;\n};\n\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n  sanitizerFactoryInternal = noopSanitizer;\n};\n\nconst createSanitizer: SanitizerFactory = (node, name, type) => {\n  return sanitizerFactoryInternal(node, name, type);\n};\n\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${Math.random().toFixed(9).slice(2)}$`;\n\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\n\nconst d =\n  NODE_MODE && global.document === undefined\n    ? ({\n        createTreeWalker() {\n          return {};\n        },\n      } as unknown as Document)\n    : document;\n\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = () => d.createComment('');\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\nconst isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\nconst isArray = Array.isArray;\nconst isIterable = (value: unknown): value is Iterable<unknown> =>\n  isArray(value) ||\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeof (value as any)?.[Symbol.iterator] === 'function';\n\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\n\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(\n  `>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`,\n  'g'\n);\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\n\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea|title)$/i;\n\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\nconst MATHML_RESULT = 3;\n\ntype ResultType = typeof HTML_RESULT | typeof SVG_RESULT | typeof MATHML_RESULT;\n\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg} when it hasn't been compiled by @lit-labs/compiler.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n */\nexport type UncompiledTemplateResult<T extends ResultType = ResultType> = {\n  // This property needs to remain unminified.\n  ['_$litType$']: T;\n  strings: TemplateStringsArray;\n  values: unknown[];\n};\n\n/**\n * This is a template result that may be either uncompiled or compiled.\n *\n * In the future, TemplateResult will be this type. If you want to explicitly\n * note that a template result is potentially compiled, you can reference this\n * type and it will continue to behave the same through the next major version\n * of Lit. This can be useful for code that wants to prepare for the next\n * major version of Lit.\n */\nexport type MaybeCompiledTemplateResult<T extends ResultType = ResultType> =\n  | UncompiledTemplateResult<T>\n  | CompiledTemplateResult;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg}.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n * In Lit 4, this type will be an alias of\n * MaybeCompiledTemplateResult, so that code will get type errors if it assumes\n * that Lit templates are not compiled. When deliberately working with only\n * one, use either {@linkcode CompiledTemplateResult} or\n * {@linkcode UncompiledTemplateResult} explicitly.\n */\nexport type TemplateResult<T extends ResultType = ResultType> =\n  UncompiledTemplateResult<T>;\n\nexport type HTMLTemplateResult = TemplateResult<typeof HTML_RESULT>;\n\nexport type SVGTemplateResult = TemplateResult<typeof SVG_RESULT>;\n\nexport type MathMLTemplateResult = TemplateResult<typeof MATHML_RESULT>;\n\n/**\n * A TemplateResult that has been compiled by @lit-labs/compiler, skipping the\n * prepare step.\n */\nexport interface CompiledTemplateResult {\n  // This is a factory in order to make template initialization lazy\n  // and allow ShadyRenderOptions scope to be passed in.\n  // This property needs to remain unminified.\n  ['_$litType$']: CompiledTemplate;\n  values: unknown[];\n}\n\nexport interface CompiledTemplate extends Omit<Template, 'el'> {\n  // el is overridden to be optional. We initialize it on first render\n  el?: HTMLTemplateElement;\n\n  // The prepared HTML string to create a template element from.\n  // The type is a TemplateStringsArray to guarantee that the value came from\n  // source code, preventing a JSON injection attack.\n  h: TemplateStringsArray;\n}\n\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag =\n  <T extends ResultType>(type: T) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult<T> => {\n    // Warn against templates octal escape sequences\n    // We do this here rather than in render so that the warning is closer to the\n    // template definition.\n    if (DEV_MODE && strings.some((s) => s === undefined)) {\n      console.warn(\n        'Some template strings are undefined.\\n' +\n          'This is probably caused by illegal octal escape sequences.'\n      );\n    }\n    if (DEV_MODE) {\n      // Import static-html.js results in a circular dependency which g3 doesn't\n      // handle. Instead we know that static values must have the field\n      // `_$litStatic$`.\n      if (\n        values.some((val) => (val as {_$litStatic$: unknown})?.['_$litStatic$'])\n      ) {\n        issueWarning(\n          '',\n          `Static values 'literal' or 'unsafeStatic' cannot be used as values to non-static templates.\\n` +\n            `Please use the static 'html' tag function. See https://lit.dev/docs/templates/expressions/#static-expressions`\n        );\n      }\n    }\n    return {\n      // This property needs to remain unminified.\n      ['_$litType$']: type,\n      strings,\n      values,\n    };\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nexport const html = tag(HTML_RESULT);\n\n/**\n * Interprets a template literal as an SVG fragment that can efficiently render\n * to and update a container.\n *\n * ```ts\n * const rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\n *\n * const myImage = html`\n *   <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n *     ${rect}\n *   </svg>`;\n * ```\n *\n * The `svg` *tag function* should only be used for SVG fragments, or elements\n * that would be contained **inside** an `<svg>` HTML element. A common error is\n * placing an `<svg>` *element* in a template tagged with the `svg` tag\n * function. The `<svg>` element is an HTML element and should be used within a\n * template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an SVG fragment from the\n * `render()` method, as the SVG fragment will be contained within the element's\n * shadow root and thus not be properly contained within an `<svg>` HTML\n * element.\n */\nexport const svg = tag(SVG_RESULT);\n\n/**\n * Interprets a template literal as MathML fragment that can efficiently render\n * to and update a container.\n *\n * ```ts\n * const num = mathml`<mn>1</mn>`;\n *\n * const eq = html`\n *   <math>\n *     ${num}\n *   </math>`;\n * ```\n *\n * The `mathml` *tag function* should only be used for MathML fragments, or\n * elements that would be contained **inside** a `<math>` HTML element. A common\n * error is placing a `<math>` *element* in a template tagged with the `mathml`\n * tag function. The `<math>` element is an HTML element and should be used\n * within a template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an MathML fragment from the\n * `render()` method, as the MathML fragment will be contained within the\n * element's shadow root and thus not be properly contained within a `<math>`\n * HTML element.\n */\nexport const mathml = tag(MATHML_RESULT);\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = Symbol.for('lit-noChange');\n\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nexport const nothing = Symbol.for('lit-nothing');\n\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - they must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap<TemplateStringsArray, Template>();\n\n/**\n * Object specifying options for controlling lit-html rendering. Note that\n * while `render` may be called multiple times on the same `container` (and\n * `renderBefore` reference node) to efficiently update the rendered content,\n * only the options passed in during the first render are respected during\n * the lifetime of renders to that unique `container` + `renderBefore`\n * combination.\n */\nexport interface RenderOptions {\n  /**\n   * An object to use as the `this` value for event listeners. It's often\n   * useful to set this to the host component rendering a template.\n   */\n  host?: object;\n  /**\n   * A DOM node before which to render content in the container.\n   */\n  renderBefore?: ChildNode | null;\n  /**\n   * Node used for cloning the template (`importNode` will be called on this\n   * node). This controls the `ownerDocument` of the rendered DOM, along with\n   * any inherited context. Defaults to the global `document`.\n   */\n  creationScope?: {importNode(node: Node, deep?: boolean): Node};\n  /**\n   * The initial connected state for the top-level part being rendered. If no\n   * `isConnected` option is set, `AsyncDirective`s will be connected by\n   * default. Set to `false` if the initial render occurs in a disconnected tree\n   * and `AsyncDirective`s should see `isConnected === false` for their initial\n   * render. The `part.setConnected()` method must be used subsequent to initial\n   * render to change the connected state of the part.\n   */\n  isConnected?: boolean;\n}\n\nconst walker = d.createTreeWalker(\n  d,\n  129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */\n);\n\nlet sanitizerFactoryInternal: SanitizerFactory = noopSanitizer;\n\n//\n// Classes only below here, const variable declarations only above here...\n//\n// Keeping variable declarations and classes together improves minification.\n// Interfaces and type aliases can be interleaved freely.\n//\n\n// Type for classes that have a `_directive` or `_directives[]` field, used by\n// `resolveDirective`\nexport interface DirectiveParent {\n  _$parent?: DirectiveParent;\n  _$isConnected: boolean;\n  __directive?: Directive;\n  __directives?: Array<Directive | undefined>;\n}\n\nfunction trustFromTemplateString(\n  tsa: TemplateStringsArray,\n  stringFromTSA: string\n): TrustedHTML {\n  // A security check to prevent spoofing of Lit template results.\n  // In the future, we may be able to replace this with Array.isTemplateObject,\n  // though we might need to make that check inside of the html and svg\n  // functions, because precompiled templates don't come in as\n  // TemplateStringArray objects.\n  if (!isArray(tsa) || !tsa.hasOwnProperty('raw')) {\n    let message = 'invalid template strings array';\n    if (DEV_MODE) {\n      message = `\n          Internal Error: expected template strings to be an array\n          with a 'raw' field. Faking a template strings array by\n          calling html or svg like an ordinary function is effectively\n          the same as calling unsafeHtml and can lead to major security\n          issues, e.g. opening your code up to XSS attacks.\n          If you're using the html or svg tagged template functions normally\n          and still seeing this error, please file a bug at\n          https://github.com/lit/lit/issues/new?template=bug_report.md\n          and include information about your build tooling, if any.\n        `\n        .trim()\n        .replace(/\\n */g, '\\n');\n    }\n    throw new Error(message);\n  }\n  return policy !== undefined\n    ? policy.createHTML(stringFromTSA)\n    : (stringFromTSA as unknown as TrustedHTML);\n}\n\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment markers denoting the `ChildPart`s\n * and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (\n  strings: TemplateStringsArray,\n  type: ResultType\n): [TrustedHTML, Array<string>] => {\n  // Insert makers into the template HTML to represent the position of\n  // bindings. The following code scans the template strings to determine the\n  // syntactic position of the bindings. They can be in text position, where\n  // we insert an HTML comment, attribute value position, where we insert a\n  // sentinel string and re-write the attribute name, or inside a tag where\n  // we insert the sentinel string.\n  const l = strings.length - 1;\n  // Stores the case-sensitive bound attribute names in the order of their\n  // parts. ElementParts are also reflected in this array as undefined\n  // rather than a string, to disambiguate from attribute bindings.\n  const attrNames: Array<string> = [];\n  let html =\n    type === SVG_RESULT ? '<svg>' : type === MATHML_RESULT ? '<math>' : '';\n\n  // When we're inside a raw text tag (not it's text content), the regex\n  // will still be tagRegex so we can find attributes, but will switch to\n  // this regex when the tag ends.\n  let rawTextEndRegex: RegExp | undefined;\n\n  // The current parsing state, represented as a reference to one of the\n  // regexes\n  let regex = textEndRegex;\n\n  for (let i = 0; i < l; i++) {\n    const s = strings[i];\n    // The index of the end of the last attribute name. When this is\n    // positive at end of a string, it means we're in an attribute value\n    // position and need to rewrite the attribute name.\n    // We also use a special value of -2 to indicate that we encountered\n    // the end of a string in attribute name position.\n    let attrNameEndIndex = -1;\n    let attrName: string | undefined;\n    let lastIndex = 0;\n    let match!: RegExpExecArray | null;\n\n    // The conditions in this loop handle the current parse state, and the\n    // assignments to the `regex` variable are the state transitions.\n    while (lastIndex < s.length) {\n      // Make sure we start searching from where we previously left off\n      regex.lastIndex = lastIndex;\n      match = regex.exec(s);\n      if (match === null) {\n        break;\n      }\n      lastIndex = regex.lastIndex;\n      if (regex === textEndRegex) {\n        if (match[COMMENT_START] === '!--') {\n          regex = commentEndRegex;\n        } else if (match[COMMENT_START] !== undefined) {\n          // We started a weird comment, like </{\n          regex = comment2EndRegex;\n        } else if (match[TAG_NAME] !== undefined) {\n          if (rawTextElement.test(match[TAG_NAME])) {\n            // Record if we encounter a raw-text element. We'll switch to\n            // this regex at the end of the tag.\n            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n          }\n          regex = tagEndRegex;\n        } else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n          if (DEV_MODE) {\n            throw new Error(\n              'Bindings in tag names are not supported. Please use static templates instead. ' +\n                'See https://lit.dev/docs/templates/expressions/#static-expressions'\n            );\n          }\n          regex = tagEndRegex;\n        }\n      } else if (regex === tagEndRegex) {\n        if (match[ENTIRE_MATCH] === '>') {\n          // End of a tag. If we had started a raw-text element, use that\n          // regex\n          regex = rawTextEndRegex ?? textEndRegex;\n          // We may be ending an unquoted attribute value, so make sure we\n          // clear any pending attrNameEndIndex\n          attrNameEndIndex = -1;\n        } else if (match[ATTRIBUTE_NAME] === undefined) {\n          // Attribute name position\n          attrNameEndIndex = -2;\n        } else {\n          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n          attrName = match[ATTRIBUTE_NAME];\n          regex =\n            match[QUOTE_CHAR] === undefined\n              ? tagEndRegex\n              : match[QUOTE_CHAR] === '\"'\n                ? doubleQuoteAttrEndRegex\n                : singleQuoteAttrEndRegex;\n        }\n      } else if (\n        regex === doubleQuoteAttrEndRegex ||\n        regex === singleQuoteAttrEndRegex\n      ) {\n        regex = tagEndRegex;\n      } else if (regex === commentEndRegex || regex === comment2EndRegex) {\n        regex = textEndRegex;\n      } else {\n        // Not one of the five state regexes, so it must be the dynamically\n        // created raw text regex and we're at the close of that element.\n        regex = tagEndRegex;\n        rawTextEndRegex = undefined;\n      }\n    }\n\n    if (DEV_MODE) {\n      // If we have a attrNameEndIndex, which indicates that we should\n      // rewrite the attribute name, assert that we're in a valid attribute\n      // position - either in a tag, or a quoted attribute value.\n      console.assert(\n        attrNameEndIndex === -1 ||\n          regex === tagEndRegex ||\n          regex === singleQuoteAttrEndRegex ||\n          regex === doubleQuoteAttrEndRegex,\n        'unexpected parse state B'\n      );\n    }\n\n    // We have four cases:\n    //  1. We're in text position, and not in a raw text element\n    //     (regex === textEndRegex): insert a comment marker.\n    //  2. We have a non-negative attrNameEndIndex which means we need to\n    //     rewrite the attribute name to add a bound attribute suffix.\n    //  3. We're at the non-first binding in a multi-binding attribute, use a\n    //     plain marker.\n    //  4. We're somewhere else inside the tag. If we're in attribute name\n    //     position (attrNameEndIndex === -2), add a sequential suffix to\n    //     generate a unique attribute name.\n\n    // Detect a binding next to self-closing tag end and insert a space to\n    // separate the marker from the tag end:\n    const end =\n      regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n    html +=\n      regex === textEndRegex\n        ? s + nodeMarker\n        : attrNameEndIndex >= 0\n          ? (attrNames.push(attrName!),\n            s.slice(0, attrNameEndIndex) +\n              boundAttributeSuffix +\n              s.slice(attrNameEndIndex)) +\n            marker +\n            end\n          : s + marker + (attrNameEndIndex === -2 ? i : end);\n  }\n\n  const htmlResult: string | TrustedHTML =\n    html +\n    (strings[l] || '<?>') +\n    (type === SVG_RESULT ? '</svg>' : type === MATHML_RESULT ? '</math>' : '');\n\n  // Returned as an array for terseness\n  return [trustFromTemplateString(strings, htmlResult), attrNames];\n};\n\n/** @internal */\nexport type {Template};\nclass Template {\n  /** @internal */\n  el!: HTMLTemplateElement;\n\n  parts: Array<TemplatePart> = [];\n\n  constructor(\n    // This property needs to remain unminified.\n    {strings, ['_$litType$']: type}: UncompiledTemplateResult,\n    options?: RenderOptions\n  ) {\n    let node: Node | null;\n    let nodeIndex = 0;\n    let attrNameIndex = 0;\n    const partCount = strings.length - 1;\n    const parts = this.parts;\n\n    // Create template element\n    const [html, attrNames] = getTemplateHtml(strings, type);\n    this.el = Template.createElement(html, options);\n    walker.currentNode = this.el.content;\n\n    // Re-parent SVG or MathML nodes into template root\n    if (type === SVG_RESULT || type === MATHML_RESULT) {\n      const wrapper = this.el.content.firstChild!;\n      wrapper.replaceWith(...wrapper.childNodes);\n    }\n\n    // Walk the template to find binding markers and create TemplateParts\n    while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n      if (node.nodeType === 1) {\n        if (DEV_MODE) {\n          const tag = (node as Element).localName;\n          // Warn if `textarea` includes an expression and throw if `template`\n          // does since these are not supported. We do this by checking\n          // innerHTML for anything that looks like a marker. This catches\n          // cases like bindings in textarea there markers turn into text nodes.\n          if (\n            /^(?:textarea|template)$/i!.test(tag) &&\n            (node as Element).innerHTML.includes(marker)\n          ) {\n            const m =\n              `Expressions are not supported inside \\`${tag}\\` ` +\n              `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +\n              `information.`;\n            if (tag === 'template') {\n              throw new Error(m);\n            } else issueWarning('', m);\n          }\n        }\n        // TODO (justinfagnani): for attempted dynamic tag names, we don't\n        // increment the bindingIndex, and it'll be off by 1 in the element\n        // and off by two after it.\n        if ((node as Element).hasAttributes()) {\n          for (const name of (node as Element).getAttributeNames()) {\n            if (name.endsWith(boundAttributeSuffix)) {\n              const realName = attrNames[attrNameIndex++];\n              const value = (node as Element).getAttribute(name)!;\n              const statics = value.split(marker);\n              const m = /([.?@])?(.*)/.exec(realName)!;\n              parts.push({\n                type: ATTRIBUTE_PART,\n                index: nodeIndex,\n                name: m[2],\n                strings: statics,\n                ctor:\n                  m[1] === '.'\n                    ? PropertyPart\n                    : m[1] === '?'\n                      ? BooleanAttributePart\n                      : m[1] === '@'\n                        ? EventPart\n                        : AttributePart,\n              });\n              (node as Element).removeAttribute(name);\n            } else if (name.startsWith(marker)) {\n              parts.push({\n                type: ELEMENT_PART,\n                index: nodeIndex,\n              });\n              (node as Element).removeAttribute(name);\n            }\n          }\n        }\n        // TODO (justinfagnani): benchmark the regex against testing for each\n        // of the 3 raw text element names.\n        if (rawTextElement.test((node as Element).tagName)) {\n          // For raw text elements we need to split the text content on\n          // markers, create a Text node for each segment, and create\n          // a TemplatePart for each marker.\n          const strings = (node as Element).textContent!.split(marker);\n          const lastIndex = strings.length - 1;\n          if (lastIndex > 0) {\n            (node as Element).textContent = trustedTypes\n              ? (trustedTypes.emptyScript as unknown as '')\n              : '';\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for child parts\n            for (let i = 0; i < lastIndex; i++) {\n              (node as Element).append(strings[i], createMarker());\n              // Walk past the marker node we just added\n              walker.nextNode();\n              parts.push({type: CHILD_PART, index: ++nodeIndex});\n            }\n            // Note because this marker is added after the walker's current\n            // node, it will be walked to in the outer loop (and ignored), so\n            // we don't need to adjust nodeIndex here\n            (node as Element).append(strings[lastIndex], createMarker());\n          }\n        }\n      } else if (node.nodeType === 8) {\n        const data = (node as Comment).data;\n        if (data === markerMatch) {\n          parts.push({type: CHILD_PART, index: nodeIndex});\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            parts.push({type: COMMENT_PART, index: nodeIndex});\n            // Move to the end of the match\n            i += marker.length - 1;\n          }\n        }\n      }\n      nodeIndex++;\n    }\n\n    if (DEV_MODE) {\n      // If there was a duplicate attribute on a tag, then when the tag is\n      // parsed into an element the attribute gets de-duplicated. We can detect\n      // this mismatch if we haven't precisely consumed every attribute name\n      // when preparing the template. This works because `attrNames` is built\n      // from the template string and `attrNameIndex` comes from processing the\n      // resulting DOM.\n      if (attrNames.length !== attrNameIndex) {\n        throw new Error(\n          `Detected duplicate attribute bindings. This occurs if your template ` +\n            `has duplicate attributes on an element tag. For example ` +\n            `\"<input ?disabled=\\${true} ?disabled=\\${false}>\" contains a ` +\n            `duplicate \"disabled\" attribute. The error was detected in ` +\n            `the following template: \\n` +\n            '`' +\n            strings.join('${...}') +\n            '`'\n        );\n      }\n    }\n\n    // We could set walker.currentNode to another node here to prevent a memory\n    // leak, but every time we prepare a template, we immediately render it\n    // and re-use the walker in new TemplateInstance._clone().\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'template prep',\n        template: this,\n        clonableTemplate: this.el,\n        parts: this.parts,\n        strings,\n      });\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @nocollapse */\n  static createElement(html: TrustedHTML, _options?: RenderOptions) {\n    const el = d.createElement('template');\n    el.innerHTML = html as unknown as string;\n    return el;\n  }\n}\n\nexport interface Disconnectable {\n  _$parent?: Disconnectable;\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // Rather than hold connection state on instances, Disconnectables recursively\n  // fetch the connection state from the RootPart they are connected in via\n  // getters up the Disconnectable tree via _$parent references. This pushes the\n  // cost of tracking the isConnected state to `AsyncDirectives`, and avoids\n  // needing to pass all Disconnectables (parts, template instances, and\n  // directives) their connection state each time it changes, which would be\n  // costly for trees that have no AsyncDirectives.\n  _$isConnected: boolean;\n}\n\nfunction resolveDirective(\n  part: ChildPart | AttributePart | ElementPart,\n  value: unknown,\n  parent: DirectiveParent = part,\n  attributeIndex?: number\n): unknown {\n  // Bail early if the value is explicitly noChange. Note, this means any\n  // nested directive is still attached and is not run.\n  if (value === noChange) {\n    return value;\n  }\n  let currentDirective =\n    attributeIndex !== undefined\n      ? (parent as AttributePart).__directives?.[attributeIndex]\n      : (parent as ChildPart | ElementPart | Directive).__directive;\n  const nextDirectiveConstructor = isPrimitive(value)\n    ? undefined\n    : // This property needs to remain unminified.\n      (value as DirectiveResult)['_$litDirective$'];\n  if (currentDirective?.constructor !== nextDirectiveConstructor) {\n    // This property needs to remain unminified.\n    currentDirective?.['_$notifyDirectiveConnectionChanged']?.(false);\n    if (nextDirectiveConstructor === undefined) {\n      currentDirective = undefined;\n    } else {\n      currentDirective = new nextDirectiveConstructor(part as PartInfo);\n      currentDirective._$initialize(part, parent, attributeIndex);\n    }\n    if (attributeIndex !== undefined) {\n      ((parent as AttributePart).__directives ??= [])[attributeIndex] =\n        currentDirective;\n    } else {\n      (parent as ChildPart | Directive).__directive = currentDirective;\n    }\n  }\n  if (currentDirective !== undefined) {\n    value = resolveDirective(\n      part,\n      currentDirective._$resolve(part, (value as DirectiveResult).values),\n      currentDirective,\n      attributeIndex\n    );\n  }\n  return value;\n}\n\nexport type {TemplateInstance};\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance implements Disconnectable {\n  _$template: Template;\n  _$parts: Array<Part | undefined> = [];\n\n  /** @internal */\n  _$parent: ChildPart;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  constructor(template: Template, parent: ChildPart) {\n    this._$template = template;\n    this._$parent = parent;\n  }\n\n  // Called by ChildPart parentNode getter\n  get parentNode() {\n    return this._$parent.parentNode;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  // This method is separate from the constructor because we need to return a\n  // DocumentFragment and we don't want to hold onto it with an instance field.\n  _clone(options: RenderOptions | undefined) {\n    const {\n      el: {content},\n      parts: parts,\n    } = this._$template;\n    const fragment = (options?.creationScope ?? d).importNode(content, true);\n    walker.currentNode = fragment;\n\n    let node = walker.nextNode()!;\n    let nodeIndex = 0;\n    let partIndex = 0;\n    let templatePart = parts[0];\n\n    while (templatePart !== undefined) {\n      if (nodeIndex === templatePart.index) {\n        let part: Part | undefined;\n        if (templatePart.type === CHILD_PART) {\n          part = new ChildPart(\n            node as HTMLElement,\n            node.nextSibling,\n            this,\n            options\n          );\n        } else if (templatePart.type === ATTRIBUTE_PART) {\n          part = new templatePart.ctor(\n            node as HTMLElement,\n            templatePart.name,\n            templatePart.strings,\n            this,\n            options\n          );\n        } else if (templatePart.type === ELEMENT_PART) {\n          part = new ElementPart(node as HTMLElement, this, options);\n        }\n        this._$parts.push(part);\n        templatePart = parts[++partIndex];\n      }\n      if (nodeIndex !== templatePart?.index) {\n        node = walker.nextNode()!;\n        nodeIndex++;\n      }\n    }\n    // We need to set the currentNode away from the cloned tree so that we\n    // don't hold onto the tree even if the tree is detached and should be\n    // freed.\n    walker.currentNode = d;\n    return fragment;\n  }\n\n  _update(values: Array<unknown>) {\n    let i = 0;\n    for (const part of this._$parts) {\n      if (part !== undefined) {\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'set part',\n            part,\n            value: values[i],\n            valueIndex: i,\n            values,\n            templateInstance: this,\n          });\n        if ((part as AttributePart).strings !== undefined) {\n          (part as AttributePart)._$setValue(values, part as AttributePart, i);\n          // The number of values the part consumes is part.strings.length - 1\n          // since values are in between template spans. We increment i by 1\n          // later in the loop, so increment it by part.strings.length - 2 here\n          i += (part as AttributePart).strings!.length - 2;\n        } else {\n          part._$setValue(values[i]);\n        }\n      }\n      i++;\n    }\n  }\n}\n\n/*\n * Parts\n */\ntype AttributeTemplatePart = {\n  readonly type: typeof ATTRIBUTE_PART;\n  readonly index: number;\n  readonly name: string;\n  readonly ctor: typeof AttributePart;\n  readonly strings: ReadonlyArray<string>;\n};\ntype ChildTemplatePart = {\n  readonly type: typeof CHILD_PART;\n  readonly index: number;\n};\ntype ElementTemplatePart = {\n  readonly type: typeof ELEMENT_PART;\n  readonly index: number;\n};\ntype CommentTemplatePart = {\n  readonly type: typeof COMMENT_PART;\n  readonly index: number;\n};\n\n/**\n * A TemplatePart represents a dynamic part in a template, before the template\n * is instantiated. When a template is instantiated Parts are created from\n * TemplateParts.\n */\ntype TemplatePart =\n  | ChildTemplatePart\n  | AttributeTemplatePart\n  | ElementTemplatePart\n  | CommentTemplatePart;\n\nexport type Part =\n  | ChildPart\n  | AttributePart\n  | PropertyPart\n  | BooleanAttributePart\n  | ElementPart\n  | EventPart;\n\nexport type {ChildPart};\nclass ChildPart implements Disconnectable {\n  readonly type = CHILD_PART;\n  readonly options: RenderOptions | undefined;\n  _$committedValue: unknown = nothing;\n  /** @internal */\n  __directive?: Directive;\n  /** @internal */\n  _$startNode: ChildNode;\n  /** @internal */\n  _$endNode: ChildNode | null;\n  private _textSanitizer: ValueSanitizer | undefined;\n  /** @internal */\n  _$parent: Disconnectable | undefined;\n  /**\n   * Connection state for RootParts only (i.e. ChildPart without _$parent\n   * returned from top-level `render`). This field is unused otherwise. The\n   * intention would be clearer if we made `RootPart` a subclass of `ChildPart`\n   * with this field (and a different _$isConnected getter), but the subclass\n   * caused a perf regression, possibly due to making call sites polymorphic.\n   * @internal\n   */\n  __isConnected: boolean;\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    // ChildParts that are not at the root should always be created with a\n    // parent; only RootChildNode's won't, so they return the local isConnected\n    // state\n    return this._$parent?._$isConnected ?? this.__isConnected;\n  }\n\n  // The following fields will be patched onto ChildParts when required by\n  // AsyncDirective\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /** @internal */\n  _$notifyConnectionChanged?(\n    isConnected: boolean,\n    removeFromParent?: boolean,\n    from?: number\n  ): void;\n  /** @internal */\n  _$reparentDisconnectables?(parent: Disconnectable): void;\n\n  constructor(\n    startNode: ChildNode,\n    endNode: ChildNode | null,\n    parent: TemplateInstance | ChildPart | undefined,\n    options: RenderOptions | undefined\n  ) {\n    this._$startNode = startNode;\n    this._$endNode = endNode;\n    this._$parent = parent;\n    this.options = options;\n    // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n    // no _$parent); the value on a non-root-part is \"don't care\", but checking\n    // for parent would be more code\n    this.__isConnected = options?.isConnected ?? true;\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      // Explicitly initialize for consistent class shape.\n      this._textSanitizer = undefined;\n    }\n  }\n\n  /**\n   * The parent node into which the part renders its content.\n   *\n   * A ChildPart's content consists of a range of adjacent child nodes of\n   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n   * `.endNode`).\n   *\n   * - If both `.startNode` and `.endNode` are non-null, then the part's content\n   * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n   *\n   * - If `.startNode` is non-null but `.endNode` is null, then the part's\n   * content consists of all siblings following `.startNode`, up to and\n   * including the last child of `.parentNode`. If `.endNode` is non-null, then\n   * `.startNode` will always be non-null.\n   *\n   * - If both `.endNode` and `.startNode` are null, then the part's content\n   * consists of all child nodes of `.parentNode`.\n   */\n  get parentNode(): Node {\n    let parentNode: Node = wrap(this._$startNode).parentNode!;\n    const parent = this._$parent;\n    if (\n      parent !== undefined &&\n      parentNode?.nodeType === 11 /* Node.DOCUMENT_FRAGMENT */\n    ) {\n      // If the parentNode is a DocumentFragment, it may be because the DOM is\n      // still in the cloned fragment during initial render; if so, get the real\n      // parentNode the part will be committed into by asking the parent.\n      parentNode = (parent as ChildPart | TemplateInstance).parentNode;\n    }\n    return parentNode;\n  }\n\n  /**\n   * The part's leading marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get startNode(): Node | null {\n    return this._$startNode;\n  }\n\n  /**\n   * The part's trailing marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get endNode(): Node | null {\n    return this._$endNode;\n  }\n\n  _$setValue(value: unknown, directiveParent: DirectiveParent = this): void {\n    if (DEV_MODE && this.parentNode === null) {\n      throw new Error(\n        `This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`\n      );\n    }\n    value = resolveDirective(this, value, directiveParent);\n    if (isPrimitive(value)) {\n      // Non-rendering child values. It's important that these do not render\n      // empty text nodes to avoid issues with preventing default <slot>\n      // fallback content.\n      if (value === nothing || value == null || value === '') {\n        if (this._$committedValue !== nothing) {\n          debugLogEvent &&\n            debugLogEvent({\n              kind: 'commit nothing to child',\n              start: this._$startNode,\n              end: this._$endNode,\n              parent: this._$parent,\n              options: this.options,\n            });\n          this._$clear();\n        }\n        this._$committedValue = nothing;\n      } else if (value !== this._$committedValue && value !== noChange) {\n        this._commitText(value);\n      }\n      // This property needs to remain unminified.\n    } else if ((value as TemplateResult)['_$litType$'] !== undefined) {\n      this._commitTemplateResult(value as TemplateResult);\n    } else if ((value as Node).nodeType !== undefined) {\n      if (DEV_MODE && this.options?.host === value) {\n        this._commitText(\n          `[probable mistake: rendered a template's host in itself ` +\n            `(commonly caused by writing \\${this} in a template]`\n        );\n        console.warn(\n          `Attempted to render the template host`,\n          value,\n          `inside itself. This is almost always a mistake, and in dev mode `,\n          `we render some warning text. In production however, we'll `,\n          `render it, which will usually result in an error, and sometimes `,\n          `in the element disappearing from the DOM.`\n        );\n        return;\n      }\n      this._commitNode(value as Node);\n    } else if (isIterable(value)) {\n      this._commitIterable(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert<T extends Node>(node: T) {\n    return wrap(wrap(this._$startNode).parentNode!).insertBefore(\n      node,\n      this._$endNode\n    );\n  }\n\n  private _commitNode(value: Node): void {\n    if (this._$committedValue !== value) {\n      this._$clear();\n      if (\n        ENABLE_EXTRA_SECURITY_HOOKS &&\n        sanitizerFactoryInternal !== noopSanitizer\n      ) {\n        const parentNodeName = this._$startNode.parentNode?.nodeName;\n        if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n          let message = 'Forbidden';\n          if (DEV_MODE) {\n            if (parentNodeName === 'STYLE') {\n              message =\n                `Lit does not support binding inside style nodes. ` +\n                `This is a security risk, as style injection attacks can ` +\n                `exfiltrate data and spoof UIs. ` +\n                `Consider instead using css\\`...\\` literals ` +\n                `to compose styles, and do dynamic styling with ` +\n                `css custom properties, ::parts, <slot>s, ` +\n                `and by mutating the DOM rather than stylesheets.`;\n            } else {\n              message =\n                `Lit does not support binding inside script nodes. ` +\n                `This is a security risk, as it could allow arbitrary ` +\n                `code execution.`;\n            }\n          }\n          throw new Error(message);\n        }\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit node',\n          start: this._$startNode,\n          parent: this._$parent,\n          value: value,\n          options: this.options,\n        });\n      this._$committedValue = this._insert(value);\n    }\n  }\n\n  private _commitText(value: unknown): void {\n    // If the committed value is a primitive it means we called _commitText on\n    // the previous render, and we know that this._$startNode.nextSibling is a\n    // Text node. We can now just replace the text content (.data) of the node.\n    if (\n      this._$committedValue !== nothing &&\n      isPrimitive(this._$committedValue)\n    ) {\n      const node = wrap(this._$startNode).nextSibling as Text;\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(node, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit text',\n          node,\n          value,\n          options: this.options,\n        });\n      (node as Text).data = value as string;\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        const textNode = d.createTextNode('');\n        this._commitNode(textNode);\n        // When setting text content, for security purposes it matters a lot\n        // what the parent is. For example, <style> and <script> need to be\n        // handled with care, while <span> does not. So first we need to put a\n        // text node into the document, then we can sanitize its content.\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'commit text',\n            node: textNode,\n            value,\n            options: this.options,\n          });\n        textNode.data = value as string;\n      } else {\n        this._commitNode(d.createTextNode(value as string));\n        debugLogEvent &&\n          debugLogEvent({\n            kind: 'commit text',\n            node: wrap(this._$startNode).nextSibling as Text,\n            value,\n            options: this.options,\n          });\n      }\n    }\n    this._$committedValue = value;\n  }\n\n  private _commitTemplateResult(\n    result: TemplateResult | CompiledTemplateResult\n  ): void {\n    // This property needs to remain unminified.\n    const {values, ['_$litType$']: type} = result;\n    // If $litType$ is a number, result is a plain TemplateResult and we get\n    // the template from the template cache. If not, result is a\n    // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n    // to create the <template> element the first time we see it.\n    const template: Template | CompiledTemplate =\n      typeof type === 'number'\n        ? this._$getTemplate(result as UncompiledTemplateResult)\n        : (type.el === undefined &&\n            (type.el = Template.createElement(\n              trustFromTemplateString(type.h, type.h[0]),\n              this.options\n            )),\n          type);\n\n    if ((this._$committedValue as TemplateInstance)?._$template === template) {\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template updating',\n          template,\n          instance: this._$committedValue as TemplateInstance,\n          parts: (this._$committedValue as TemplateInstance)._$parts,\n          options: this.options,\n          values,\n        });\n      (this._$committedValue as TemplateInstance)._update(values);\n    } else {\n      const instance = new TemplateInstance(template as Template, this);\n      const fragment = instance._clone(this.options);\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template instantiated',\n          template,\n          instance,\n          parts: instance._$parts,\n          options: this.options,\n          fragment,\n          values,\n        });\n      instance._update(values);\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'template instantiated and updated',\n          template,\n          instance,\n          parts: instance._$parts,\n          options: this.options,\n          fragment,\n          values,\n        });\n      this._commitNode(fragment);\n      this._$committedValue = instance;\n    }\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @internal */\n  _$getTemplate(result: UncompiledTemplateResult) {\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n      templateCache.set(result.strings, (template = new Template(result)));\n    }\n    return template;\n  }\n\n  private _commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If value is an array, then the previous render was of an\n    // iterable and value will contain the ChildParts from the previous\n    // render. If value is not an array, clear this part and make a new\n    // array for ChildParts.\n    if (!isArray(this._$committedValue)) {\n      this._$committedValue = [];\n      this._$clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this._$committedValue as ChildPart[];\n    let partIndex = 0;\n    let itemPart: ChildPart | undefined;\n\n    for (const item of value) {\n      if (partIndex === itemParts.length) {\n        // If no existing part, create a new one\n        // TODO (justinfagnani): test perf impact of always creating two parts\n        // instead of sharing parts between nodes\n        // https://github.com/lit/lit/issues/1266\n        itemParts.push(\n          (itemPart = new ChildPart(\n            this._insert(createMarker()),\n            this._insert(createMarker()),\n            this,\n            this.options\n          ))\n        );\n      } else {\n        // Reuse an existing part\n        itemPart = itemParts[partIndex];\n      }\n      itemPart._$setValue(item);\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // itemParts always have end nodes\n      this._$clear(\n        itemPart && wrap(itemPart._$endNode!).nextSibling,\n        partIndex\n      );\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n    }\n  }\n\n  /**\n   * Removes the nodes contained within this Part from the DOM.\n   *\n   * @param start Start node to clear from, for clearing a subset of the part's\n   *     DOM (used when truncating iterables)\n   * @param from  When `start` is specified, the index within the iterable from\n   *     which ChildParts are being removed, used for disconnecting directives\n   *     in those Parts.\n   *\n   * @internal\n   */\n  _$clear(\n    start: ChildNode | null = wrap(this._$startNode).nextSibling,\n    from?: number\n  ) {\n    this._$notifyConnectionChanged?.(false, true, from);\n    while (start !== this._$endNode) {\n      // The non-null assertion is safe because if _$startNode.nextSibling is\n      // null, then _$endNode is also null, and we would not have entered this\n      // loop.\n      const n = wrap(start!).nextSibling;\n      wrap(start!).remove();\n      start = n;\n    }\n  }\n\n  /**\n   * Implementation of RootPart's `isConnected`. Note that this method\n   * should only be called on `RootPart`s (the `ChildPart` returned from a\n   * top-level `render()` call). It has no effect on non-root ChildParts.\n   * @param isConnected Whether to set\n   * @internal\n   */\n  setConnected(isConnected: boolean) {\n    if (this._$parent === undefined) {\n      this.__isConnected = isConnected;\n      this._$notifyConnectionChanged?.(isConnected);\n    } else if (DEV_MODE) {\n      throw new Error(\n        'part.setConnected() may only be called on a ' +\n          'RootPart returned from render().'\n      );\n    }\n  }\n}\n\n/**\n * A top-level `ChildPart` returned from `render` that manages the connected\n * state of `AsyncDirective`s created throughout the tree below it.\n */\nexport interface RootPart extends ChildPart {\n  /**\n   * Sets the connection state for `AsyncDirective`s contained within this root\n   * ChildPart.\n   *\n   * lit-html does not automatically monitor the connectedness of DOM rendered;\n   * as such, it is the responsibility of the caller to `render` to ensure that\n   * `part.setConnected(false)` is called before the part object is potentially\n   * discarded, to ensure that `AsyncDirective`s have a chance to dispose of\n   * any resources being held. If a `RootPart` that was previously\n   * disconnected is subsequently re-connected (and its `AsyncDirective`s should\n   * re-connect), `setConnected(true)` should be called.\n   *\n   * @param isConnected Whether directives within this tree should be connected\n   * or not\n   */\n  setConnected(isConnected: boolean): void;\n}\n\nexport type {AttributePart};\nclass AttributePart implements Disconnectable {\n  readonly type:\n    | typeof ATTRIBUTE_PART\n    | typeof PROPERTY_PART\n    | typeof BOOLEAN_ATTRIBUTE_PART\n    | typeof EVENT_PART = ATTRIBUTE_PART;\n  readonly element: HTMLElement;\n  readonly name: string;\n  readonly options: RenderOptions | undefined;\n\n  /**\n   * If this attribute part represents an interpolation, this contains the\n   * static strings of the interpolation. For single-value, complete bindings,\n   * this is undefined.\n   */\n  readonly strings?: ReadonlyArray<string>;\n  /** @internal */\n  _$committedValue: unknown | Array<unknown> = nothing;\n  /** @internal */\n  __directives?: Array<Directive | undefined>;\n  /** @internal */\n  _$parent: Disconnectable;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  protected _sanitizer: ValueSanitizer | undefined;\n\n  get tagName() {\n    return this.element.tagName;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this.element = element;\n    this.name = name;\n    this._$parent = parent;\n    this.options = options;\n    if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n      this._$committedValue = new Array(strings.length - 1).fill(new String());\n      this.strings = strings;\n    } else {\n      this._$committedValue = nothing;\n    }\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      this._sanitizer = undefined;\n    }\n  }\n\n  /**\n   * Sets the value of this part by resolving the value from possibly multiple\n   * values and static strings and committing it to the DOM.\n   * If this part is single-valued, `this._strings` will be undefined, and the\n   * method will be called with a single value argument. If this part is\n   * multi-value, `this._strings` will be defined, and the method is called\n   * with the value array of the part's owning TemplateInstance, and an offset\n   * into the value array from which the values should be read.\n   * This method is overloaded this way to eliminate short-lived array slices\n   * of the template instance values, and allow a fast-path for single-valued\n   * parts.\n   *\n   * @param value The part value, or an array of values for multi-valued parts\n   * @param valueIndex the index to start reading values from. `undefined` for\n   *   single-valued parts\n   * @param noCommit causes the part to not commit its value to the DOM. Used\n   *   in hydration to prime attribute parts with their first-rendered value,\n   *   but not set the attribute, and in SSR to no-op the DOM operation and\n   *   capture the value for serialization.\n   *\n   * @internal\n   */\n  _$setValue(\n    value: unknown | Array<unknown>,\n    directiveParent: DirectiveParent = this,\n    valueIndex?: number,\n    noCommit?: boolean\n  ) {\n    const strings = this.strings;\n\n    // Whether any of the values has changed, for dirty-checking\n    let change = false;\n\n    if (strings === undefined) {\n      // Single-value binding case\n      value = resolveDirective(this, value, directiveParent, 0);\n      change =\n        !isPrimitive(value) ||\n        (value !== this._$committedValue && value !== noChange);\n      if (change) {\n        this._$committedValue = value;\n      }\n    } else {\n      // Interpolation case\n      const values = value as Array<unknown>;\n      value = strings[0];\n\n      let i, v;\n      for (i = 0; i < strings.length - 1; i++) {\n        v = resolveDirective(this, values[valueIndex! + i], directiveParent, i);\n\n        if (v === noChange) {\n          // If the user-provided value is `noChange`, use the previous value\n          v = (this._$committedValue as Array<unknown>)[i];\n        }\n        change ||=\n          !isPrimitive(v) || v !== (this._$committedValue as Array<unknown>)[i];\n        if (v === nothing) {\n          value = nothing;\n        } else if (value !== nothing) {\n          value += (v ?? '') + strings[i + 1];\n        }\n        // We always record each value, even if one is `nothing`, for future\n        // change detection.\n        (this._$committedValue as Array<unknown>)[i] = v;\n      }\n    }\n    if (change && !noCommit) {\n      this._commitValue(value);\n    }\n  }\n\n  /** @internal */\n  _commitValue(value: unknown) {\n    if (value === nothing) {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._sanitizer === undefined) {\n          this._sanitizer = sanitizerFactoryInternal(\n            this.element,\n            this.name,\n            'attribute'\n          );\n        }\n        value = this._sanitizer(value ?? '');\n      }\n      debugLogEvent &&\n        debugLogEvent({\n          kind: 'commit attribute',\n          element: this.element,\n          name: this.name,\n          value,\n          options: this.options,\n        });\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        (value ?? '') as string\n      );\n    }\n  }\n}\n\nexport type {PropertyPart};\nclass PropertyPart extends AttributePart {\n  override readonly type = PROPERTY_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      if (this._sanitizer === undefined) {\n        this._sanitizer = sanitizerFactoryInternal(\n          this.element,\n          this.name,\n          'property'\n        );\n      }\n      value = this._sanitizer(value);\n    }\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit property',\n        element: this.element,\n        name: this.name,\n        value,\n        options: this.options,\n      });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.element as any)[this.name] = value === nothing ? undefined : value;\n  }\n}\n\nexport type {BooleanAttributePart};\nclass BooleanAttributePart extends AttributePart {\n  override readonly type = BOOLEAN_ATTRIBUTE_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit boolean attribute',\n        element: this.element,\n        name: this.name,\n        value: !!(value && value !== nothing),\n        options: this.options,\n      });\n    (wrap(this.element) as Element).toggleAttribute(\n      this.name,\n      !!value && value !== nothing\n    );\n  }\n}\n\ntype EventListenerWithOptions = EventListenerOrEventListenerObject &\n  Partial<AddEventListenerOptions>;\n\n/**\n * An AttributePart that manages an event listener via add/removeEventListener.\n *\n * This part works by adding itself as the event listener on an element, then\n * delegating to the value passed to it. This reduces the number of calls to\n * add/removeEventListener if the listener changes frequently, such as when an\n * inline function is used as a listener.\n *\n * Because event options are passed when adding listeners, we must take case\n * to add and remove the part as a listener when the event options change.\n */\nexport type {EventPart};\nclass EventPart extends AttributePart {\n  override readonly type = EVENT_PART;\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    super(element, name, strings, parent, options);\n\n    if (DEV_MODE && this.strings !== undefined) {\n      throw new Error(\n        `A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` +\n          'invalid content. Event listeners in templates must have exactly ' +\n          'one expression and no surrounding text.'\n      );\n    }\n  }\n\n  // EventPart does not use the base _$setValue/_resolveValue implementation\n  // since the dirty checking is more complex\n  /** @internal */\n  override _$setValue(\n    newListener: unknown,\n    directiveParent: DirectiveParent = this\n  ) {\n    newListener =\n      resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n    if (newListener === noChange) {\n      return;\n    }\n    const oldListener = this._$committedValue;\n\n    // If the new value is nothing or any options change we have to remove the\n    // part as a listener.\n    const shouldRemoveListener =\n      (newListener === nothing && oldListener !== nothing) ||\n      (newListener as EventListenerWithOptions).capture !==\n        (oldListener as EventListenerWithOptions).capture ||\n      (newListener as EventListenerWithOptions).once !==\n        (oldListener as EventListenerWithOptions).once ||\n      (newListener as EventListenerWithOptions).passive !==\n        (oldListener as EventListenerWithOptions).passive;\n\n    // If the new value is not nothing and we removed the listener, we have\n    // to add the part as a listener.\n    const shouldAddListener =\n      newListener !== nothing &&\n      (oldListener === nothing || shouldRemoveListener);\n\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit event listener',\n        element: this.element,\n        name: this.name,\n        value: newListener,\n        options: this.options,\n        removeListener: shouldRemoveListener,\n        addListener: shouldAddListener,\n        oldListener,\n      });\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n        this.name,\n        this,\n        oldListener as EventListenerWithOptions\n      );\n    }\n    if (shouldAddListener) {\n      this.element.addEventListener(\n        this.name,\n        this,\n        newListener as EventListenerWithOptions\n      );\n    }\n    this._$committedValue = newListener;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this._$committedValue === 'function') {\n      this._$committedValue.call(this.options?.host ?? this.element, event);\n    } else {\n      (this._$committedValue as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\nexport type {ElementPart};\nclass ElementPart implements Disconnectable {\n  readonly type = ELEMENT_PART;\n\n  /** @internal */\n  __directive?: Directive;\n\n  // This is to ensure that every Part has a _$committedValue\n  _$committedValue: undefined;\n\n  /** @internal */\n  _$parent!: Disconnectable;\n\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  options: RenderOptions | undefined;\n\n  constructor(\n    public element: Element,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this._$parent = parent;\n    this.options = options;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  _$setValue(value: unknown): void {\n    debugLogEvent &&\n      debugLogEvent({\n        kind: 'commit to element binding',\n        element: this.element,\n        value,\n        options: this.options,\n      });\n    resolveDirective(this, value);\n  }\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LH = {\n  // Used in lit-ssr\n  _boundAttributeSuffix: boundAttributeSuffix,\n  _marker: marker,\n  _markerMatch: markerMatch,\n  _HTML_RESULT: HTML_RESULT,\n  _getTemplateHtml: getTemplateHtml,\n  // Used in tests and private-ssr-support\n  _TemplateInstance: TemplateInstance,\n  _isIterable: isIterable,\n  _resolveDirective: resolveDirective,\n  _ChildPart: ChildPart,\n  _AttributePart: AttributePart,\n  _BooleanAttributePart: BooleanAttributePart,\n  _EventPart: EventPart,\n  _PropertyPart: PropertyPart,\n  _ElementPart: ElementPart,\n};\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? global.litHtmlPolyfillSupportDevMode\n  : global.litHtmlPolyfillSupport;\npolyfillSupport?.(Template, ChildPart);\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n(global.litHtmlVersions ??= []).push('3.3.1');\nif (DEV_MODE && global.litHtmlVersions.length > 1) {\n  queueMicrotask(() => {\n    issueWarning!(\n      'multiple-versions',\n      `Multiple versions of Lit loaded. ` +\n        `Loading multiple versions is not recommended.`\n    );\n  });\n}\n\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n *\n * This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\n * it to the container `document.body`.\n *\n * ```js\n * import {html, render} from 'lit';\n *\n * const name = \"Zoe\";\n * render(html`<p>Hello, ${name}!</p>`, document.body);\n * ```\n *\n * @param value Any [renderable\n *   value](https://lit.dev/docs/templates/expressions/#child-expressions),\n *   typically a {@linkcode TemplateResult} created by evaluating a template tag\n *   like {@linkcode html} or {@linkcode svg}.\n * @param container A DOM container to render to. The first render will append\n *   the rendered value to the container, and subsequent renders will\n *   efficiently update the rendered value if the same result type was\n *   previously rendered there.\n * @param options See {@linkcode RenderOptions} for options documentation.\n * @see\n * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}\n */\nexport const render = (\n  value: unknown,\n  container: HTMLElement | DocumentFragment,\n  options?: RenderOptions\n): RootPart => {\n  if (DEV_MODE && container == null) {\n    // Give a clearer error message than\n    //     Uncaught TypeError: Cannot read properties of null (reading\n    //     '_$litPart$')\n    // which reads like an internal Lit error.\n    throw new TypeError(`The container to render into may not be ${container}`);\n  }\n  const renderId = DEV_MODE ? debugLogRenderId++ : 0;\n  const partOwnerNode = options?.renderBefore ?? container;\n  // This property needs to remain unminified.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let part: ChildPart = (partOwnerNode as any)['_$litPart$'];\n  debugLogEvent &&\n    debugLogEvent({\n      kind: 'begin render',\n      id: renderId,\n      value,\n      container,\n      options,\n      part,\n    });\n  if (part === undefined) {\n    const endNode = options?.renderBefore ?? null;\n    // This property needs to remain unminified.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (partOwnerNode as any)['_$litPart$'] = part = new ChildPart(\n      container.insertBefore(createMarker(), endNode),\n      endNode,\n      undefined,\n      options ?? {}\n    );\n  }\n  part._$setValue(value);\n  debugLogEvent &&\n    debugLogEvent({\n      kind: 'end render',\n      id: renderId,\n      value,\n      container,\n      options,\n      part,\n    });\n  return part as RootPart;\n};\n\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n  render.setSanitizer = setSanitizer;\n  render.createSanitizer = createSanitizer;\n  if (DEV_MODE) {\n    render._testOnlyClearSanitizerFactoryDoNotCallOrElse =\n      _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n  }\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * The main LitElement module, which defines the {@linkcode LitElement} base\n * class and related APIs.\n *\n * LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n * Import {@linkcode LitElement} and {@linkcode html} from this module to\n * create a component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends {@linkcode ReactiveElement} and adds lit-html\n * templating. The `ReactiveElement` class is provided for users that want to\n * build their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport {PropertyValues, ReactiveElement} from '@lit/reactive-element';\nimport {render, RenderOptions, noChange, RootPart} from 'lit-html';\nexport * from '@lit/reactive-element';\nexport * from 'lit-html';\n\nimport {LitUnstable} from 'lit-html';\nimport {ReactiveUnstable} from '@lit/reactive-element';\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Unstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | LitUnstable.DebugLog.Entry\n      | ReactiveUnstable.DebugLog.Entry;\n  }\n}\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = <P extends PropertyKey>(\n  prop: P,\n  _obj: unknown\n): P => prop;\n\nconst DEV_MODE = true;\n// Allows minifiers to rename references to globalThis\nconst global = globalThis;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  global.litIssuedWarnings ??= new Set();\n\n  /**\n   * Issue a warning if we haven't already, based either on `code` or `warning`.\n   * Warnings are disabled automatically only by `warning`; disabling via `code`\n   * can be done by users.\n   */\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (\n      !global.litIssuedWarnings!.has(warning) &&\n      !global.litIssuedWarnings!.has(code)\n    ) {\n      console.warn(warning);\n      global.litIssuedWarnings!.add(warning);\n    }\n  };\n}\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the {@linkcode LitElement.properties properties} property or the\n * {@linkcode property} decorator.\n */\nexport class LitElement extends ReactiveElement {\n  // This property needs to remain unminified.\n  static ['_$litElement$'] = true;\n\n  /**\n   * @category rendering\n   */\n  readonly renderOptions: RenderOptions = {host: this};\n\n  private __childPart: RootPart | undefined = undefined;\n\n  /**\n   * @category rendering\n   */\n  protected override createRenderRoot() {\n    const renderRoot = super.createRenderRoot();\n    // When adoptedStyleSheets are shimmed, they are inserted into the\n    // shadowRoot by createRenderRoot. Adjust the renderBefore node so that\n    // any styles in Lit content render before adoptedStyleSheets. This is\n    // important so that adoptedStyleSheets have precedence over styles in\n    // the shadowRoot.\n    this.renderOptions.renderBefore ??= renderRoot!.firstChild as ChildNode;\n    return renderRoot;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected override update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const value = this.render();\n    if (!this.hasUpdated) {\n      this.renderOptions.isConnected = this.isConnected;\n    }\n    super.update(changedProperties);\n    this.__childPart = render(value, this.renderRoot, this.renderOptions);\n  }\n\n  /**\n   * Invoked when the component is added to the document's DOM.\n   *\n   * In `connectedCallback()` you should setup tasks that should only occur when\n   * the element is connected to the document. The most common of these is\n   * adding event listeners to nodes external to the element, like a keydown\n   * event handler added to the window.\n   *\n   * ```ts\n   * connectedCallback() {\n   *   super.connectedCallback();\n   *   addEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * Typically, anything done in `connectedCallback()` should be undone when the\n   * element is disconnected, in `disconnectedCallback()`.\n   *\n   * @category lifecycle\n   */\n  override connectedCallback() {\n    super.connectedCallback();\n    this.__childPart?.setConnected(true);\n  }\n\n  /**\n   * Invoked when the component is removed from the document's DOM.\n   *\n   * This callback is the main signal to the element that it may no longer be\n   * used. `disconnectedCallback()` should ensure that nothing is holding a\n   * reference to the element (such as event listeners added to nodes external\n   * to the element), so that it is free to be garbage collected.\n   *\n   * ```ts\n   * disconnectedCallback() {\n   *   super.disconnectedCallback();\n   *   window.removeEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * An element may be re-connected after being disconnected.\n   *\n   * @category lifecycle\n   */\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__childPart?.setConnected(false);\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `ChildPart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   * @category rendering\n   */\n  protected render(): unknown {\n    return noChange;\n  }\n}\n\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See @lit/reactive-element for more information.\n */\n(LitElement as unknown as Record<string, unknown>)[\n  JSCompiler_renameProperty('finalized', LitElement)\n] = true;\n\n// Install hydration if available\nglobal.litElementHydrateSupport?.({LitElement});\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? global.litElementPolyfillSupportDevMode\n  : global.litElementPolyfillSupport;\npolyfillSupport?.({LitElement});\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LE object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-html, since this module re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LE = {\n  _$attributeToProperty: (\n    el: LitElement,\n    name: string,\n    value: string | null\n  ) => {\n    // eslint-disable-next-line\n    (el as any)._$attributeToProperty(name, value);\n  },\n  // eslint-disable-next-line\n  _$changedProperties: (el: LitElement) => (el as any)._$changedProperties,\n};\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n(global.litElementVersions ??= []).push('4.2.1');\nif (DEV_MODE && global.litElementVersions.length > 1) {\n  queueMicrotask(() => {\n    issueWarning!(\n      'multiple-versions',\n      `Multiple versions of Lit loaded. Loading multiple versions ` +\n        `is not recommended.`\n    );\n  });\n}\n", "/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * @fileoverview\n *\n * This file exports a boolean const whose value will depend on what environment\n * the module is being imported from.\n */\n\nconst NODE_MODE = false;\n\n/**\n * A boolean that will be `true` in server environments like Node, and `false`\n * in browser environments. Note that your server environment or toolchain must\n * support the `\"node\"` export condition for this to be `true`.\n *\n * This can be used when authoring components to change behavior based on\n * whether or not the component is executing in an SSR context.\n */\nexport const isServer = NODE_MODE;\n", "export*from\"lit-html/directives/style-map.js\";\n//# sourceMappingURL=style-map.js.map\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {AttributePart, noChange} from '../lit-html.js';\nimport {\n  directive,\n  Directive,\n  DirectiveParameters,\n  PartInfo,\n  PartType,\n} from '../directive.js';\n\n/**\n * A key-value set of CSS properties and values.\n *\n * The key should be either a valid CSS property name string, like\n * `'background-color'`, or a valid JavaScript camel case property name\n * for CSSStyleDeclaration like `backgroundColor`.\n */\nexport interface StyleInfo {\n  [name: string]: string | number | undefined | null;\n}\n\nconst important = 'important';\n// The leading space is important\nconst importantFlag = ' !' + important;\n// How many characters to remove from a value, as a negative number\nconst flagTrim = 0 - importantFlag.length;\n\nclass StyleMapDirective extends Directive {\n  private _previousStyleProperties?: Set<string>;\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (\n      partInfo.type !== PartType.ATTRIBUTE ||\n      partInfo.name !== 'style' ||\n      (partInfo.strings?.length as number) > 2\n    ) {\n      throw new Error(\n        'The `styleMap` directive must be used in the `style` attribute ' +\n          'and must be the only part in the attribute.'\n      );\n    }\n  }\n\n  render(styleInfo: Readonly<StyleInfo>) {\n    return Object.keys(styleInfo).reduce((style, prop) => {\n      const value = styleInfo[prop];\n      if (value == null) {\n        return style;\n      }\n      // Convert property names from camel-case to dash-case, i.e.:\n      //  `backgroundColor` -> `background-color`\n      // Vendor-prefixed names need an extra `-` appended to front:\n      //  `webkitAppearance` -> `-webkit-appearance`\n      // Exception is any property name containing a dash, including\n      // custom properties; we assume these are already dash-cased i.e.:\n      //  `--my-button-color` --> `--my-button-color`\n      prop = prop.includes('-')\n        ? prop\n        : prop\n            .replace(/(?:^(webkit|moz|ms|o)|)(?=[A-Z])/g, '-$&')\n            .toLowerCase();\n      return style + `${prop}:${value};`;\n    }, '');\n  }\n\n  override update(part: AttributePart, [styleInfo]: DirectiveParameters<this>) {\n    const {style} = part.element as HTMLElement;\n\n    if (this._previousStyleProperties === undefined) {\n      this._previousStyleProperties = new Set(Object.keys(styleInfo));\n      return this.render(styleInfo);\n    }\n\n    // Remove old properties that no longer exist in styleInfo\n    for (const name of this._previousStyleProperties) {\n      // If the name isn't in styleInfo or it's null/undefined\n      if (styleInfo[name] == null) {\n        this._previousStyleProperties!.delete(name);\n        if (name.includes('-')) {\n          style.removeProperty(name);\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (style as any)[name] = null;\n        }\n      }\n    }\n\n    // Add or update properties\n    for (const name in styleInfo) {\n      const value = styleInfo[name];\n      if (value != null) {\n        this._previousStyleProperties.add(name);\n        const isImportant =\n          typeof value === 'string' && value.endsWith(importantFlag);\n        if (name.includes('-') || isImportant) {\n          style.setProperty(\n            name,\n            isImportant\n              ? (value as string).slice(0, flagTrim)\n              : (value as string),\n            isImportant ? important : ''\n          );\n        } else {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          (style as any)[name] = value;\n        }\n      }\n    }\n    return noChange;\n  }\n}\n\n/**\n * A directive that applies CSS properties to an element.\n *\n * `styleMap` can only be used in the `style` attribute and must be the only\n * expression in the attribute. It takes the property names in the\n * {@link StyleInfo styleInfo} object and adds the properties to the inline\n * style of the element.\n *\n * Property names with dashes (`-`) are assumed to be valid CSS\n * property names and set on the element's style object using `setProperty()`.\n * Names without dashes are assumed to be camelCased JavaScript property names\n * and set on the element's style object using property assignment, allowing the\n * style object to translate JavaScript-style names to CSS property names.\n *\n * For example `styleMap({backgroundColor: 'red', 'border-top': '5px', '--size':\n * '0'})` sets the `background-color`, `border-top` and `--size` properties.\n *\n * @param styleInfo\n * @see {@link https://lit.dev/docs/templates/directives/#stylemap styleMap code samples on Lit.dev}\n */\nexport const styleMap = directive(StyleMapDirective);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {StyleMapDirective};\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Disconnectable, Part} from './lit-html.js';\n\nexport {\n  AttributePart,\n  BooleanAttributePart,\n  ChildPart,\n  ElementPart,\n  EventPart,\n  Part,\n  PropertyPart,\n} from './lit-html.js';\n\nexport interface DirectiveClass {\n  new (part: PartInfo): Directive;\n}\n\n/**\n * This utility type extracts the signature of a directive class's render()\n * method so we can use it for the type of the generated directive function.\n */\nexport type DirectiveParameters<C extends Directive> = Parameters<C['render']>;\n\n/**\n * A generated directive function doesn't evaluate the directive, but just\n * returns a DirectiveResult object that captures the arguments.\n */\nexport interface DirectiveResult<C extends DirectiveClass = DirectiveClass> {\n  /**\n   * This property needs to remain unminified.\n   * @internal\n   */\n  ['_$litDirective$']: C;\n  /** @internal */\n  values: DirectiveParameters<InstanceType<C>>;\n}\n\nexport const PartType = {\n  ATTRIBUTE: 1,\n  CHILD: 2,\n  PROPERTY: 3,\n  BOOLEAN_ATTRIBUTE: 4,\n  EVENT: 5,\n  ELEMENT: 6,\n} as const;\n\nexport type PartType = (typeof PartType)[keyof typeof PartType];\n\nexport interface ChildPartInfo {\n  readonly type: typeof PartType.CHILD;\n}\n\nexport interface AttributePartInfo {\n  readonly type:\n    | typeof PartType.ATTRIBUTE\n    | typeof PartType.PROPERTY\n    | typeof PartType.BOOLEAN_ATTRIBUTE\n    | typeof PartType.EVENT;\n  readonly strings?: ReadonlyArray<string>;\n  readonly name: string;\n  readonly tagName: string;\n}\n\nexport interface ElementPartInfo {\n  readonly type: typeof PartType.ELEMENT;\n}\n\n/**\n * Information about the part a directive is bound to.\n *\n * This is useful for checking that a directive is attached to a valid part,\n * such as with directive that can only be used on attribute bindings.\n */\nexport type PartInfo = ChildPartInfo | AttributePartInfo | ElementPartInfo;\n\n/**\n * Creates a user-facing directive function from a Directive class. This\n * function has the same parameters as the directive's render() method.\n */\nexport const directive =\n  <C extends DirectiveClass>(c: C) =>\n  (...values: DirectiveParameters<InstanceType<C>>): DirectiveResult<C> => ({\n    // This property needs to remain unminified.\n    ['_$litDirective$']: c,\n    values,\n  });\n\n/**\n * Base class for creating custom directives. Users should extend this class,\n * implement `render` and/or `update`, and then pass their subclass to\n * `directive`.\n */\nexport abstract class Directive implements Disconnectable {\n  //@internal\n  __part!: Part;\n  //@internal\n  __attributeIndex: number | undefined;\n  //@internal\n  __directive?: Directive;\n\n  //@internal\n  _$parent!: Disconnectable;\n\n  // These will only exist on the AsyncDirective subclass\n  //@internal\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // This property needs to remain unminified.\n  //@internal\n  ['_$notifyDirectiveConnectionChanged']?(isConnected: boolean): void;\n\n  constructor(_partInfo: PartInfo) {}\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  /** @internal */\n  _$initialize(\n    part: Part,\n    parent: Disconnectable,\n    attributeIndex: number | undefined\n  ) {\n    this.__part = part;\n    this._$parent = parent;\n    this.__attributeIndex = attributeIndex;\n  }\n  /** @internal */\n  _$resolve(part: Part, props: Array<unknown>): unknown {\n    return this.update(part, props);\n  }\n\n  abstract render(...props: Array<unknown>): unknown;\n\n  update(_part: Part, props: Array<unknown>): unknown {\n    return this.render(...props);\n  }\n}\n", "export*from\"@lit/reactive-element/decorators/custom-element.js\";export*from\"@lit/reactive-element/decorators/property.js\";export*from\"@lit/reactive-element/decorators/state.js\";export*from\"@lit/reactive-element/decorators/event-options.js\";export*from\"@lit/reactive-element/decorators/query.js\";export*from\"@lit/reactive-element/decorators/query-all.js\";export*from\"@lit/reactive-element/decorators/query-async.js\";export*from\"@lit/reactive-element/decorators/query-assigned-elements.js\";export*from\"@lit/reactive-element/decorators/query-assigned-nodes.js\";\n//# sourceMappingURL=decorators.js.map\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport type {Constructor} from './base.js';\n\n/**\n * Allow for custom element classes with private constructors\n */\ntype CustomElementClass = Omit<typeof HTMLElement, 'new'>;\n\nexport type CustomElementDecorator = {\n  // legacy\n  (cls: CustomElementClass): void;\n\n  // standard\n  (\n    target: CustomElementClass,\n    context: ClassDecoratorContext<Constructor<HTMLElement>>\n  ): void;\n};\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```js\n * @customElement('my-element')\n * class MyElement extends LitElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The tag name of the custom element to define.\n */\nexport const customElement =\n  (tagName: string): CustomElementDecorator =>\n  (\n    classOrTarget: CustomElementClass | Constructor<HTMLElement>,\n    context?: ClassDecoratorContext<Constructor<HTMLElement>>\n  ) => {\n    if (context !== undefined) {\n      context.addInitializer(() => {\n        customElements.define(\n          tagName,\n          classOrTarget as CustomElementConstructor\n        );\n      });\n    } else {\n      customElements.define(tagName, classOrTarget as CustomElementConstructor);\n    }\n  };\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {\n  type PropertyDeclaration,\n  type ReactiveElement,\n  defaultConverter,\n  notEqual,\n} from '../reactive-element.js';\nimport type {Interface} from './base.js';\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  globalThis.litIssuedWarnings ??= new Set();\n\n  /**\n   * Issue a warning if we haven't already, based either on `code` or `warning`.\n   * Warnings are disabled automatically only by `warning`; disabling via `code`\n   * can be done by users.\n   */\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (\n      !globalThis.litIssuedWarnings!.has(warning) &&\n      !globalThis.litIssuedWarnings!.has(code)\n    ) {\n      console.warn(warning);\n      globalThis.litIssuedWarnings!.add(warning);\n    }\n  };\n}\n\n// Overloads for property decorator so that TypeScript can infer the correct\n// return type when a decorator is used as an accessor decorator or a setter\n// decorator.\nexport type PropertyDecorator = {\n  // accessor decorator signature\n  <C extends Interface<ReactiveElement>, V>(\n    target: ClassAccessorDecoratorTarget<C, V>,\n    context: ClassAccessorDecoratorContext<C, V>\n  ): ClassAccessorDecoratorResult<C, V>;\n\n  // setter decorator signature\n  <C extends Interface<ReactiveElement>, V>(\n    target: (value: V) => void,\n    context: ClassSetterDecoratorContext<C, V>\n  ): (this: C, value: V) => void;\n\n  // legacy decorator signature\n  (\n    protoOrDescriptor: Object,\n    name: PropertyKey,\n    descriptor?: PropertyDescriptor\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): any;\n};\n\nconst legacyProperty = (\n  options: PropertyDeclaration | undefined,\n  proto: Object,\n  name: PropertyKey\n) => {\n  const hasOwnProperty = proto.hasOwnProperty(name);\n  (proto.constructor as typeof ReactiveElement).createProperty(name, options);\n  // For accessors (which have a descriptor on the prototype) we need to\n  // return a descriptor, otherwise TypeScript overwrites the descriptor we\n  // define in createProperty() with the original descriptor. We don't do this\n  // for fields, which don't have a descriptor, because this could overwrite\n  // descriptor defined by other decorators.\n  return hasOwnProperty\n    ? Object.getOwnPropertyDescriptor(proto, name)\n    : undefined;\n};\n\n// This is duplicated from a similar variable in reactive-element.ts, but\n// actually makes sense to have this default defined with the decorator, so\n// that different decorators could have different defaults.\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual,\n};\n\n// Temporary type, until google3 is on TypeScript 5.2\ntype StandardPropertyContext<C, V> = (\n  | ClassAccessorDecoratorContext<C, V>\n  | ClassSetterDecoratorContext<C, V>\n) & {metadata: object};\n\n/**\n * Wraps a class accessor or setter so that `requestUpdate()` is called with the\n * property name and old value when the accessor is set.\n */\nexport const standardProperty = <C extends Interface<ReactiveElement>, V>(\n  options: PropertyDeclaration = defaultPropertyDeclaration,\n  target: ClassAccessorDecoratorTarget<C, V> | ((value: V) => void),\n  context: StandardPropertyContext<C, V>\n): ClassAccessorDecoratorResult<C, V> | ((this: C, value: V) => void) => {\n  const {kind, metadata} = context;\n\n  if (DEV_MODE && metadata == null) {\n    issueWarning(\n      'missing-class-metadata',\n      `The class ${target} is missing decorator metadata. This ` +\n        `could mean that you're using a compiler that supports decorators ` +\n        `but doesn't support decorator metadata, such as TypeScript 5.1. ` +\n        `Please update your compiler.`\n    );\n  }\n\n  // Store the property options\n  let properties = globalThis.litPropertyMetadata.get(metadata);\n  if (properties === undefined) {\n    globalThis.litPropertyMetadata.set(metadata, (properties = new Map()));\n  }\n  if (kind === 'setter') {\n    options = Object.create(options);\n    options.wrapped = true;\n  }\n  properties.set(context.name, options);\n\n  if (kind === 'accessor') {\n    // Standard decorators cannot dynamically modify the class, so we can't\n    // replace a field with accessors. The user must use the new `accessor`\n    // keyword instead.\n    const {name} = context;\n    return {\n      set(this: ReactiveElement, v: V) {\n        const oldValue = (\n          target as ClassAccessorDecoratorTarget<C, V>\n        ).get.call(this as unknown as C);\n        (target as ClassAccessorDecoratorTarget<C, V>).set.call(\n          this as unknown as C,\n          v\n        );\n        this.requestUpdate(name, oldValue, options);\n      },\n      init(this: ReactiveElement, v: V): V {\n        if (v !== undefined) {\n          this._$changeProperty(name, undefined, options, v);\n        }\n        return v;\n      },\n    } as unknown as ClassAccessorDecoratorResult<C, V>;\n  } else if (kind === 'setter') {\n    const {name} = context;\n    return function (this: ReactiveElement, value: V) {\n      const oldValue = this[name as keyof ReactiveElement];\n      (target as (value: V) => void).call(this, value);\n      this.requestUpdate(name, oldValue, options);\n    } as unknown as (this: C, value: V) => void;\n  }\n  throw new Error(`Unsupported decorator location: ${kind}`);\n};\n\n/**\n * A class field or accessor decorator which creates a reactive property that\n * reflects a corresponding attribute value. When a decorated property is set\n * the element will update and render. A {@linkcode PropertyDeclaration} may\n * optionally be supplied to configure property features.\n *\n * This decorator should only be used for public fields. As public fields,\n * properties should be considered as primarily settable by element users,\n * either via attribute or the property itself.\n *\n * Generally, properties that are changed by the element should be private or\n * protected fields and should use the {@linkcode state} decorator.\n *\n * However, sometimes element code does need to set a public property. This\n * should typically only be done in response to user interaction, and an event\n * should be fired informing the user; for example, a checkbox sets its\n * `checked` property when clicked and fires a `changed` event. Mutating public\n * properties should typically not be done for non-primitive (object or array)\n * properties. In other cases when an element needs to manage state, a private\n * property decorated via the {@linkcode state} decorator should be used. When\n * needed, state properties can be initialized via public properties to\n * facilitate complex interactions.\n *\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration): PropertyDecorator {\n  return <C extends Interface<ReactiveElement>, V>(\n    protoOrTarget:\n      | object\n      | ClassAccessorDecoratorTarget<C, V>\n      | ((value: V) => void),\n    nameOrContext:\n      | PropertyKey\n      | ClassAccessorDecoratorContext<C, V>\n      | ClassSetterDecoratorContext<C, V>\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): any => {\n    return (\n      typeof nameOrContext === 'object'\n        ? standardProperty<C, V>(\n            options,\n            protoOrTarget as\n              | ClassAccessorDecoratorTarget<C, V>\n              | ((value: V) => void),\n            nameOrContext as StandardPropertyContext<C, V>\n          )\n        : legacyProperty(\n            options,\n            protoOrTarget as Object,\n            nameOrContext as PropertyKey\n          )\n    ) as PropertyDecorator;\n  };\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {property} from './property.js';\n\nexport interface StateDeclaration<Type = unknown> {\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n}\n\n/**\n * @deprecated use StateDeclaration\n */\nexport type InternalPropertyDeclaration<Type = unknown> =\n  StateDeclaration<Type>;\n\n/**\n * Declares a private or protected reactive property that still triggers\n * updates to the element when it changes. It does not reflect from the\n * corresponding attribute.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function state(options?: StateDeclaration) {\n  return property({\n    ...options,\n    // Add both `state` and `attribute` because we found a third party\n    // controller that is keying off of PropertyOptions.state to determine\n    // whether a field is a private internal property or not.\n    state: true,\n    attribute: false,\n  });\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport type {ReactiveElement} from '../reactive-element.js';\nimport type {Interface} from './base.js';\n\nexport type EventOptionsDecorator = {\n  // legacy\n  (\n    proto: Interface<ReactiveElement>,\n    name: PropertyKey\n    // Note TypeScript requires the return type to be `void|any`\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): void | any;\n\n  // standard\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  <C, V extends (this: C, ...args: any) => any>(\n    value: V,\n    _context: ClassMethodDecoratorContext<C, V>\n  ): void;\n};\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function eventOptions(\n  options: AddEventListenerOptions\n): EventOptionsDecorator {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (<C, V extends (this: C, ...args: any) => any>(\n    protoOrValue: V,\n    nameOrContext: PropertyKey | ClassMethodDecoratorContext<C, V>\n  ) => {\n    const method =\n      typeof protoOrValue === 'function'\n        ? protoOrValue\n        : protoOrValue[nameOrContext as keyof ReactiveElement];\n    Object.assign(method, options);\n  }) as EventOptionsDecorator;\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport type {ReactiveElement} from '../reactive-element.js';\nimport {desc, type Interface} from './base.js';\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  globalThis.litIssuedWarnings ??= new Set();\n\n  /**\n   * Issue a warning if we haven't already, based either on `code` or `warning`.\n   * Warnings are disabled automatically only by `warning`; disabling via `code`\n   * can be done by users.\n   */\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (\n      !globalThis.litIssuedWarnings!.has(warning) &&\n      !globalThis.litIssuedWarnings!.has(code)\n    ) {\n      console.warn(warning);\n      globalThis.litIssuedWarnings!.add(warning);\n    }\n  };\n}\n\nexport type QueryDecorator = {\n  // legacy\n  (\n    proto: Interface<ReactiveElement>,\n    name: PropertyKey,\n    descriptor?: PropertyDescriptor\n    // Note TypeScript requires the return type to be `void|any`\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): void | any;\n\n  // standard\n  <C extends Interface<ReactiveElement>, V extends Element | null>(\n    value: ClassAccessorDecoratorTarget<C, V>,\n    context: ClassAccessorDecoratorContext<C, V>\n  ): ClassAccessorDecoratorResult<C, V>;\n};\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n *     once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first: HTMLDivElement;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector: string, cache?: boolean): QueryDecorator {\n  return (<C extends Interface<ReactiveElement>, V extends Element | null>(\n    protoOrTarget: ClassAccessorDecoratorTarget<C, V>,\n    nameOrContext: PropertyKey | ClassAccessorDecoratorContext<C, V>,\n    descriptor?: PropertyDescriptor\n  ) => {\n    const doQuery = (el: Interface<ReactiveElement>): V => {\n      const result = (el.renderRoot?.querySelector(selector) ?? null) as V;\n      if (DEV_MODE && result === null && cache && !el.hasUpdated) {\n        const name =\n          typeof nameOrContext === 'object'\n            ? nameOrContext.name\n            : nameOrContext;\n        issueWarning(\n          '',\n          `@query'd field ${JSON.stringify(String(name))} with the 'cache' ` +\n            `flag set for selector '${selector}' has been accessed before ` +\n            `the first update and returned null. This is expected if the ` +\n            `renderRoot tree has not been provided beforehand (e.g. via ` +\n            `Declarative Shadow DOM). Therefore the value hasn't been cached.`\n        );\n      }\n      // TODO: if we want to allow users to assert that the query will never\n      // return null, we need a new option and to throw here if the result\n      // is null.\n      return result;\n    };\n    if (cache) {\n      // Accessors to wrap from either:\n      //   1. The decorator target, in the case of standard decorators\n      //   2. The property descriptor, in the case of experimental decorators\n      //      on auto-accessors.\n      //   3. Functions that access our own cache-key property on the instance,\n      //      in the case of experimental decorators on fields.\n      const {get, set} =\n        typeof nameOrContext === 'object'\n          ? protoOrTarget\n          : descriptor ??\n            (() => {\n              const key = DEV_MODE\n                ? Symbol(`${String(nameOrContext)} (@query() cache)`)\n                : Symbol();\n              type WithCache = ReactiveElement & {\n                [key: symbol]: Element | null;\n              };\n              return {\n                get() {\n                  return (this as WithCache)[key];\n                },\n                set(v) {\n                  (this as WithCache)[key] = v;\n                },\n              };\n            })();\n      return desc(protoOrTarget, nameOrContext, {\n        get(this: ReactiveElement): V {\n          let result: V = get!.call(this);\n          if (result === undefined) {\n            result = doQuery(this);\n            if (result !== null || this.hasUpdated) {\n              set!.call(this, result);\n            }\n          }\n          return result;\n        },\n      });\n    } else {\n      // This object works as the return type for both standard and\n      // experimental decorators.\n      return desc(protoOrTarget, nameOrContext, {\n        get(this: ReactiveElement) {\n          return doQuery(this);\n        },\n      });\n    }\n  }) as QueryDecorator;\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Generates a public interface type that removes private and protected fields.\n * This allows accepting otherwise incompatible versions of the type (e.g. from\n * multiple copies of the same package in `node_modules`).\n */\nexport type Interface<T> = {\n  [K in keyof T]: T[K];\n};\n\nexport type Constructor<T> = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  new (...args: any[]): T;\n};\n\n/**\n * Wraps up a few best practices when returning a property descriptor from a\n * decorator.\n *\n * Marks the defined property as configurable, and enumerable, and handles\n * the case where we have a busted Reflect.decorate zombiefill (e.g. in Angular\n * apps).\n *\n * @internal\n */\nexport const desc = (\n  obj: object,\n  name: PropertyKey | ClassAccessorDecoratorContext<unknown, unknown>,\n  descriptor: PropertyDescriptor\n) => {\n  // For backwards compatibility, we keep them configurable and enumerable.\n  descriptor.configurable = true;\n  descriptor.enumerable = true;\n  if (\n    // We check for Reflect.decorate each time, in case the zombiefill\n    // is applied via lazy loading some Angular code.\n    (Reflect as typeof Reflect & {decorate?: unknown}).decorate &&\n    typeof name !== 'object'\n  ) {\n    // If we're called as a legacy decorator, and Reflect.decorate is present\n    // then we have no guarantees that the returned descriptor will be\n    // defined on the class, so we must apply it directly ourselves.\n\n    Object.defineProperty(obj, name, descriptor);\n  }\n  return descriptor;\n};\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport type {ReactiveElement} from '../reactive-element.js';\nimport {desc, type Interface} from './base.js';\n\nexport type QueryAllDecorator = {\n  // legacy\n  (\n    proto: Interface<ReactiveElement>,\n    name: PropertyKey,\n    descriptor?: PropertyDescriptor\n    // Note TypeScript requires the return type to be `void|any`\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): void | any;\n\n  // standard\n  <C extends Interface<ReactiveElement>, V extends NodeList>(\n    value: ClassAccessorDecoratorTarget<C, V>,\n    context: ClassAccessorDecoratorContext<C, V>\n  ): ClassAccessorDecoratorResult<C, V>;\n};\n\n// Shared fragment used to generate empty NodeLists when a render root is\n// undefined\nlet fragment: DocumentFragment;\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See:\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n *\n * ```ts\n * class MyElement {\n *   @queryAll('div')\n *   divs: NodeListOf<HTMLDivElement>;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAll(selector: string): QueryAllDecorator {\n  return ((\n    obj: object,\n    name: PropertyKey | ClassAccessorDecoratorContext<unknown, unknown>\n  ) => {\n    return desc(obj, name, {\n      get(this: ReactiveElement) {\n        const container =\n          this.renderRoot ?? (fragment ??= document.createDocumentFragment());\n        return container.querySelectorAll(selector);\n      },\n    });\n  }) as QueryAllDecorator;\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport type {ReactiveElement} from '../reactive-element.js';\nimport {desc, type Interface} from './base.js';\n\nexport type QueryAsyncDecorator = {\n  // legacy\n  (\n    proto: Interface<ReactiveElement>,\n    name: PropertyKey,\n    descriptor?: PropertyDescriptor\n    // Note TypeScript requires the return type to be `void|any`\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): void | any;\n\n  // standard\n  <C extends Interface<ReactiveElement>, V extends Promise<Element | null>>(\n    value: ClassAccessorDecoratorTarget<C, V>,\n    context: ClassAccessorDecoratorContext<C, V>\n  ): ClassAccessorDecoratorResult<C, V>;\n};\n\n// Note, in the future, we may extend this decorator to support the use case\n// where the queried element may need to do work to become ready to interact\n// with (e.g. load some implementation code). If so, we might elect to\n// add a second argument defining a function that can be run to make the\n// queried element loaded/updated/ready.\n/**\n * A property decorator that converts a class property into a getter that\n * returns a promise that resolves to the result of a querySelector on the\n * element's renderRoot done after the element's `updateComplete` promise\n * resolves. When the queried property may change with element state, this\n * decorator can be used instead of requiring users to await the\n * `updateComplete` before accessing the property.\n *\n * @param selector A DOMString containing one or more selectors to match.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * ```ts\n * class MyElement {\n *   @queryAsync('#first')\n *   first: Promise<HTMLDivElement>;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n *\n * // external usage\n * async doSomethingWithFirst() {\n *  (await aMyElement.first).doSomething();\n * }\n * ```\n * @category Decorator\n */\nexport function queryAsync(selector: string) {\n  return ((\n    obj: object,\n    name: PropertyKey | ClassAccessorDecoratorContext<unknown, unknown>\n  ) => {\n    return desc(obj, name, {\n      async get(this: ReactiveElement) {\n        await this.updateComplete;\n        return this.renderRoot?.querySelector(selector) ?? null;\n      },\n    });\n  }) as QueryAsyncDecorator;\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport type {ReactiveElement} from '../reactive-element.js';\nimport type {QueryAssignedNodesOptions} from './query-assigned-nodes.js';\nimport {desc, type Interface} from './base.js';\n\nexport type QueryAssignedElementsDecorator = {\n  // legacy\n  (\n    proto: Interface<ReactiveElement>,\n    name: PropertyKey,\n    descriptor?: PropertyDescriptor\n    // Note TypeScript requires the return type to be `void|any`\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): void | any;\n\n  // standard\n  <C extends Interface<ReactiveElement>, V extends Array<Element>>(\n    value: ClassAccessorDecoratorTarget<C, V>,\n    context: ClassAccessorDecoratorContext<C, V>\n  ): ClassAccessorDecoratorResult<C, V>;\n};\n\n/**\n * Options for the {@linkcode queryAssignedElements} decorator. Extends the\n * options that can be passed into\n * [HTMLSlotElement.assignedElements](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements).\n */\nexport interface QueryAssignedElementsOptions\n  extends QueryAssignedNodesOptions {\n  /**\n   * CSS selector used to filter the elements returned. For example, a selector\n   * of `\".item\"` will only include elements with the `item` class.\n   */\n  selector?: string;\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedElements` of the given `slot`. Provides a declarative\n * way to use\n * [`HTMLSlotElement.assignedElements`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements).\n *\n * Can be passed an optional {@linkcode QueryAssignedElementsOptions} object.\n *\n * Example usage:\n * ```ts\n * class MyElement {\n *   @queryAssignedElements({ slot: 'list' })\n *   listItems!: Array<HTMLElement>;\n *   @queryAssignedElements()\n *   unnamedSlotEls!: Array<HTMLElement>;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *       <slot></slot>\n *     `;\n *   }\n * }\n * ```\n *\n * Note, the type of this property should be annotated as `Array<HTMLElement>`.\n *\n * @category Decorator\n */\nexport function queryAssignedElements(\n  options?: QueryAssignedElementsOptions\n): QueryAssignedElementsDecorator {\n  return (<V extends Array<Element>>(\n    obj: object,\n    name: PropertyKey | ClassAccessorDecoratorContext<unknown, unknown>\n  ) => {\n    const {slot, selector} = options ?? {};\n    const slotSelector = `slot${slot ? `[name=${slot}]` : ':not([name])'}`;\n    return desc(obj, name, {\n      get(this: ReactiveElement): V {\n        const slotEl =\n          this.renderRoot?.querySelector<HTMLSlotElement>(slotSelector);\n        const elements = slotEl?.assignedElements(options) ?? [];\n        return (\n          selector === undefined\n            ? elements\n            : elements.filter((node) => node.matches(selector))\n        ) as V;\n      },\n    });\n  }) as QueryAssignedElementsDecorator;\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport type {ReactiveElement} from '../reactive-element.js';\nimport {desc, type Interface} from './base.js';\n\n/**\n * Options for the {@linkcode queryAssignedNodes} decorator. Extends the options\n * that can be passed into [HTMLSlotElement.assignedNodes](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedNodes).\n */\nexport interface QueryAssignedNodesOptions extends AssignedNodesOptions {\n  /**\n   * Name of the slot to query. Leave empty for the default slot.\n   */\n  slot?: string;\n}\n\nexport type QueryAssignedNodesDecorator = {\n  // legacy\n  (\n    proto: Interface<ReactiveElement>,\n    name: PropertyKey,\n    descriptor?: PropertyDescriptor\n    // Note TypeScript requires the return type to be `void|any`\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ): void | any;\n\n  // standard\n  <C extends Interface<ReactiveElement>, V extends Array<Node>>(\n    value: ClassAccessorDecoratorTarget<C, V>,\n    context: ClassAccessorDecoratorContext<C, V>\n  ): ClassAccessorDecoratorResult<C, V>;\n};\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given `slot`.\n *\n * Can be passed an optional {@linkcode QueryAssignedNodesOptions} object.\n *\n * Example usage:\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes({slot: 'list', flatten: true})\n *   listItems!: Array<Node>;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n *\n * Note the type of this property should be annotated as `Array<Node>`. Use the\n * queryAssignedElements decorator to list only elements, and optionally filter\n * the element list using a CSS selector.\n *\n * @category Decorator\n */\nexport function queryAssignedNodes(\n  options?: QueryAssignedNodesOptions\n): QueryAssignedNodesDecorator {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (<V extends Array<Node>>(\n    obj: object,\n    name: PropertyKey | ClassAccessorDecoratorContext<unknown, unknown>\n  ) => {\n    const {slot} = options ?? {};\n    const slotSelector = `slot${slot ? `[name=${slot}]` : ':not([name])'}`;\n    return desc(obj, name, {\n      get(this: ReactiveElement): V {\n        const slotEl =\n          this.renderRoot?.querySelector<HTMLSlotElement>(slotSelector);\n        return (slotEl?.assignedNodes(options) ?? []) as unknown as V;\n      },\n    });\n  }) as QueryAssignedNodesDecorator;\n}\n", "import { ReactiveController, ReactiveControllerHost } from 'lit';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nexport class ReactiveState<T> implements ReactiveController {\n  sub: Subscription | null = null;\n  value$: BehaviorSubject<T | undefined> = new BehaviorSubject<T | undefined>(undefined);\n\n  constructor(private host: ReactiveControllerHost, private source: Observable<T>, public value?: T) {\n    this.host.addController(this);\n  }\n\n  hostConnected() {\n    this.sub = this.source.subscribe(value => {\n      this.value = value;\n      this.value$.next(value);\n      this.host.requestUpdate();\n    });\n  }\n\n  hostDisconnected() {\n    this.sub?.unsubscribe();\n  }\n}\n", "import { css } from 'lit';\n\nexport const modalDialogStyles = css`\n  .dialog-modal {\n    max-height: 90vh;\n    position: fixed;\n    z-index: 990;\n    font-family: 'Open Sans', arial, sans-serif;\n    margin: 0 auto;\n    padding: 0;\n    width: 100%;\n    border-radius: 1rem 1rem 0 0;\n    border-width: 0;\n    box-shadow: 0 0.125rem 0.75rem rgba(0, 0, 0, 0.25);\n    bottom: 0;\n    overflow-x: hidden;\n    overflow-y: scroll;\n  }\n\n  @media screen and (min-width: 768px) {\n    .dialog-modal {\n      z-index: 990;\n      bottom: auto;\n      top: 5rem;\n      max-width: 45rem;\n      border-radius: 1rem;\n    }\n  }\n`;\n\nexport const modalDialogBodyStyles = css`\n  .dialog-modal-body {\n    display: flex;\n    flex-direction: column-reverse;\n  }\n\n  .dialog-modal-body__help,\n  .dialog-modal-body__wallets {\n    width: 100%;\n    flex-basis: 100%;\n  }\n\n  .dialog-modal-body__help {\n    padding: 1.5rem;\n  }\n\n  .dialog-modal-body__wallets {\n    padding: 1.5rem;\n  }\n\n  .dialog-text-solid {\n    font-size: 1rem;\n    line-height: 1.25rem;\n  }\n\n  .dialog-text {\n    font-size: 0.875rem;\n    line-height: 1.125rem;\n  }\n\n  @media (prefers-color-scheme: light) {\n    .dialog-modal-body__help {\n      background-color: var(--modal-help-bg-color, #f8f8f8);\n      border-top: 1px solid var(--modal-divider-color, rgba(0, 0, 0, 0.15));\n    }\n\n    @media screen and (min-width: 768px) {\n      .dialog-modal-body__help {\n        border-top: none;\n        border-right: 1px solid var(--modal-divider-color, rgba(0, 0, 0, 0.15));\n      }\n    }\n\n    .dialog-modal-body__wallets,\n    .dialog-modal-body {\n      background-color: var(--modal-bg-color, #fcfcfc);\n    }\n\n    .dialog-text-solid {\n      color: var(--modal-solid-text-color, #000000);\n    }\n\n    .dialog-text {\n      color: var(--modal-text-color, #181818);\n    }\n  }\n\n  @media (prefers-color-scheme: dark) {\n    .dialog-modal-body__help {\n      background-color: var(--modal-help-bg-color, #1c1c1c);\n      border-top: 1px solid var(--modal-divider-color, rgba(255, 255, 255, 0.15));\n    }\n\n    @media screen and (min-width: 768px) {\n      .dialog-modal-body__help {\n        border-top: none;\n        border-right: 1px solid var(--modal-divider-color, rgba(255, 255, 255, 0.15));\n      }\n    }\n\n    .dialog-modal-body__wallets,\n    .dialog-modal-body {\n      background-color: var(--modal-bg-color, #161616);\n    }\n\n    .dialog-text-solid {\n      color: var(--modal-solid-text-color, #ededed);\n    }\n\n    .dialog-text {\n      color: var(--modal-text-color, #a0a0a0);\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    .dialog-modal-body {\n      flex-direction: row;\n    }\n\n    .dialog-modal-body__help,\n    .dialog-modal-body__wallets {\n      padding: 2rem;\n    }\n  }\n`;\n\nexport const modalHelpSection = css`\n  .help-container {\n    width: 100%;\n  }\n\n  .help-header {\n    display: none;\n    margin: 0 0 2rem 0;\n  }\n\n  .help-header__modal-title {\n    font-size: 1.25rem;\n    padding: 0;\n    margin: 0;\n  }\n\n  .help__title,\n  .help__text {\n    text-align: center;\n  }\n\n  .help__title {\n    font-weight: 400;\n    margin-top: 0;\n    margin-bottom: 0.5rem;\n  }\n\n  .help__text {\n    max-width: 21rem;\n    margin-left: auto;\n    margin-right: auto;\n    font-weight: 300;\n    margin-top: 0;\n  }\n\n  .help__whats_stellar {\n    display: none;\n  }\n\n  @media screen and (min-width: 768px) {\n    .help-header {\n      display: block;\n    }\n\n    .help__title,\n    .help__text {\n      text-align: left;\n      margin-left: 0;\n    }\n\n    .help__whats_a_wallet {\n      margin-bottom: 2rem;\n    }\n\n    .help__whats_stellar {\n      display: block;\n    }\n  }\n`;\n\nexport const modalWalletsSection = css`\n  .wallets-container {\n    width: 100%;\n    height: 100%;\n    min-height: fit-content;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .wallets-header {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 1.5rem;\n  }\n\n  .wallets-header__modal-title {\n    font-size: 1.25rem;\n    padding: 0;\n    margin: 0;\n  }\n\n  .wallets-header__button {\n    background: none;\n    border: none;\n    cursor: pointer;\n  }\n\n  @media (prefers-color-scheme: light) {\n    .wallets-header__button svg {\n      fill: var(--modal-header-button-color, #8f8f8f);\n    }\n  }\n\n  @media (prefers-color-scheme: dark) {\n    .wallets-header__button svg {\n      fill: var(--modal-header-button-color, #707070);\n    }\n  }\n\n  .wallets-body {\n    margin: 0;\n    width: 100%;\n    list-style: none;\n    padding: 0 !important;\n  }\n\n  .wallets-body__item {\n    display: flex;\n    align-items: center;\n    font-weight: 600;\n    margin-bottom: 2rem;\n    cursor: pointer;\n  }\n\n  .wallets-body__item img {\n    margin-right: 1rem;\n    width: 2rem;\n    border-radius: 100%;\n    overflow: hidden;\n  }\n\n  .wallets-body__item.not-available {\n    cursor: alias;\n  }\n\n  .wallets-body__item .not-available {\n    margin-left: auto;\n    font-size: 10px;\n    padding: 0.25rem 0.5rem;\n    border-radius: 1rem;\n  }\n\n  @media (prefers-color-scheme: light) {\n    .wallets-body__item .not-available {\n      border: solid var(--modal-not-available-border-color, #e2e2e2) 1px;\n      background-color: var(--modal-not-available-bg-color, #f3f3f3);\n      color: var(--modal-not-available-text-color, #6f6f6f);\n    }\n  }\n\n  @media (prefers-color-scheme: dark) {\n    .wallets-body__item .not-available {\n      border: solid var(--modal-not-available-border-color, #343434) 1px;\n      background-color: var(--modal-not-available-bg-color, #232323);\n      color: var(--modal-not-available-text-color, #a0a0a0);\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n  }\n`;\n\nexport const backdropStyles = css`\n  .dialog-modal[open] + .backdrop {\n    background: rgba(0, 0, 0, 0.5);\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const modalAnimations = css`\n  .dialog-modal[open] {\n    -webkit-animation: showModal 0.3s ease normal;\n  }\n  @-webkit-keyframes showModal {\n    from {\n      transform: translateY(25%);\n      opacity: 0;\n    }\n    to {\n      transform: translateY(0%);\n      opacity: 1;\n    }\n  }\n\n  .dialog-modal.closing {\n    -webkit-animation: hideModal 0.3s ease normal !important;\n  }\n  @-webkit-keyframes hideModal {\n    from {\n      transform: translateY(0%);\n      opacity: 1;\n    }\n    to {\n      transform: translateY(25%);\n      opacity: 0;\n    }\n  }\n\n  .backdrop.closing {\n    -webkit-animation: hideBackdrop 0.3s ease normal !important;\n  }\n  @-webkit-keyframes hideBackdrop {\n    from {\n      opacity: 1;\n    }\n    to {\n      opacity: 0;\n    }\n  }\n`;\n", "import { LitElement, html, css } from 'lit';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { ReactiveState } from '../../state/reactive-state';\nimport { allowedWallets$, modalTheme$ } from '../../state/store';\n\nimport { ISupportedWallet, IModalTheme } from '../../types';\nimport {\n  backdropStyles,\n  modalWalletsSection,\n  modalDialogBodyStyles,\n  modalDialogStyles,\n  modalHelpSection,\n  modalAnimations,\n} from './styles';\n\nexport enum ModalThemeType {\n  DARK = 'DARK',\n  LIGHT = 'LIGHT',\n}\n\nexport const ModalThemes: { [key in ModalThemeType]: IModalTheme } = {\n  DARK: {\n    bgColor: '#161616',\n    textColor: '#a0a0a0',\n    solidTextColor: '#ededed',\n    headerButtonColor: '#707070',\n    dividerColor: 'rgba(255, 255, 255, 0.15)',\n    helpBgColor: '#1c1c1c',\n    notAvailableTextColor: '#a0a0a0',\n    notAvailableBgColor: '#232323',\n    notAvailableBorderColor: '#343434',\n  },\n  LIGHT: {\n    bgColor: '#fcfcfc',\n    textColor: '#181818',\n    solidTextColor: '#000000',\n    headerButtonColor: '#8f8f8f',\n    dividerColor: 'rgba(0, 0, 0, 0.15)',\n    helpBgColor: '#f8f8f8',\n    notAvailableTextColor: '#6f6f6f',\n    notAvailableBgColor: '#f3f3f3',\n    notAvailableBorderColor: '#e2e2e2',\n  },\n};\n\n@customElement('stellar-wallets-modal')\nexport class StellarWalletsModal extends LitElement {\n  static override styles = [\n    css`\n      :host * {\n        box-sizing: border-box;\n      }\n\n      .mb-0 {\n        margin-bottom: 0 !important;\n      }\n    `,\n    modalDialogStyles,\n    modalDialogBodyStyles,\n    modalHelpSection,\n    backdropStyles,\n    modalAnimations,\n    modalWalletsSection,\n  ];\n\n  /**\n   * This value is used to tell the modal that it should not update the value\n   * `showModal` at any moment, this comes handy when the state wants to be handled by another source\n   */\n  @property({ type: Boolean, reflect: true })\n  ignoreShowStatus: boolean = false;\n\n  @property({ type: Boolean, reflect: true })\n  showModal: boolean = false;\n\n  @state()\n  closingModal: boolean = false;\n\n  @property({ type: String, reflect: true })\n  modalTitle: string = 'Connect a Wallet';\n\n  @property({ type: String, reflect: true })\n  notAvailableText: string = 'Not available';\n\n  allowedWallets: ReactiveState<ISupportedWallet[]> = new ReactiveState(this, allowedWallets$);\n\n  theme: ReactiveState<IModalTheme | undefined> = new ReactiveState(this, modalTheme$);\n\n  override connectedCallback() {\n    super.connectedCallback();\n\n    const platformWrapper: ISupportedWallet | undefined = this.getPlatformWrapper();\n    if (platformWrapper) {\n      setTimeout((): void => {\n        this.pickWalletOption(platformWrapper);\n      }, 10);\n    }\n  }\n\n  async closeModal(): Promise<void> {\n    this.closingModal = true;\n\n    await new Promise(r => setTimeout(r, 280));\n\n    if (!this.ignoreShowStatus) {\n      this.showModal = false;\n    }\n\n    this.dispatchEvent(\n      new CustomEvent('modal-closed', {\n        detail: new Error('Modal closed'),\n        bubbles: true,\n        composed: true,\n      })\n    );\n\n    this.closingModal = false;\n  }\n\n  async pickWalletOption(option: ISupportedWallet): Promise<void> {\n    if (!option.isAvailable) {\n      window.open(option.url, '_blank');\n      return;\n    }\n\n    this.closingModal = true;\n\n    await new Promise(r => setTimeout(r, 280));\n\n    try {\n      const record: string | null = window.localStorage.getItem('@StellarWalletsKit/usedWalletsIds');\n      let usedWalletsIds: Array<ISupportedWallet['id']> = record ? JSON.parse(record) : [];\n      usedWalletsIds = [option.id, ...usedWalletsIds.filter((id: string): boolean => id !== option.id)];\n      window.localStorage.setItem('@StellarWalletsKit/usedWalletsIds', JSON.stringify(usedWalletsIds));\n    } catch (e) {\n      console.error(e);\n    }\n\n    this.dispatchEvent(\n      new CustomEvent('wallet-selected', {\n        detail: option,\n        bubbles: true,\n        composed: true,\n      })\n    );\n\n    this.closingModal = false;\n  }\n\n  /**\n   * This function gets the list of the wallets following the logic from this task https://github.com/Creit-Tech/Stellar-Wallets-Kit/issues/28\n   * It follows this order:\n   * 1- Wallet last used by wallet selector\n   * 2- If not wallet last use, wallets detected in the browser\n   * 3- Wallet ordering as defined by the developer\n   *\n   */\n  private getSortedList(): ISupportedWallet[] {\n    const sortedWallets: { available: ISupportedWallet[]; unavailable: ISupportedWallet[] } =\n      this.allowedWallets.value!.reduce(\n        (all: { available: ISupportedWallet[]; unavailable: ISupportedWallet[] }, current: ISupportedWallet) => {\n          return {\n            available: current.isAvailable ? [...all.available, current] : all.available,\n            unavailable: !current.isAvailable ? [...all.unavailable, current] : all.unavailable,\n          };\n        },\n        { available: [], unavailable: [] }\n      );\n\n    let usedWalletsIds: Array<ISupportedWallet['id']>;\n    try {\n      const record: string | null = window.localStorage.getItem('@StellarWalletsKit/usedWalletsIds');\n      usedWalletsIds = record ? JSON.parse(record) : [];\n    } catch (e) {\n      console.error(e);\n      usedWalletsIds = [];\n    }\n\n    if (usedWalletsIds.length === 0) {\n      return [...sortedWallets.available, ...sortedWallets.unavailable];\n    }\n\n    const usedWallets: ISupportedWallet[] = [];\n    const nonUsedWallets: ISupportedWallet[] = [];\n    for (const availableWallet of sortedWallets.available) {\n      if (usedWalletsIds.find((id: string): boolean => id === availableWallet.id)) {\n        usedWallets.push(availableWallet);\n      } else {\n        nonUsedWallets.push(availableWallet);\n      }\n    }\n\n    return [\n      ...usedWallets.sort((a: ISupportedWallet, b: ISupportedWallet) => {\n        return usedWalletsIds.indexOf(a.id) - usedWalletsIds.indexOf(b.id);\n      }),\n      ...nonUsedWallets,\n      ...sortedWallets.unavailable,\n    ];\n  }\n\n  private getPlatformWrapper(): ISupportedWallet | undefined {\n    return this.getSortedList().find((w: ISupportedWallet): boolean => w.isPlatformWrapper)\n  }\n\n  private getThemeStyles() {\n    if (!this.theme.value) return {};\n\n    return {\n      '--modal-bg-color': this.theme.value.bgColor,\n      '--modal-text-color': this.theme.value.textColor,\n      '--modal-solid-text-color': this.theme.value.solidTextColor,\n      '--modal-header-button-color': this.theme.value.headerButtonColor,\n      '--modal-divider-color': this.theme.value.dividerColor,\n      '--modal-help-bg-color': this.theme.value.helpBgColor,\n      '--modal-not-available-text-color': this.theme.value.notAvailableTextColor,\n      '--modal-not-available-bg-color': this.theme.value.notAvailableBgColor,\n      '--modal-not-available-border-color': this.theme.value.notAvailableBorderColor,\n    };\n  }\n\n  override render() {\n    if (this.getPlatformWrapper()) {\n      return html``;\n    }\n\n    const helpSection = html`\n      <section class=\"help-container\">\n        <header class=\"help-header\">\n          <h2 class=\"help-header__modal-title dialog-text-solid\">Learn more</h2>\n        </header>\n\n        <div class=\"help__whats_a_wallet\">\n          <h2 class=\"dialog-text-solid help__title\">What is a Wallet?</h2>\n          <p class=\"dialog-text help__text\">\n            Wallets are used to send, receive, and store the keys you use to sign blockchain transactions.\n          </p>\n        </div>\n\n        <div class=\"help__whats_stellar\">\n          <h2 class=\"dialog-text-solid help__title\">What is Stellar?</h2>\n          <p class=\"dialog-text help__text\">\n            Stellar is a decentralized, public blockchain that gives developers the tools to create experiences that are\n            more like cash than crypto.\n          </p>\n        </div>\n      </section>\n    `;\n\n    const walletsSection = html`\n      <section class=\"wallets-container\">\n        <header class=\"wallets-header\">\n          <h2 class=\"wallets-header__modal-title dialog-text-solid\">${this.modalTitle}</h2>\n\n          <button @click=${() => this.closeModal()} class=\"wallets-header__button\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\" height=\"20px\" width=\"20px\" viewBox=\"0 0 490 490\">\n              <polygon\n                points=\"456.851,0 245,212.564 33.149,0 0.708,32.337 212.669,245.004 0.708,457.678 33.149,490 245,277.443 456.851,490   489.292,457.678 277.331,245.004 489.292,32.337 \" />\n            </svg>\n          </button>\n        </header>\n\n        <ul class=\"wallets-body\">\n          ${this.getSortedList().map(\n            (item: ISupportedWallet, i: number) =>\n              html`\n                <li\n                  @click=${() => this.pickWalletOption(item)}\n                  class=\" wallets-body__item ${!item.isAvailable ? 'not-available' : ''} ${i ===\n                  this.allowedWallets.value!.length - 1\n                    ? 'mb-0'\n                    : ''}\">\n                  <img src=${item.icon} alt=${item.name} />\n                  <span class=\"dialog-text-solid\">${item.name}</span>\n                  ${!item.isAvailable ? html`<small class=\"not-available\">${this.notAvailableText}</small>` : ''}\n                </li>\n              `\n          )}\n        </ul>\n      </section>\n    `;\n\n    return html`\n      <dialog\n        style=${styleMap(this.getThemeStyles())}\n        class=\"dialog-modal ${this.closingModal ? 'closing' : ''}\"\n        .open=${this.showModal}>\n        <section class=\"dialog-modal-body\">\n          <div class=\"dialog-modal-body__help\">${helpSection}</div>\n          <div class=\"dialog-modal-body__wallets\">${walletsSection}</div>\n        </section>\n      </dialog>\n\n      <div\n        style=\"position: fixed; z-index: 950\"\n        class=\"backdrop ${this.closingModal ? 'closing' : ''}\"\n        @click=${() => this.closeModal()}></div>\n    `;\n  }\n}\n", "import { firstValueFrom } from 'rxjs';\nimport { horizonUrl$ } from '../state/store';\n\nexport async function fetchAccountBalance(pk: string): Promise<string> {\n  const horizonUrl: string | undefined = await firstValueFrom(horizonUrl$);\n  if (!horizonUrl) {\n    throw new Error('There is no Horizon URL set');\n  }\n  const url: URL = new URL(horizonUrl);\n  url.pathname = `/accounts/${pk}`;\n  const response: Response = await fetch(url);\n  const data = await response.json();\n  const nativeBalance = data.balances.find((b: { asset_type: string }): boolean => b.asset_type === 'native');\n  return nativeBalance.balance;\n}\n", "export async function copyToClipboard(textToCopy: string): Promise<void> {\n  if (!textToCopy) {\n    throw new Error(`Text to copy to the clipboard can't be undefined`);\n  }\n\n  await navigator.clipboard.writeText(textToCopy);\n}\n", "import { css } from 'lit';\n\nexport const buttonContainer = css`\n  .btn-container {\n    position: relative;\n  }\n`;\n\nexport const buttonStyles = css`\n  .btn {\n    background: none;\n    border: none;\n    border-radius: var(--button-border-radius, 0.5rem);\n    cursor: pointer;\n    padding: var(--button-padding, 0.5rem 1.25rem);\n    display: flex;\n    justify-content: center;\n    justify-items: center;\n    align-content: center;\n    align-items: center;\n    line-height: 100%;\n    margin: 0;\n    font-family: 'Open Sans', arial, sans-serif;\n  }\n\n  .btn svg {\n    width: 1rem;\n    height: auto;\n    margin-left: 0.5rem;\n  }\n\n  @media (prefers-color-scheme: light) {\n    .btn {\n      background-color: var(--button-bg-color, #fcfcfc);\n      color: var(--button-text-color, #181818);\n      border: solid var(--button-text-color, #181818) 1px;\n    }\n\n    .btn svg circle,\n    .btn svg path {\n      stroke: var(--button-text-color, #181818);\n    }\n  }\n\n  @media (prefers-color-scheme: dark) {\n    .btn {\n      background-color: var(--button-bg-color, #161616);\n      color: var(--button-text-color, #fcfcfc);\n      border: solid var(--button-text-color, #fcfcfc) 1px;\n    }\n\n    .btn svg circle,\n    .btn svg path {\n      stroke: var(--button-text-color, #fcfcfc);\n    }\n  }\n`;\n\nexport const dropdownWrapper = css`\n  .dropdown-wrapper {\n    position: absolute;\n    top: 110%;\n    right: 0;\n    box-shadow: 0 0.125rem 0.75rem rgba(0, 0, 0, 0.25);\n    z-index: 900;\n    border-radius: 0.75rem;\n    padding: 2rem;\n    width: 18rem;\n    display: flex;\n    flex-direction: column;\n    font-family: 'Open Sans', arial, sans-serif;\n  }\n\n  .dropdown-profile {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 2rem;\n  }\n\n  .dropdown-text-solid {\n    font-size: 1rem;\n    line-height: 1.25rem;\n  }\n\n  .dropdown-text {\n    font-size: 0.875rem;\n    line-height: 1.125rem;\n  }\n\n  .dropdown-action-wrapper {\n    display: flex;\n    flex-direction: column;\n    gap: 0.75rem;\n  }\n\n  .dropdown-action-button {\n    padding: 0.4rem;\n    border-radius: 0.25rem;\n    border: none;\n    background: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 0.5rem;\n    cursor: pointer;\n  }\n\n  .dropdown-close {\n    position: absolute;\n    right: 1rem;\n    top: 1rem;\n    border-radius: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: none;\n    border: none;\n    font-size: 1.25rem;\n    cursor: pointer;\n  }\n\n  @media (prefers-color-scheme: light) {\n    .dropdown-wrapper {\n      background-color: var(--button-bg-color, #fcfcfc);\n      border: solid 1px var(--button-solid-text-color, #000000);\n    }\n\n    .dropdown-text-solid,\n    .dropdown-action-button,\n    .dropdown-close {\n      color: var(--button-solid-text-color, #000000);\n    }\n\n    .dropdown-text {\n      color: var(--button-text-color, #181818);\n    }\n\n    svg circle,\n    svg path {\n      stroke: var(--button-text-color, #181818);\n    }\n\n    .dropdown-action-button {\n      border: 1px solid var(--button-text-color, #181818);\n    }\n  }\n\n  @media (prefers-color-scheme: dark) {\n    .dropdown-wrapper {\n      background-color: var(--button-bg-color, #161616);\n      border: solid 1px var(--button-solid-text-color, #ededed);\n    }\n\n    .dropdown-text-solid,\n    .dropdown-action-button,\n    .dropdown-close {\n      color: var(--button-solid-text-color, #ededed);\n    }\n\n    .dropdown-text {\n      color: var(--button-text-color, #a0a0a0);\n    }\n\n    svg circle,\n    svg path {\n      stroke: var(--button-text-color, #fcfcfc);\n    }\n\n    .dropdown-action-button {\n      border: 1px solid var(--button-text-color, #a0a0a0);\n    }\n  }\n`;\n", "import { css, html, LitElement } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { firstValueFrom, Subscription, switchMap } from 'rxjs';\nimport { fetchAccountBalance } from '../../services/account.service';\nimport { copyToClipboard } from '../../services/clipboard.service';\nimport { ReactiveState } from '../../state/reactive-state';\nimport { activeAddress$, buttonTheme$, horizonUrl$, removeAddress } from '../../state/store';\nimport { IButtonTheme } from '../../types';\nimport { dropdownWrapper, buttonContainer, buttonStyles } from './styles';\n\nexport enum ButtonThemeType {\n  DARK = 'DARK',\n  LIGHT = 'LIGHT',\n}\n\nexport const ButtonThemes: { [key in ButtonThemeType]: IButtonTheme } = {\n  DARK: {\n    bgColor: '#161616',\n    textColor: '#a0a0a0',\n    solidTextColor: '#ededed',\n    dividerColor: 'rgba(255, 255, 255, 0.15)',\n    buttonPadding: '0.5rem 1.25rem',\n    buttonBorderRadius: '0.5rem',\n  },\n  LIGHT: {\n    bgColor: '#fcfcfc',\n    textColor: '#181818',\n    solidTextColor: '#000000',\n    dividerColor: 'rgba(0, 0, 0, 0.15)',\n    buttonPadding: '0.5rem 1.25rem',\n    buttonBorderRadius: '0.5rem',\n  },\n};\n\n@customElement('stellar-wallets-button')\nexport class StellarWalletsButton extends LitElement {\n  static override styles = [\n    css`\n      :host * {\n        box-sizing: border-box;\n      }\n    `,\n    buttonStyles,\n    buttonContainer,\n    dropdownWrapper,\n  ];\n\n  @property({ type: String, reflect: true })\n  buttonText: string = 'Connect';\n\n  @state()\n  showDropdown: boolean = false;\n\n  @state()\n  accountBalance?: string;\n\n  @state()\n  showCopiedMessage: boolean = false;\n\n  activeAddress: ReactiveState<string | undefined> = new ReactiveState(this, activeAddress$);\n  theme: ReactiveState<IButtonTheme | undefined> = new ReactiveState(this, buttonTheme$);\n  fetchAddressSubscription: Subscription | undefined;\n\n  private get getThemeStyles() {\n    if (!this.theme.value) return {};\n\n    return {\n      '--button-bg-color': this.theme.value.bgColor,\n      '--button-text-color': this.theme.value.textColor,\n      '--button-solid-text-color': this.theme.value.solidTextColor,\n      '--button-divider-color': this.theme.value.dividerColor,\n      '--button-padding': this.theme.value.buttonPadding,\n      '--button-border-radius': this.theme.value.buttonBorderRadius,\n    };\n  }\n\n  onButtonClicked() {\n    if (this.activeAddress.value) {\n      this.showDropdown = !this.showDropdown;\n    } else {\n      this.dispatchEvent(\n        new CustomEvent('button-clicked', {\n          bubbles: true,\n          composed: true,\n        })\n      );\n    }\n  }\n\n  closeDropdown(): void {\n    this.showDropdown = false;\n  }\n\n  disconnect(): void {\n    removeAddress();\n    this.closeDropdown();\n\n    this.dispatchEvent(\n      new CustomEvent('disconnect-wallet', {\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  async copyPublicKey(): Promise<void> {\n    await copyToClipboard(this.activeAddress.value!);\n    this.showCopiedMessage = true;\n    await new Promise(r => setTimeout(r, 3000));\n    this.showCopiedMessage = false;\n  }\n\n  async startBalanceFetcher(): Promise<void> {\n    const horizonUrl: string | undefined = await firstValueFrom(horizonUrl$);\n\n    if (horizonUrl) {\n      this.fetchAddressSubscription = this.activeAddress.value$\n        .pipe(\n          switchMap(async (value: string | undefined): Promise<string> => {\n            return value ? fetchAccountBalance(value).catch((): string => '0') : '0';\n          })\n        )\n        .subscribe((balance: string): void => {\n          this.accountBalance = balance;\n        });\n    }\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this.startBalanceFetcher().then();\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n\n    this.fetchAddressSubscription?.unsubscribe();\n  }\n\n  override render() {\n    const button = html`\n      <button @click=${this.onButtonClicked} class=\"btn\">\n        ${this.activeAddress.value\n          ? this.activeAddress.value.slice(0, 4) + '....' + this.activeAddress.value.slice(-6)\n          : this.buttonText}\n\n        <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M6 8H10\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n          <path\n            d=\"M20.8333 9H18.2308C16.4465 9 15 10.3431 15 12C15 13.6569 16.4465 15 18.2308 15H20.8333C20.9167 15 20.9583 15 20.9935 14.9979C21.5328 14.965 21.9623 14.5662 21.9977 14.0654C22 14.0327 22 13.994 22 13.9167V10.0833C22 10.006 22 9.96726 21.9977 9.9346C21.9623 9.43384 21.5328 9.03496 20.9935 9.00214C20.9583 9 20.9167 9 20.8333 9Z\"\n            stroke-width=\"1.5\" />\n          <path\n            d=\"M20.965 9C20.8873 7.1277 20.6366 5.97975 19.8284 5.17157C18.6569 4 16.7712 4 13 4L10 4C6.22876 4 4.34315 4 3.17157 5.17157C2 6.34315 2 8.22876 2 12C2 15.7712 2 17.6569 3.17157 18.8284C4.34315 20 6.22876 20 10 20H13C16.7712 20 18.6569 20 19.8284 18.8284C20.6366 18.0203 20.8873 16.8723 20.965 15\"\n            stroke-width=\"1.5\" />\n          <path d=\"M17.9912 12H18.0002\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n        </svg>\n      </button>\n    `;\n\n    const dropdown = this.showDropdown\n      ? html`\n          <section class=\"dropdown-wrapper\">\n            <button @click=${this.closeDropdown} class=\"dropdown-close\">x</button>\n\n            <div class=\"dropdown-profile\">\n              <svg\n                style=\"margin-bottom: 1rem\"\n                width=\"36px\"\n                height=\"36px\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\">\n                <circle cx=\"12\" cy=\"6\" r=\"4\" stroke=\"#1C274C\" stroke-width=\"1.5\" />\n                <path\n                  d=\"M19.9975 18C20 17.8358 20 17.669 20 17.5C20 15.0147 16.4183 13 12 13C7.58172 13 4 15.0147 4 17.5C4 19.9853 4 22 12 22C14.231 22 15.8398 21.8433 17 21.5634\"\n                  stroke=\"#1C274C\"\n                  stroke-width=\"1.5\"\n                  stroke-linecap=\"round\" />\n              </svg>\n\n              <h2 style=\"margin: 0 0 0.25rem\" class=\"dropdown-text-solid\">\n                ${this.activeAddress.value?.slice(0, 4)}....${this.activeAddress.value?.slice(-6)}\n              </h2>\n\n              ${this.accountBalance\n                ? html`<h3 style=\"margin: 0\" class=\"dropdown-text\">${this.accountBalance} XLM</h3>`\n                : ''}\n            </div>\n\n            <div class=\"dropdown-action-wrapper\">\n              <button @click=${this.copyPublicKey} class=\"dropdown-action-button\">\n                ${!this.showCopiedMessage\n                  ? html`Copy address\n\n                      <svg\n                        width=\"0.75rem\"\n                        height=\"0.75rem\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\">\n                        <path\n                          fill-rule=\"evenodd\"\n                          clip-rule=\"evenodd\"\n                          d=\"M15 1.25H10.9436C9.10583 1.24998 7.65019 1.24997 6.51098 1.40314C5.33856 1.56076 4.38961 1.89288 3.64124 2.64124C2.89288 3.38961 2.56076 4.33856 2.40314 5.51098C2.24997 6.65019 2.24998 8.10582 2.25 9.94357V16C2.25 17.8722 3.62205 19.424 5.41551 19.7047C5.55348 20.4687 5.81753 21.1208 6.34835 21.6517C6.95027 22.2536 7.70814 22.5125 8.60825 22.6335C9.47522 22.75 10.5775 22.75 11.9451 22.75H15.0549C16.4225 22.75 17.5248 22.75 18.3918 22.6335C19.2919 22.5125 20.0497 22.2536 20.6517 21.6517C21.2536 21.0497 21.5125 20.2919 21.6335 19.3918C21.75 18.5248 21.75 17.4225 21.75 16.0549V10.9451C21.75 9.57754 21.75 8.47522 21.6335 7.60825C21.5125 6.70814 21.2536 5.95027 20.6517 5.34835C20.1208 4.81753 19.4687 4.55348 18.7047 4.41551C18.424 2.62205 16.8722 1.25 15 1.25ZM17.1293 4.27117C16.8265 3.38623 15.9876 2.75 15 2.75H11C9.09318 2.75 7.73851 2.75159 6.71085 2.88976C5.70476 3.02502 5.12511 3.27869 4.7019 3.7019C4.27869 4.12511 4.02502 4.70476 3.88976 5.71085C3.75159 6.73851 3.75 8.09318 3.75 10V16C3.75 16.9876 4.38624 17.8265 5.27117 18.1293C5.24998 17.5194 5.24999 16.8297 5.25 16.0549V10.9451C5.24998 9.57754 5.24996 8.47522 5.36652 7.60825C5.48754 6.70814 5.74643 5.95027 6.34835 5.34835C6.95027 4.74643 7.70814 4.48754 8.60825 4.36652C9.47522 4.24996 10.5775 4.24998 11.9451 4.25H15.0549C15.8297 4.24999 16.5194 4.24998 17.1293 4.27117ZM7.40901 6.40901C7.68577 6.13225 8.07435 5.9518 8.80812 5.85315C9.56347 5.75159 10.5646 5.75 12 5.75H15C16.4354 5.75 17.4365 5.75159 18.1919 5.85315C18.9257 5.9518 19.3142 6.13225 19.591 6.40901C19.8678 6.68577 20.0482 7.07435 20.1469 7.80812C20.2484 8.56347 20.25 9.56458 20.25 11V16C20.25 17.4354 20.2484 18.4365 20.1469 19.1919C20.0482 19.9257 19.8678 20.3142 19.591 20.591C19.3142 20.8678 18.9257 21.0482 18.1919 21.1469C17.4365 21.2484 16.4354 21.25 15 21.25H12C10.5646 21.25 9.56347 21.2484 8.80812 21.1469C8.07435 21.0482 7.68577 20.8678 7.40901 20.591C7.13225 20.3142 6.9518 19.9257 6.85315 19.1919C6.75159 18.4365 6.75 17.4354 6.75 16V11C6.75 9.56458 6.75159 8.56347 6.85315 7.80812C6.9518 7.07435 7.13225 6.68577 7.40901 6.40901Z\" />\n                      </svg>`\n                  : 'Copied!!'}\n              </button>\n\n              <button @click=${this.disconnect} class=\"dropdown-action-button\">\n                Disconnect\n\n                <svg\n                  width=\"0.75rem\"\n                  height=\"0.75rem\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    d=\"M18 8L22 12M22 12L18 16M22 12H9M15 4.20404C13.7252 3.43827 12.2452 3 10.6667 3C5.8802 3 2 7.02944 2 12C2 16.9706 5.8802 21 10.6667 21C12.2452 21 13.7252 20.5617 15 19.796\"\n                    stroke-width=\"2\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\" />\n                </svg>\n              </button>\n            </div>\n          </section>\n        `\n      : '';\n\n    return html`\n      <section style=${styleMap(this.getThemeStyles)} class=\"btn-container\">${button} ${dropdown}</section>\n    `;\n  }\n}\n", "import { css } from 'lit';\n\nexport const modalDialogStyles = css`\n  .dialog-modal {\n    max-height: 90vh;\n    position: fixed;\n    z-index: 990;\n    font-family: 'Open Sans', arial, sans-serif;\n    margin: 0 auto;\n    padding: 0;\n    width: 100%;\n    border-radius: 1rem 1rem 0 0;\n    border-width: 0;\n    box-shadow: 0 0.125rem 0.75rem rgba(0, 0, 0, 0.25);\n    bottom: 0;\n    overflow-x: hidden;\n    overflow-y: scroll;\n  }\n\n  @media screen and (min-width: 768px) {\n    .dialog-modal {\n      z-index: 990;\n      bottom: auto;\n      top: 5rem;\n      max-width: 25rem;\n      border-radius: 1rem;\n    }\n  }\n`;\n\nexport const modalDialogBodyStyles = css`\n  .dialog-modal-body {\n    display: flex;\n    flex-direction: column-reverse;\n  }\n\n  .dialog-modal-body__help,\n  .dialog-modal-body__wallets {\n    width: 100%;\n    flex-basis: 100%;\n  }\n\n  .dialog-modal-body__help {\n    padding: 1.5rem;\n  }\n\n  .dialog-modal-body__wallets {\n    padding: 1.5rem;\n  }\n\n  .dialog-text-solid {\n    font-size: 1rem;\n    line-height: 1.25rem;\n  }\n\n  .dialog-text {\n    font-size: 0.875rem;\n    line-height: 1.125rem;\n  }\n\n  @media (prefers-color-scheme: light) {\n    .dialog-modal-body__help {\n      background-color: var(--modal-help-bg-color, #f8f8f8);\n      border-top: 1px solid var(--modal-divider-color, rgba(0, 0, 0, 0.15));\n    }\n\n    @media screen and (min-width: 768px) {\n      .dialog-modal-body__help {\n        border-top: none;\n        border-right: 1px solid var(--modal-divider-color, rgba(0, 0, 0, 0.15));\n      }\n    }\n\n    .dialog-modal-body__wallets,\n    .dialog-modal-body {\n      background-color: var(--modal-bg-color, #fcfcfc);\n    }\n\n    .dialog-text-solid {\n      color: var(--modal-solid-text-color, #000000);\n    }\n\n    .dialog-text {\n      color: var(--modal-text-color, #181818);\n    }\n  }\n\n  @media (prefers-color-scheme: dark) {\n    .dialog-modal-body__help {\n      background-color: var(--modal-help-bg-color, #1c1c1c);\n      border-top: 1px solid var(--modal-divider-color, rgba(255, 255, 255, 0.15));\n    }\n\n    @media screen and (min-width: 768px) {\n      .dialog-modal-body__help {\n        border-top: none;\n        border-right: 1px solid var(--modal-divider-color, rgba(255, 255, 255, 0.15));\n      }\n    }\n\n    .dialog-modal-body__wallets,\n    .dialog-modal-body {\n      background-color: var(--modal-bg-color, #161616);\n    }\n\n    .dialog-text-solid {\n      color: var(--modal-solid-text-color, #ededed);\n    }\n\n    .dialog-text {\n      color: var(--modal-text-color, #a0a0a0);\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    .dialog-modal-body {\n      flex-direction: row;\n    }\n\n    .dialog-modal-body__help,\n    .dialog-modal-body__wallets {\n      padding: 2rem;\n    }\n  }\n`;\n\nexport const modalHelpSection = css`\n  .help-container {\n    width: 100%;\n  }\n\n  .help-header {\n    display: none;\n    margin: 0 0 2rem 0;\n  }\n\n  .help-header__modal-title {\n    font-size: 1.25rem;\n    padding: 0;\n    margin: 0;\n  }\n\n  .help__title,\n  .help__text {\n    text-align: center;\n  }\n\n  .help__title {\n    font-weight: 400;\n    margin-top: 0;\n    margin-bottom: 0.5rem;\n  }\n\n  .help__text {\n    max-width: 21rem;\n    margin-left: auto;\n    margin-right: auto;\n    font-weight: 300;\n    margin-top: 0;\n  }\n\n  .help__whats_stellar {\n    display: none;\n  }\n\n  @media screen and (min-width: 768px) {\n    .help-header {\n      display: block;\n    }\n\n    .help__title,\n    .help__text {\n      text-align: left;\n      margin-left: 0;\n    }\n\n    .help__whats_a_wallet {\n      margin-bottom: 2rem;\n    }\n\n    .help__whats_stellar {\n      display: block;\n    }\n  }\n`;\n\nexport const modalWalletsSection = css`\n  .wallets-container {\n    width: 100%;\n    height: 100%;\n    min-height: fit-content;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .wallets-header {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 1.5rem;\n  }\n\n  .wallets-header__modal-title {\n    font-size: 1.25rem;\n    padding: 0;\n    margin: 0;\n  }\n\n  .wallets-header__button {\n    background: none;\n    border: none;\n    cursor: pointer;\n  }\n\n  @media (prefers-color-scheme: light) {\n    .wallets-header__button svg {\n      fill: var(--modal-header-button-color, #8f8f8f);\n    }\n  }\n\n  @media (prefers-color-scheme: dark) {\n    .wallets-header__button svg {\n      fill: var(--modal-header-button-color, #707070);\n    }\n  }\n\n  .wallets-body {\n    margin: 0;\n    width: 100%;\n    list-style: none;\n    padding: 1rem 0 0 !important;\n  }\n\n  .wallets-body__item {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-weight: 600;\n    margin-bottom: 2rem;\n    cursor: pointer;\n    padding: 0 0 1rem 0;\n  }\n\n  .wallets-body__item:last-child {\n    margin-bottom: 0;\n  }\n\n  @media (prefers-color-scheme: light) {\n    .wallets-body__item {\n      border-bottom: 1px var(--modal-divider-color, rgba(0, 0, 0, 0.15)) solid;\n    }\n  }\n\n  @media (prefers-color-scheme: dark) {\n    .wallets-body__item {\n      border-bottom: 1px var(--modal-divider-color, rgba(255, 255, 255, 0.15)) solid;\n    }\n  }\n\n  .wallets-body__item img {\n    margin-right: 1rem;\n    width: 2rem;\n    border-radius: 100%;\n    overflow: hidden;\n  }\n\n  .wallets-body__item.not-available {\n    cursor: alias;\n  }\n\n  .wallets-body__item .not-available {\n    margin-left: auto;\n    font-size: 10px;\n    padding: 0.25rem 0.5rem;\n    border-radius: 1rem;\n  }\n\n  @media (prefers-color-scheme: light) {\n    .wallets-body__item .not-available {\n      border: solid var(--modal-not-available-border-color, #e2e2e2) 1px;\n      background-color: var(--modal-not-available-bg-color, #f3f3f3);\n      color: var(--modal-not-available-text-color, #6f6f6f);\n    }\n  }\n\n  @media (prefers-color-scheme: dark) {\n    .wallets-body__item .not-available {\n      border: solid var(--modal-not-available-border-color, #343434) 1px;\n      background-color: var(--modal-not-available-bg-color, #232323);\n      color: var(--modal-not-available-text-color, #a0a0a0);\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n  }\n`;\n\nexport const backdropStyles = css`\n  .dialog-modal[open] + .backdrop {\n    background: rgba(0, 0, 0, 0.5);\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const modalAnimations = css`\n  .dialog-modal[open] {\n    -webkit-animation: showModal 0.3s ease normal;\n  }\n  @-webkit-keyframes showModal {\n    from {\n      transform: translateY(25%);\n      opacity: 0;\n    }\n    to {\n      transform: translateY(0%);\n      opacity: 1;\n    }\n  }\n\n  .dialog-modal.closing {\n    -webkit-animation: hideModal 0.3s ease normal !important;\n  }\n  @-webkit-keyframes hideModal {\n    from {\n      transform: translateY(0%);\n      opacity: 1;\n    }\n    to {\n      transform: translateY(25%);\n      opacity: 0;\n    }\n  }\n\n  .backdrop.closing {\n    -webkit-animation: hideBackdrop 0.3s ease normal !important;\n  }\n  @-webkit-keyframes hideBackdrop {\n    from {\n      opacity: 1;\n    }\n    to {\n      opacity: 0;\n    }\n  }\n`;\n", "import { css, html, LitElement } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { IModalTheme } from '../../types';\nimport {\n  backdropStyles,\n  modalAnimations,\n  modalDialogBodyStyles,\n  modalHelpSection,\n  modalWalletsSection,\n  modalDialogStyles,\n} from './styles';\n\nexport enum ModalThemeType {\n  DARK = 'DARK',\n  LIGHT = 'LIGHT',\n}\n\nexport const ModalThemes: { [key in ModalThemeType]: IModalTheme } = {\n  DARK: {\n    bgColor: '#161616',\n    textColor: '#a0a0a0',\n    solidTextColor: '#ededed',\n    headerButtonColor: '#707070',\n    dividerColor: 'rgba(255, 255, 255, 0.15)',\n    helpBgColor: '#1c1c1c',\n    notAvailableTextColor: '#a0a0a0',\n    notAvailableBgColor: '#232323',\n    notAvailableBorderColor: '#343434',\n  },\n  LIGHT: {\n    bgColor: '#fcfcfc',\n    textColor: '#181818',\n    solidTextColor: '#000000',\n    headerButtonColor: '#8f8f8f',\n    dividerColor: 'rgba(0, 0, 0, 0.15)',\n    helpBgColor: '#f8f8f8',\n    notAvailableTextColor: '#6f6f6f',\n    notAvailableBgColor: '#f3f3f3',\n    notAvailableBorderColor: '#e2e2e2',\n  },\n};\n\n@customElement('stellar-accounts-selector')\nexport class StellarSelectorModal extends LitElement {\n  static override styles = [\n    css`\n      :host * {\n        box-sizing: border-box;\n      }\n\n      .mb-0 {\n        margin-bottom: 0 !important;\n      }\n    `,\n    modalDialogStyles,\n    modalDialogBodyStyles,\n    modalHelpSection,\n    backdropStyles,\n    modalAnimations,\n    modalWalletsSection,\n  ];\n\n  @property({ type: Boolean, reflect: true })\n  showModal: boolean = false;\n\n  @property({ type: Boolean, reflect: true })\n  loadingAccounts: boolean = false;\n\n  @state()\n  closingModal: boolean = false;\n\n  @property({ type: String, reflect: true })\n  modalTitle: string = 'Pick your account';\n\n  @property({ type: String, reflect: true, converter: value => (value ? JSON.parse(value) : []) })\n  accounts: { index: number; publicKey: string }[] = [];\n\n  override connectedCallback() {\n    super.connectedCallback();\n  }\n\n  async pickAccount(option: { publicKey: string; index: number }): Promise<void> {\n    this.closingModal = true;\n\n    await new Promise(r => setTimeout(r, 280));\n\n    this.dispatchEvent(\n      new CustomEvent('account-selected', {\n        detail: option,\n        bubbles: true,\n        composed: true,\n      })\n    );\n\n    this.closingModal = false;\n  }\n\n  async closeModal(): Promise<void> {\n    this.closingModal = true;\n\n    await new Promise(r => setTimeout(r, 280));\n\n    this.showModal = false;\n\n    this.dispatchEvent(\n      new CustomEvent('account-selector-closed', {\n        detail: new Error('Account selector closed'),\n        bubbles: true,\n        composed: true,\n      })\n    );\n\n    this.closingModal = false;\n  }\n\n  override render() {\n    const loadingIcon = html`\n      <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <style>\n          .spinner_qM83 {\n            animation: spinner_8HQG 1.05s infinite;\n            fill: white;\n          }\n          .spinner_oXPr {\n            animation-delay: 0.1s;\n          }\n          .spinner_ZTLf {\n            animation-delay: 0.2s;\n          }\n          @keyframes spinner_8HQG {\n            0%,\n            57.14% {\n              animation-timing-function: cubic-bezier(0.33, 0.66, 0.66, 1);\n              transform: translate(0);\n            }\n            28.57% {\n              animation-timing-function: cubic-bezier(0.33, 0, 0.66, 0.33);\n              transform: translateY(-6px);\n            }\n            100% {\n              transform: translate(0);\n            }\n          }\n        </style>\n        <circle class=\"spinner_qM83\" cx=\"4\" cy=\"12\" r=\"3\" />\n        <circle class=\"spinner_qM83 spinner_oXPr\" cx=\"12\" cy=\"12\" r=\"3\" />\n        <circle class=\"spinner_qM83 spinner_ZTLf\" cx=\"20\" cy=\"12\" r=\"3\" />\n      </svg>\n    `;\n\n    const accountsList = html`\n      <ul class=\"wallets-body\">\n        ${this.accounts.map(\n          ({ publicKey, index }) => html`\n            <li @click=\"${() => this.pickAccount({ publicKey, index })}\" class=\"wallets-body__item\">\n              <span style=\"margin-right: 1rem;\" class=\"dialog-text-solid\">\n                ${publicKey.slice(0, 4)}....${publicKey.slice(-6)}\n              </span>\n              <span class=\"dialog-text\">(44'/148'/${index}')</span>\n            </li>\n          `\n        )}\n      </ul>\n    `;\n\n    return html`\n      <dialog style=\"\" class=\"dialog-modal ${this.closingModal ? 'closing' : ''}\" .open=${this.showModal}>\n        <section class=\"dialog-modal-body\">\n          <div class=\"dialog-modal-body__wallets\">\n            <section class=\"wallets-container\">\n              <header class=\"wallets-header\">\n                <h2 class=\"wallets-header__modal-title dialog-text-solid\">${this.modalTitle}</h2>\n\n                <button @click=${() => this.closeModal()} class=\"wallets-header__button\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"#000000\"\n                    height=\"20px\"\n                    width=\"20px\"\n                    viewBox=\"0 0 490 490\">\n                    <polygon\n                      points=\"456.851,0 245,212.564 33.149,0 0.708,32.337 212.669,245.004 0.708,457.678 33.149,490 245,277.443 456.851,490   489.292,457.678 277.331,245.004 489.292,32.337 \" />\n                  </svg>\n                </button>\n              </header>\n\n              ${this.loadingAccounts ? loadingIcon : accountsList}\n            </section>\n          </div>\n        </section>\n      </dialog>\n\n      <div\n        style=\"position: fixed; z-index: 950\"\n        class=\"backdrop ${this.closingModal ? 'closing' : ''}\"\n        @click=${() => this.closeModal()}></div>\n    `;\n  }\n}\n", "import {generateRandomToken} from './random-token-generator'\r\nimport intentInterface from './intent-interface'\r\nimport intentErrors from './intent-errors'\r\nimport {requestIntentConfirmation} from './intent-dispatcher'\r\nimport {forgetSession, getAllImplicitSessions, getImplicitSession} from './implicit-session-storage'\r\nimport {bindWebStellarLinkHandler} from './web+stellar-handler'\r\n\r\nif (typeof window === 'object' && typeof window.fetch !== 'function') {\r\n    throw new Error('Browser FetchAPI is not available. For legacy browsers support use polyfills such as whatwg-fetch.')\r\n}\r\n\r\n/**\r\n * Albedo API external interface implementation.\r\n */\r\nfunction AlbedoIntent() {\r\n}\r\n\r\nAlbedoIntent.prototype = {\r\n    frontendUrl: 'https://albedo.link',\r\n    intentInterface,\r\n    intentErrors,\r\n    /**\r\n     * Initiate external intent request.\r\n     * @param {String} intent - Intent name.\r\n     * @param {Object} [params] - Request parameters.\r\n     * @returns {Promise<Object>}\r\n     */\r\n    request(intent, params) {\r\n        return requestIntentConfirmation(Object.assign(params || {}, {intent}), this.frontendUrl)\r\n    },\r\n\r\n    /**\r\n     * Requests temporary permissions to execute the specific intents without calling confirmation dialog.\r\n     * @param {Object} params - Intent parameters.\r\n     * @param {Array<String>} params.intents - Requested intents.\r\n     * @returns {Promise<ImplicitFlowIntentResult>}\r\n     */\r\n    implicitFlow(params) {\r\n        return this.request('implicit_flow', params)\r\n    },\r\n\r\n    /**\r\n     * Request secure third-party application authentication.\r\n     * @param {Object} params - Intent parameters.\r\n     * @param {String} [params.token] - Verification token generated by the application (should be unique or random).\r\n     * @param {String} [params.require_existing] - Allow existing Albedo accounts only.\r\n     * @returns {Promise<PublicKeyIntentResult>}\r\n     */\r\n    publicKey(params) {\r\n        params = Object.assign({}, params)\r\n        if (!params.token) {\r\n            params.token = generateRandomToken()\r\n        }\r\n        return this.request('public_key', params)\r\n    },\r\n\r\n    /**\r\n     * Request transaction signing, returns the signed transaction envelope.\r\n     * @param {Object} params - Intent parameters.\r\n     * @param {String} params.xdr - A Stellar transaction in XDR format encoded in base64.\r\n     * @param {String} [params.pubkey] - Specific public key requested by the application.\r\n     * @param {String} [params.network] - Stellar network identifier or private network passphrase.\r\n     * @param {Boolean} [params.submit] - If set, the signed transaction will be submitted to the Horizon server instead of returning it to the application.\r\n     * @returns {Promise<TxIntentResult>}\r\n     */\r\n    tx(params) {\r\n        //TODO: check if txXdr is a Transaction instance and serialize it\r\n        return this.request('tx', params)\r\n    },\r\n\r\n    /**\r\n     * Requests execution of several tx intents bundled together. This intent is atomic – a user confirms or rejects all bundled requests at once, with the same account and the same Stellar network.\r\n     * @param {Object} params - Intent parameters.\r\n     * @param {String} params.intents - Requested tx intents.\r\n     * @param {String} [params.pubkey] - Specific public key requested by the application.\r\n     * @param {String} [params.network] - Stellar network identifier or private network passphrase.\r\n     * @returns {Promise<BatchIntentResult>}\r\n     */\r\n    batch(params) {\r\n        return this.request('batch', params)\r\n    },\r\n\r\n    /**\r\n     * Request an asset trustline creation.\r\n     * @param {Object} params - Intent parameters.\r\n     * @param {String} params.destination - Payment destination address.\r\n     * @param {String} params.amount - Amount to pay.\r\n     * @param {String} [params.asset_code] - [Optional] Asset code (if not set XLM is implied).\r\n     * @param {String} [params.asset_issuer] - [Optional] Asset issuer (if not set XLM is implied).\r\n     * @param {String} [params.memo] - [Optional] Memo to be included in the payment.\r\n     * @param {('MEMO_TEXT' | 'MEMO_ID' | 'MEMO_HASH' | 'MEMO_RETURN')} [params.memo_type] - [Optional] Memo type to be included in the payment.\r\n     * @param {String} [params.pubkey] - Specific public key requested by the application.\r\n     * @param {String} [params.network] - Stellar network identifier or private network passphrase.\r\n     * @param {Boolean} [params.submit] - If set, the signed transaction will be submitted to the Horizon server instead of returning it to the application.\r\n     * @returns {Promise<PayIntentResult>}\r\n     */\r\n    pay(params) {\r\n        return this.request('pay', params)\r\n    },\r\n\r\n    /**\r\n     * Request an asset trustline creation.\r\n     * @param {Object} params - Intent parameters.\r\n     * @param {String} params.asset_code - Asset code.\r\n     * @param {String} params.asset_issuer - Asset account issuer.\r\n     * @param {String} [params.limit] - [Optional] Trustline limit.\r\n     * @param {String} [params.pubkey] - Specific public key requested by the application.\r\n     * @param {String} [params.network] - Stellar network identifier or private network passphrase.\r\n     * @param {Boolean} [params.submit] - If set, the signed transaction will be submitted to the Horizon server instead of returning it to the application.\r\n     * @returns {Promise<TrustIntentResult>}\r\n     */\r\n    trust(params) {\r\n        return this.request('trust', params)\r\n    },\r\n\r\n    /**\r\n     * Request token exchange on Stellar DEX.\r\n     * @param {Object} params - Intent parameters.\r\n     * @param {String} params.destination - Payment destination address.\r\n     * @param {String} params.amount - Amount to pay.\r\n     * @param {String} params.max_price - Maximum price to pay.\r\n     * @param {String} [params.sell_asset_code] - [Optional] Selling asset code (if not set XLM is implied).\r\n     * @param {String} [params.sell_asset_issuer] - [Optional] Selling asset issuer (if not set XLM is implied).\r\n     * @param {String} [params.buy_asset_code] - [Optional] Selling asset code (if not set XLM is implied).\r\n     * @param {String} [params.buy_asset_issuer] - [Optional] Selling asset issuer (if not set XLM is implied).\r\n     * @return {Promise<ExchangeIntentResult>}\r\n     */\r\n    exchange(params) {\r\n        return this.request('exchange', params)\r\n    },\r\n\r\n    /**\r\n     * Request arbitrary data signing.\r\n     * @param {Object} params - Intent parameters.\r\n     * @param {String} params.message - Text message to sign.\r\n     * @param {String} [params.pubkey] - Specific public key requested by the application.\r\n     * @returns {Promise<SignMessageIntentResult>}\r\n     */\r\n    signMessage(params) {\r\n        params = Object.assign({}, params, {message: normalizeMessageToSign(params.message)})\r\n        return this.request('sign_message', params)\r\n    },\r\n\r\n    /**\r\n     * Open account settings window for a given account.\r\n     * @param {Object} params - Intent parameters.\r\n     * @param {String} params.pubkey - Specific public key requested by the application.\r\n     * @param {String} [params.network] - Stellar network identifier or private network passphrase.\r\n     * @returns {Promise<ManageAccountIntentResult>}\r\n     */\r\n    manageAccount(params) {\r\n        return this.request('manage_account', params)\r\n    },\r\n\r\n    /**\r\n     * Generate random token that can be used for authentication or encryption\r\n     * @return {String}\r\n     */\r\n    generateRandomToken() {\r\n        return generateRandomToken()\r\n    },\r\n\r\n    /**\r\n     * Check whether an implicit session exists for a given intent and pubkey.\r\n     * @param {String} intent\r\n     * @param {String} pubkey\r\n     * @return {boolean}\r\n     */\r\n    isImplicitSessionAllowed(intent, pubkey) {\r\n        return !!getImplicitSession(intent, pubkey)\r\n    },\r\n\r\n    /**\r\n     * Enumerate all currently active implicit sessions.\r\n     * @returns {Array<{pubkey: String, session: String, valid_until: Number, grants: Array<String>}>}\r\n     */\r\n    listImplicitSessions() {\r\n        return getAllImplicitSessions()\r\n    },\r\n\r\n    /**\r\n     * Revoke session permission granted for an account.\r\n     * @param {String} pubkey\r\n     */\r\n    forgetImplicitSession(pubkey) {\r\n        forgetSession(pubkey)\r\n    }\r\n}\r\n\r\n/**\r\n * Normalize a message before sending it to the signing endpoint.\r\n * @param {String} message - Message to normalize.\r\n * @returns {String}\r\n */\r\nfunction normalizeMessageToSign(message) {\r\n    switch (typeof message) {\r\n        case 'string':\r\n            return message\r\n        case 'undefined':\r\n            return ''\r\n    }\r\n    return JSON.stringify(message)\r\n}\r\n\r\nconst albedo = new AlbedoIntent()\r\nalbedo.default = albedo\r\n\r\nbindWebStellarLinkHandler(albedo)\r\n\r\nexport {intentInterface, intentErrors}\r\n\r\nexport default albedo", "export function generateRandomToken() {\r\n    const rn = new Uint32Array(4)\r\n    if (typeof crypto !== 'undefined' && crypto.getRandomValues) {\r\n        crypto.getRandomValues(rn)\r\n    } else {\r\n        for (let i = 0; i < rn.length; i++) {\r\n            rn[i] = Math.floor(Math.random() * 4294967295)\r\n        }\r\n    }\r\n    return Array.from(rn).map(n => n.toString(36)).join('')\r\n}", "const intentInterface = {\r\n    public_key: {\r\n        title: 'View public key',\r\n        description: 'Requests account public key. It\\'s a simple way of authentication for Stellar-based applications. The response ensures that a user owns the corresponding secret key.',\r\n        implicitFlow: false,\r\n        params: {\r\n            token: {\r\n                description: 'Verification token generated by the application (should be unique or random).',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            callback: {\r\n                description: 'Optional URL callback where Albedo will POST a signed token and public key.',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            require_existing: {\r\n                description: 'Allow existing Albedo accounts only.',\r\n                type: 'boolean',\r\n                required: false\r\n            }\r\n        },\r\n        returns: {\r\n            pubkey: {\r\n                description: 'User-selected public key.',\r\n                type: 'string'\r\n            },\r\n            signed_message: {\r\n                description: 'HEX-encoded authentication message derived from the public key and verification token.',\r\n                type: 'string'\r\n            },\r\n            signature: {\r\n                description: 'HEX-encoded ED25519 signature of the authentication message that can be further used to verify user\\'s keypair ownership.',\r\n                type: 'string'\r\n            }\r\n        }\r\n    },\r\n    sign_message: {\r\n        title: 'Sign text message',\r\n        description: 'Requests arbitrary message signing. Can be used to implement identity/ownership verification.',\r\n        implicitFlow: true,\r\n        params: {\r\n            message: {\r\n                description: 'Text message to sign.',\r\n                type: 'string',\r\n                required: true\r\n            },\r\n            pubkey: {\r\n                description: 'Specific public key requested by the application.',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            callback: {\r\n                description: 'Optional URL callback where Albedo will POST a signed message.',\r\n                type: 'string',\r\n                required: false\r\n            }\r\n        },\r\n        returns: {\r\n            pubkey: {\r\n                description: 'User-selected public key.',\r\n                type: 'string'\r\n            },\r\n            original_message: {\r\n                description: 'Text message to sign from request.',\r\n                type: 'string'\r\n            },\r\n            signed_message: {\r\n                description: 'HEX-encoded message derived from the public key and original message.',\r\n                type: 'string'\r\n            },\r\n            message_signature: {\r\n                description: 'HEX-encoded ED25519 signature of the signed message.',\r\n                type: 'string'\r\n            }\r\n        }\r\n    },\r\n    tx: {\r\n        title: 'Sign transaction',\r\n        description: 'Requests a signature for the transaction. Returns the signed transaction envelope that can be submitted to the network or used for multi-sig coordination.',\r\n        implicitFlow: true,\r\n        params: {\r\n            xdr: {\r\n                description: 'XDR-encoded transaction envelope to sign.',\r\n                type: 'string',\r\n                required: true\r\n            },\r\n            pubkey: {\r\n                description: 'Specific public key requested by the application.',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            network: {\r\n                description: 'Stellar network identifier.',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            callback: {\r\n                description: 'Optional URL callback where Albedo will POST the signed transaction XDR instead of submitting it to Horizon.',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            description: {\r\n                description: 'Optional human-friendly short transaction description provided by developers.',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            submit: {\r\n                description: 'If set, the signed transaction will be submitted to the Horizon server instead of returning it to the application.',\r\n                type: 'boolean',\r\n                required: false\r\n            }\r\n        },\r\n        returns: {\r\n            xdr: {\r\n                description: 'XDR-encoded transaction envelope from request.',\r\n                type: 'string'\r\n            },\r\n            tx_hash: {\r\n                description: 'HEX-encoded transaction hash.',\r\n                type: 'string'\r\n            },\r\n            signed_envelope_xdr: {\r\n                description: 'XDR-encoded transaction envelope with new signatures.',\r\n                type: 'string'\r\n            },\r\n            network: {\r\n                description: 'Stellar network identifier.',\r\n                type: 'string'\r\n            },\r\n            result: {\r\n                description: 'Optional response from Horizon if the transaction has been submitted automatically.',\r\n                type: 'object'\r\n            }\r\n        }\r\n    },\r\n    pay: {\r\n        title: 'Make payment',\r\n        description: 'Requests a payment from a user. Works with any Stellar asset, supports transaction memo.',\r\n        implicitFlow: true,\r\n        params: {\r\n            amount: {\r\n                description: 'Requested payment amount.',\r\n                type: 'string',\r\n                required: true\r\n            },\r\n            destination: {\r\n                description: 'Payment destination address.',\r\n                type: 'string',\r\n                required: true\r\n            },\r\n            asset_code: {\r\n                description: 'Asset code (skip for XLM).',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            asset_issuer: {\r\n                description: 'Asset issuer (skip for XLM).',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            memo: {\r\n                description: 'Transaction memo (required for exchanges and some anchors).',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            memo_type: {\r\n                description: 'Transaction memo type.',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            pubkey: {\r\n                description: 'Specific public key requested by the application.',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            network: {\r\n                description: 'Stellar network identifier or private network passphrase.',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            callback: {\r\n                description: 'Optional URL callback where Albedo will POST the signed transaction XDR instead of submitting it to Horizon. ',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            submit: {\r\n                description: 'If set, the signed transaction will be submitted to the Horizon server instead of returning it to the application.',\r\n                type: 'boolean',\r\n                required: false\r\n            }\r\n        },\r\n        returns: {\r\n            amount: {\r\n                description: 'Payment amount from request.',\r\n                type: 'string'\r\n            },\r\n            destination: {\r\n                description: 'Payment destination address from request.',\r\n                type: 'string'\r\n            },\r\n            asset_code: {\r\n                description: 'Asset code from request.',\r\n                type: 'string'\r\n            },\r\n            asset_issuer: {\r\n                description: 'Asset issuer from request.',\r\n                type: 'string'\r\n            },\r\n            memo: {\r\n                description: 'Transaction memo from request.',\r\n                type: 'string'\r\n            },\r\n            memo_type: {\r\n                description: 'Transaction memo type from request.',\r\n                type: 'string'\r\n            },\r\n            tx_hash: {\r\n                description: 'HEX-encoded transaction hash.',\r\n                type: 'string'\r\n            },\r\n            signed_envelope_xdr: {\r\n                description: 'XDR-encoded transaction envelope with new signatures.',\r\n                type: 'string'\r\n            },\r\n            pubkey: {\r\n                description: 'User-selected public key.',\r\n                type: 'string'\r\n            },\r\n            network: {\r\n                description: 'Stellar network identifier.',\r\n                type: 'string'\r\n            },\r\n            result: {\r\n                description: 'Optional response from Horizon if the transaction has been submitted automatically.',\r\n                type: 'object'\r\n            }\r\n        }\r\n    },\r\n    trust: {\r\n        title: 'Establish trustline',\r\n        description: 'Requests permission to create a trustline to a given Stellar asset. Gradually simplifies the process of creating trustlines for anchors, ICOs, and airdrops.',\r\n        implicitFlow: true,\r\n        params: {\r\n            asset_code: {\r\n                description: 'Trustline asset code.',\r\n                type: 'string',\r\n                required: true\r\n            },\r\n            asset_issuer: {\r\n                description: 'Trustline asset issuer address.',\r\n                type: 'string',\r\n                required: true\r\n            },\r\n            limit: {\r\n                description: 'Trust limit.',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            memo: {\r\n                description: 'Transaction memo (required for exchanges and some anchors).',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            memo_type: {\r\n                description: 'Transaction memo type.',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            pubkey: {\r\n                description: 'Specific public key requested by the application.',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            network: {\r\n                description: 'Stellar network identifier or private network passphrase.',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            callback: {\r\n                description: 'Optional URL callback where Albedo will POST the signed transaction XDR instead of submitting it to Horizon. ',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            submit: {\r\n                description: 'If set, the signed transaction will be submitted to the Horizon server instead of returning it to the application.',\r\n                type: 'boolean',\r\n                required: false\r\n            }\r\n        },\r\n        returns: {\r\n            asset_code: {\r\n                description: 'Trustline asset code from request.',\r\n                type: 'string'\r\n            },\r\n            asset_issuer: {\r\n                description: 'Trustline asset issuer address from request.',\r\n                type: 'string'\r\n            },\r\n            limit: {\r\n                description: 'Trust limit from request.',\r\n                type: 'string'\r\n            },\r\n            tx_hash: {\r\n                description: 'HEX-encoded transaction hash.',\r\n                type: 'string'\r\n            },\r\n            signed_envelope_xdr: {\r\n                description: 'XDR-encoded transaction envelope with new signatures.',\r\n                type: 'string'\r\n            },\r\n            pubkey: {\r\n                description: 'User-selected public key.',\r\n                type: 'string'\r\n            },\r\n            network: {\r\n                description: 'Stellar network identifier.',\r\n                type: 'string'\r\n            },\r\n            result: {\r\n                description: 'Optional response from Horizon if the transaction has been submitted automatically.',\r\n                type: 'object'\r\n            }\r\n        }\r\n    },\r\n    exchange: {\r\n        title: 'Swap tokens',\r\n        description: 'Requests permission to buy tokens on Stellar DEX at market price.',\r\n        implicitFlow: false,\r\n        params: {\r\n            amount: {\r\n                description: 'The amount of asset to buy.',\r\n                type: 'string',\r\n                required: true\r\n            },\r\n            max_price: {\r\n                description: 'Maximum price the user willing to pay.',\r\n                type: 'string',\r\n                required: true\r\n            },\r\n            sell_asset_code: {\r\n                description: 'Asset code of the asset to sell.',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            sell_asset_issuer: {\r\n                description: 'Issuer account of the asset to sell.',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            buy_asset_code: {\r\n                description: 'Asset code of the asset to buy.',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            buy_asset_issuer: {\r\n                description: 'Issuer account of the asset to buy.',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            memo: {\r\n                description: 'Transaction memo (required for exchanges and some anchors).',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            memo_type: {\r\n                description: 'Transaction memo type.',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            pubkey: {\r\n                description: 'Specific public key requested by the application.',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            network: {\r\n                description: 'Stellar network identifier or private network passphrase.',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            callback: {\r\n                description: 'Optional URL callback where Albedo will POST the signed transaction XDR instead of submitting it to Horizon.',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            submit: {\r\n                description: 'If set, the signed transaction will be submitted to the Horizon server instead of returning it to the application.',\r\n                type: 'boolean',\r\n                required: false\r\n            }\r\n        },\r\n        returns: {\r\n            amount: {\r\n                description: 'The amount of asset to buy from request.',\r\n                type: 'string'\r\n            },\r\n            max_price: {\r\n                description: 'Maximum price the user willing to pay from request.',\r\n                type: 'string'\r\n            },\r\n            sell_asset_code: {\r\n                description: 'Asset code of the asset to sell from request.',\r\n                type: 'string'\r\n            },\r\n            sell_asset_issuer: {\r\n                description: 'Issuer account of the asset to sell from request.',\r\n                type: 'string'\r\n            },\r\n            buy_asset_code: {\r\n                description: 'Asset code of the asset to buy from request.',\r\n                type: 'string'\r\n            },\r\n            buy_asset_issuer: {\r\n                description: 'Issuer account of the asset to buy from request.',\r\n                type: 'string'\r\n            },\r\n            tx_hash: {\r\n                description: 'HEX-encoded transaction hash.',\r\n                type: 'string'\r\n            },\r\n            signed_envelope_xdr: {\r\n                description: 'XDR-encoded transaction envelope with new signatures.',\r\n                type: 'string'\r\n            },\r\n            pubkey: {\r\n                description: 'User-selected public key.',\r\n                type: 'string'\r\n            },\r\n            network: {\r\n                description: 'Stellar network identifier.',\r\n                type: 'string'\r\n            },\r\n            result: {\r\n                description: 'Optional response from Horizon if the transaction has been submitted automatically.',\r\n                type: 'object'\r\n            }\r\n        }\r\n    },\r\n    implicit_flow: {\r\n        title: 'Implicit permissions',\r\n        description: 'Requests temporary access token for one or more intents that can be used to execute actions without explicit confirmation from the user. In order to be executed implicitly, an implicit flow permissions for a given intent should be granted and \"pubkey\" parameter set.',\r\n        implicitFlow: false,\r\n        params: {\r\n            intents: {\r\n                description: 'Requested implicit flow intents.',\r\n                type: 'string|string[]',\r\n                required: true\r\n            },\r\n            network: {\r\n                description: 'Stellar network identifier or private network passphrase.',\r\n                type: 'string',\r\n                required: false\r\n            }\r\n        },\r\n        returns: {\r\n            granted: {\r\n                description: 'Whether a user granted permissions or not.',\r\n                type: 'boolean'\r\n            },\r\n            intents: {\r\n                description: 'Requested implicit flow intents.',\r\n                type: 'string[]'\r\n            },\r\n            grants: {\r\n                description: 'Implicit flow intents that have been granted.',\r\n                type: 'string[]'\r\n            },\r\n            session: {\r\n                description: 'Unique implicit session id.',\r\n                type: 'string'\r\n            },\r\n            valid_until: {\r\n                description: 'Session expiration timestamp.',\r\n                type: 'number'\r\n            },\r\n            pubkey: {\r\n                description: 'User-selected public key.',\r\n                type: 'string'\r\n            },\r\n            network: {\r\n                description: 'Stellar network identifier.',\r\n                type: 'string'\r\n            }\r\n        }\r\n    },\r\n    manage_account: {\r\n        title: 'Open account settings',\r\n        description: 'Opens account settings window for a given account.',\r\n        implicitFlow: false,\r\n        params: {\r\n            pubkey: {\r\n                description: 'Specific public key requested by the application.',\r\n                type: 'string',\r\n                required: true\r\n            },\r\n            network: {\r\n                description: 'Stellar network identifier or private network passphrase.',\r\n                type: 'string',\r\n                required: false\r\n            }\r\n        },\r\n        returns: {\r\n            pubkey: {\r\n                description: 'Public key from intent request.',\r\n                type: 'string'\r\n            }\r\n        }\r\n    },\r\n    batch: {\r\n        title: 'Intents batch',\r\n        description: 'Requests execution of several tx intents bundled together. This intent is atomic – a user confirms or rejects all bundled requests at once, with the same account and the same Stellar network.',\r\n        implicitFlow: true,\r\n        params: {\r\n            intents: {\r\n                description: 'Requested tx intents that should be executed together.',\r\n                type: 'object[]',\r\n                required: true\r\n            },\r\n            pubkey: {\r\n                description: 'Specific public key requested by the application.',\r\n                type: 'string',\r\n                required: false\r\n            },\r\n            network: {\r\n                description: 'Stellar network identifier or private network passphrase.',\r\n                type: 'string',\r\n                required: false\r\n            }\r\n        },\r\n        returns: {\r\n            intents: {\r\n                description: 'Requested tx intents.',\r\n                type: 'object[]'\r\n            },\r\n            results: {\r\n                description: 'Array of results for each requested intent.',\r\n                type: 'object[]'\r\n            },\r\n            pubkey: {\r\n                description: 'User-selected public key.',\r\n                type: 'string'\r\n            },\r\n            network: {\r\n                description: 'Stellar network identifier.',\r\n                type: 'string'\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default intentInterface\r\n", "const intentErrors = {\r\n    unhandledError: {\r\n        message: 'Unhandled error occurred. If this error persists, please contact Albedo support.',\r\n        code: -1\r\n    },\r\n    externalError: {\r\n        message: 'External error occurred.',\r\n        code: -2\r\n    },\r\n    invalidIntentRequest: {\r\n        message: 'Intent request is invalid.',\r\n        code: -3\r\n    },\r\n    actionRejectedByUser: {\r\n        message: 'Action request was rejected by the user.',\r\n        code: -4\r\n    },\r\n    horizonError: {\r\n        message: 'Transaction failed when submitted to Stellar network.',\r\n        code: -5\r\n    },\r\n    callbackError: {\r\n        message: 'Callback redirect failed.',\r\n        code: -6\r\n    }\r\n}\r\n\r\nexport default intentErrors", "import intentInterface from './intent-interface'\r\nimport intentErrors from './intent-errors'\r\nimport {createDialogTransport, createIframeTransport} from './transport-builder'\r\nimport {getImplicitSession, saveImplicitSession} from './implicit-session-storage'\r\n\r\nfunction intentError(msg) {\r\n    return Object.assign(new Error(), intentErrors.invalidIntentRequest, {ext: msg})\r\n}\r\n\r\n/**\r\n * Request user's confirmation for the specified action.\r\n * @param {Object} params - Intent parameters.\r\n * @param {String} frontendUrl - URL of the Albedo frontend.\r\n * @return {Promise}\r\n */\r\nexport function requestIntentConfirmation(params, frontendUrl) {\r\n    try {\r\n        const {intent} = params\r\n        //intent should be present\r\n        if (!intent)\r\n            throw intentError('Parameter \"intent\" is required.')\r\n        const intentDescriptor = intentInterface[intent]\r\n        //check interface compliance\r\n        if (!intentDescriptor)\r\n            throw intentError(`Unknown intent: \"${intent}\".`)\r\n        //build request data\r\n        const requestParams = prepareRequestParams(intentDescriptor, params)\r\n        //create transport and dispatch request\r\n        return prepareTransport(requestParams, frontendUrl)\r\n            //dispatch intent request\r\n            .then(transport => sendRequest(requestParams, transport))\r\n    } catch (e) {\r\n        const {code = -1, message, ext} = e,\r\n            res = {message, code}\r\n        if (ext) {\r\n            res.ext = ext\r\n        }\r\n        return Promise.reject(res)\r\n    }\r\n}\r\n\r\n/**\r\n * Create/retrieve an appropriate window transport for given intent params.\r\n * @param {Object} params - Intent params provided by the third-party app.\r\n * @param {String} frontendUrl - URL of the Albedo website.\r\n * @return {TransportHandler}\r\n */\r\nfunction prepareTransport(params, frontendUrl) {\r\n    //check if intent supports implicit flow and the permission was granted to the app\r\n    if (params.pubkey) {\r\n        const session = getImplicitSession(params.intent, params.pubkey)\r\n        if (session) {\r\n            params.session = session.key\r\n            //implicit session can be executed without a dialog window\r\n            return createIframeTransport(frontendUrl)\r\n        }\r\n    }\r\n    //create iframe transport in advance if the implicit flow has been requested\r\n    setTimeout(() => {\r\n        if (params.intent === 'implicit_flow') {\r\n            createIframeTransport(frontendUrl)\r\n        }\r\n    }, 200)\r\n    //create dialog window transport if only interactive authorization flow is available\r\n    return createDialogTransport(frontendUrl)\r\n}\r\n\r\n/**\r\n * Send confirmation request for a specific intent using a suitable transport.\r\n * @param {Object} params - Intent params provided by the third-party app.\r\n * @param {TransportHandler} transport - PostMessage transport window handler.\r\n * @return {Promise<Object>}\r\n */\r\nfunction sendRequest(params, transport) {\r\n    return transport.postMessage(params)\r\n        .then(result => {\r\n            //handle implicit session grant response if any\r\n            if (result.intent === 'implicit_flow' && result.granted) {\r\n                //save implicit session to the internal session storage\r\n                saveImplicitSession(result)\r\n            }\r\n            return result\r\n        })\r\n}\r\n\r\n/**\r\n * Pre-process request params provided by the third-party app.\r\n * @param {Object} intentDescriptor - Requested intent descriptor - contains the list of available params.\r\n * @param {Object} params - Intent params provided by the third-party app.\r\n * @return {Object}\r\n */\r\nfunction prepareRequestParams(intentDescriptor, params) {\r\n    //validate parameters\r\n    if (typeof params !== 'object')\r\n        throw intentError('Intent parameters expected.')\r\n    const {intent, pubkey} = params,\r\n        requestParams = {intent}\r\n    //basic account public key validation\r\n    if (pubkey && !/^G[0-9A-Z]{55}$/.test(pubkey))\r\n        throw intentError('Invalid \"pubkey\" parameter. Stellar account public key expected.')\r\n    //check required params\r\n    for (const key in intentDescriptor.params) {\r\n        const props = intentDescriptor.params[key],\r\n            value = params[key]\r\n        if (value) {\r\n            requestParams[key] = value\r\n        } else if (props.required) {\r\n            throw intentError(`Parameter \"${key}\" is required for intent \"${intent}\".`)\r\n        }\r\n    }\r\n    return requestParams\r\n}", "import TransportHandler from './transport-handler'\r\n\r\n/**\r\n * Create explicit dialog window transport.\r\n * @param {String} frontendUrl - URL of the Albedo frontend.\r\n * @return {TransportHandler}\r\n */\r\nfunction createDialogTransport(frontendUrl) {\r\n    const url = `${frontendUrl}/confirm`,\r\n        w = 480,\r\n        h = 600,\r\n        // Fixes dual-screen position                         Most browsers      Firefox\r\n        dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX,\r\n        dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY,\r\n        currentWindowWidth = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width,\r\n        currentWindowHeight = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height,\r\n        left = ((currentWindowWidth / 2) - (w / 2)) + dualScreenLeft,\r\n        top = ((currentWindowHeight / 2) - (h / 2)) + dualScreenTop\r\n\r\n    const dialogWindow = window.open(url, 'auth.albedo.link', `height=${h},width=${w},top=${top},left=${left},menubar=0,toolbar=0,location=0,status=0,personalbar=0,scrollbars=0,dependent=1`)\r\n    return new TransportHandler(dialogWindow, true).onLoaded\r\n}\r\n\r\nlet sharedIframeTransport = null\r\n\r\n/**\r\n * Create implicit transport based on hidden iframe.\r\n * @param {String} frontendUrl - URL of the Albedo frontend.\r\n * @return {TransportHandler}\r\n */\r\nfunction createIframeTransport(frontendUrl) {\r\n    //check if already initialized\r\n    if (!sharedIframeTransport) {\r\n        const iframe = document.createElement('iframe')\r\n        iframe.style.border = 'none'\r\n        Object.assign(iframe, {\r\n            width: '0',\r\n            height: '0',\r\n            frameBorder: '0',\r\n            referrerPolicy: 'origin',\r\n            src: `${frontendUrl}`\r\n        })\r\n        document.body.appendChild(iframe)\r\n        sharedIframeTransport = new TransportHandler(iframe.contentWindow)\r\n    }\r\n    return sharedIframeTransport.onLoaded\r\n}\r\n\r\nexport {createDialogTransport, createIframeTransport}", "import {generateRandomToken} from './random-token-generator'\r\nimport intentErrors from './intent-errors'\r\n\r\n/**\r\n * Create transport handler for a given window|iframe and establish communication channel.\r\n * @param {Window} targetWindow - Transport window|iframe reference.\r\n * @param {Boolean} ephemeral - If set to true, automatically closes the window opened after receiving the response.\r\n */\r\nfunction TransportHandler(targetWindow, ephemeral = false) {\r\n    this.windowHandler = targetWindow\r\n    this.ephemeral = !!ephemeral\r\n    this.isLoaded = false\r\n    this.pendingRequests = {}\r\n    this.preprocessRequestParams = null\r\n    this.onLoaded = new Promise((resolve, reject) => this.onLoadedCallback = resolve).then(() => this)\r\n    this.messageHandler = this.messageHandler.bind(this)\r\n    window.addEventListener('message', this.messageHandler, false)\r\n}\r\n\r\nTransportHandler.prototype = {\r\n\r\n    isLoaded: false,\r\n\r\n    protocolVersion: 3,\r\n\r\n    markLoaded() {\r\n        const {onLoadedCallback} = this\r\n        if (onLoadedCallback) {\r\n            this.onLoadedCallback = null\r\n            this.isLoaded = true\r\n            onLoadedCallback()\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Handler for incoming communication messages processing.\r\n     * @param {Object} data - Received data.\r\n     */\r\n    messageHandler({data}) {\r\n        if (data.albedo) {\r\n            this.matchProtocolVersion(data.albedo.protocol)\r\n            return this.markLoaded()\r\n        }\r\n        if (data.albedoIntentResult) {\r\n            const {__reqid, ...result} = data.albedoIntentResult,\r\n                pending = this.pendingRequests[__reqid]\r\n            if (pending) {\r\n                delete this.pendingRequests[__reqid]\r\n                pending(result)\r\n                if (this.ephemeral) {\r\n                    window.removeEventListener('message', this.messageHandler, false)\r\n                    this.windowHandler.close()\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Handler for the transport window close event.\r\n     */\r\n    transportCloseHandler() {\r\n        for (let key in this.pendingRequests)\r\n            if (this.pendingRequests.hasOwnProperty(key)) {\r\n                const pending = this.pendingRequests[key]\r\n                delete this.pendingRequests[key]\r\n                pending(intentErrors.actionRejectedByUser)\r\n            }\r\n    },\r\n\r\n    /**\r\n     * Request intent confirmation using current transport.\r\n     * @param {Object} params - Intent request params.\r\n     * @return {Promise}\r\n     */\r\n    postMessage(params) {\r\n        const nonce = generateRandomToken()\r\n        return new Promise((resolve, reject) => {\r\n            this.onLoaded.then(() => {\r\n                this.pendingRequests[nonce] = handleIntentResponsePromise.bind(this, resolve, reject)\r\n                params = Object.assign({__reqid: nonce, __albedo_intent_version: this.protocolVersion}, params)\r\n                if (this.preprocessRequestParams) {\r\n                    params = this.preprocessRequestParams(params)\r\n                }\r\n                this.windowHandler.postMessage(params, '*')\r\n            })\r\n        })\r\n    },\r\n\r\n    /**\r\n     * Check protocol version compatibility.\r\n     * @param {Number} albedoProtocolVersion\r\n     */\r\n    matchProtocolVersion(albedoProtocolVersion) {\r\n        const versionDif = albedoProtocolVersion - this.protocolVersion\r\n        if (versionDif === 0) return //everything is good\r\n        const error = `@albedo-link/intent module protocol version (${this.protocolVersion}) is incompatible with current Albedo protocol version ${albedoProtocolVersion}.`\r\n        if (versionDif > 0) {\r\n            console.warn(error + ' Please update @albedo-link/intent module to avoid possible connection problems.')\r\n        } else if (versionDif < 0) {\r\n            this.windowHandler.close()\r\n            throw new Error(error)\r\n        }\r\n    }\r\n}\r\n\r\nfunction handleIntentResponsePromise(resolve, reject, res) {\r\n    if (res.error) {\r\n        reject(res)\r\n    } else {\r\n        resolve(res)\r\n    }\r\n}\r\n\r\nexport default TransportHandler\r\n", "import ImplicitSession from './implicit-session'\r\n\r\nconst storagePrefix = 'albedo_session_',\r\n    implicitSessions = {}\r\n\r\nfunction getStorage() {\r\n    return window.sessionStorage\r\n}\r\n\r\n/**\r\n * Whether to save the session to the browser internal session storage - allows sharing of session data\r\n * between multiple browser tabs but potentially is less secure than the local variable storage.\r\n * @type {boolean}\r\n */\r\nconst saveToBrowserStorage = true\r\n\r\nexport function saveImplicitSession(intentResult) {\r\n    const session = new ImplicitSession(intentResult)\r\n    if (!saveToBrowserStorage) {\r\n        implicitSessions[session.pubkey] = session\r\n    } else {\r\n        getStorage().setItem(storagePrefix + session.pubkey, JSON.stringify(session))\r\n    }\r\n}\r\n\r\nfunction retrieveSessionFromStorage(pubkey) {\r\n    let session\r\n    if (!saveToBrowserStorage) {\r\n        session = implicitSessions[pubkey]\r\n    } else {\r\n        const restored = getStorage().getItem(storagePrefix + pubkey)\r\n        if (restored) {\r\n            session = new ImplicitSession(JSON.parse(restored))\r\n        }\r\n    }\r\n    if (!session) return null\r\n    if (session.isExpired) {\r\n        forgetSession(pubkey)\r\n        return null\r\n    }\r\n    return session\r\n}\r\n\r\n/**\r\n * Find active implicit session by intent and pubkey.\r\n * @param {String} intent - Intent code.\r\n * @param {String} pubkey - Public key associated with the session.\r\n * @return {ImplicitSession|null}\r\n */\r\nexport function getImplicitSession(intent, pubkey) {\r\n    const session = retrieveSessionFromStorage(pubkey)\r\n    if (!session || !session.grants.includes(intent)) return null\r\n    return session\r\n}\r\n\r\n/**\r\n * Retrieve all active sessions.\r\n * @return {Array<ImplicitSession>}\r\n */\r\nexport function getAllImplicitSessions() {\r\n    const storage = getStorage()\r\n    return Object.keys(storage)\r\n        .filter(key => key.indexOf(storagePrefix) === 0)\r\n        .map(key => retrieveSessionFromStorage(key.substr(storagePrefix.length)))\r\n        .filter(session => !!session)\r\n}\r\n\r\n/**\r\n * Remove an explicit session handler from the storage.\r\n * @param {String} pubkey - Public key associated with the session.\r\n */\r\nexport function forgetSession(pubkey) {\r\n    if (!saveToBrowserStorage) {\r\n        delete implicitSessions[pubkey]\r\n    } else {\r\n        getStorage().removeItem(storagePrefix + pubkey)\r\n    }\r\n}", "function ImplicitSession({session, pubkey, grants, valid_until}) {\r\n    this.key = session\r\n    this.pubkey = pubkey\r\n    this.grants = grants.slice()\r\n    this.validUntil = valid_until\r\n    //prevent accidental changes\r\n    Object.freeze(this)\r\n    Object.freeze(this.grants)\r\n}\r\n\r\nImplicitSession.prototype = {\r\n    /**\r\n     * Unique session key.\r\n     * @type {String}\r\n     */\r\n    key: '',\r\n\r\n    /**\r\n     * Public key of the key pair used to authorize the session.\r\n     * @type {String}\r\n     */\r\n    pubkey: '',\r\n\r\n    /**\r\n     * Granted permissions.\r\n     * @type {Array<String>}\r\n     */\r\n    grants: [],\r\n\r\n    /**\r\n     * Time-to-live.\r\n     * @type {Number}\r\n     */\r\n    validUntil: 0,\r\n\r\n    /**\r\n     * Check whether the session is expired or not.\r\n     * @return {boolean}\r\n     */\r\n    get isExpired() {\r\n        //2 seconds reserve\r\n        return this.validUntil - 2000 < new Date().getTime()\r\n    },\r\n\r\n    toJSON() {\r\n        return {\r\n            session: this.key,\r\n            pubkey: this.pubkey,\r\n            grants: this.grants.slice(),\r\n            valid_until: this.validUntil\r\n        }\r\n    }\r\n}\r\n\r\nexport default ImplicitSession", "function parseQuery(query = null) {\r\n    if (query === null) {\r\n        query = window.location.search\r\n    }\r\n    if (query[0] === '?') query = query.substr(1)\r\n    const dest = {}\r\n    for (let kv of query.split('&')) {\r\n        const [key, value] = kv.split('=').map(v => decodeURIComponent(v))\r\n        dest[key] = value\r\n    }\r\n    return dest\r\n}\r\n\r\nexport function bindWebStellarLinkHandler(albedoIntent) {\r\n    if (typeof (document) === 'undefined' || !document.addEventListener) return\r\n    document.addEventListener('click', function sep0007Handler(e) {\r\n        //we are only interested in links with \"web+stellar\" protocol\r\n        if (e.target.tagName !== 'A' || (e.target.href || '').indexOf('web+stellar:') !== 0) return\r\n        e.preventDefault()\r\n        e.stopImmediatePropagation()\r\n        const {pathname: intentName, search} = new URL(e.target.href)\r\n        if (!['tx', 'pay'].includes(intentName)) {\r\n            alert(`Invalid operation requested: ${intentName}. It's likely an external application error. Please contact support team of ${window.location.origin}.`)\r\n            return\r\n        }\r\n\r\n        const params = parseQuery(search)\r\n        albedoIntent.request(intentName, params)\r\n    }, false)\r\n}\r\n", "import albedo from '@albedo-link/intent';\n\nimport { ModuleInterface, ModuleType, WalletNetwork } from '../types';\nimport { parseError } from '../utils';\n\nexport const ALBEDO_ID = 'albedo';\n\nexport class AlbedoModule implements ModuleInterface {\n  moduleType: ModuleType = ModuleType.HOT_WALLET;\n\n  productId: string = ALBEDO_ID;\n  productName: string = 'Albedo';\n  productUrl: string = 'https://albedo.link/';\n  productIcon: string = 'https://stellar.creit.tech/wallet-icons/albedo.png';\n\n  async isAvailable(): Promise<boolean> {\n    return true;\n  }\n\n  async getAddress(): Promise<{ address: string }> {\n    return albedo\n      .publicKey({})\n      .then(result => ({ address: result.pubkey }))\n      .catch(e => {\n        throw parseError(e);\n      });\n  }\n\n  async signTransaction(\n    xdr: string,\n    opts?: {\n      networkPassphrase?: string;\n      address?: string;\n      path?: string;\n      submit?: boolean;\n      submitUrl?: string;\n    }\n  ): Promise<{ signedTxXdr: string; signerAddress?: string }> {\n    return albedo\n      .tx({\n        xdr,\n        pubkey: opts?.address,\n        network: opts?.networkPassphrase\n          ? opts.networkPassphrase === WalletNetwork.PUBLIC\n            ? AlbedoNetwork.PUBLIC\n            : AlbedoNetwork.TESTNET\n          : undefined,\n      })\n      .then(({ signed_envelope_xdr }) => ({\n        signedTxXdr: signed_envelope_xdr,\n        signerAddress: opts?.address,\n      }))\n      .catch(e => {\n        throw parseError(e);\n      });\n  }\n\n  async signAuthEntry(): Promise<{ signedAuthEntry: string; signerAddress?: string }> {\n    throw {\n      code: -3,\n      message: 'Albedo does not support the \"signAuthEntry\" function',\n    };\n  }\n\n  /**\n   * We understand that Albedo has a method to sign a message, but that method is not compatible with SEP-0043\n   */\n  async signMessage(): Promise<{ signedMessage: string; signerAddress?: string }> {\n    throw {\n      code: -3,\n      message: 'Albedo does not support the \"signMessage\" function',\n    };\n  }\n\n  async getNetwork(): Promise<{ network: string; networkPassphrase: string }> {\n    throw {\n      code: -3,\n      message: 'Albedo does not support the \"getNetwork\" function',\n    };\n  }\n}\n\nexport enum AlbedoNetwork {\n  PUBLIC = 'public',\n  TESTNET = 'testnet',\n}\n", "import {\n  isConnected,\n  signTransaction,\n  signAuthEntry,\n  requestAccess,\n  signMessage,\n  getNetwork,\n  getAddress,\n} from '@stellar/freighter-api';\nimport { ModuleInterface, ModuleType } from '../types';\nimport { parseError } from '../utils';\nimport { Buffer } from 'buffer';\n\ndeclare const window: Window &\n  typeof globalThis & {\n  stellar?: {\n    provider: string;\n    platform: string;\n    version: string;\n  };\n};\n\nexport const FREIGHTER_ID = 'freighter';\n\nexport class FreighterModule implements ModuleInterface {\n  moduleType: ModuleType = ModuleType.HOT_WALLET;\n\n  productId: string = FREIGHTER_ID;\n  productName: string = 'Freighter';\n  productUrl: string = 'https://freighter.app';\n  productIcon: string = 'https://stellar.creit.tech/wallet-icons/freighter.png';\n\n  async runChecks(): Promise<void> {\n    if (!(await this.isAvailable())) {\n      throw new Error('Freighter is not connected');\n    }\n  }\n\n  async isAvailable(): Promise<boolean> {\n    // If these values are set it means we are loading the module from the Freighter's mobile version and so we need to\n    // use WalletConnect instead.\n    if (window.stellar?.provider === 'freighter' && window.stellar?.platform === 'mobile') return false;\n\n    return isConnected()\n      .then(({ isConnected, error }) => !error && isConnected)\n      .catch((): boolean => false);\n  }\n\n  async getAddress(params: { skipRequestAccess?: boolean }): Promise<{ address: string }> {\n    return this.runChecks()\n      .then(async () => {\n        if (params?.skipRequestAccess) return true;\n        return requestAccess();\n      })\n      .then(() => getAddress())\n      .then(({ address, error }) => {\n        if (error) throw error;\n        if (!address) throw {\n          code: -3,\n          message: 'Getting the address is not allowed, please request access first.',\n        };\n\n        return { address };\n      })\n      .catch(e => {\n        throw parseError(e);\n      });\n  }\n\n  async signTransaction(\n    xdr: string,\n    opts?: {\n      networkPassphrase?: string;\n      address?: string;\n      path?: string;\n      submit?: boolean;\n      submitUrl?: string;\n    }\n  ): Promise<{ signedTxXdr: string; signerAddress?: string }> {\n    return this.runChecks()\n      .then(async () => {\n        const { signedTxXdr, signerAddress, error } = await signTransaction(xdr, {\n          address: opts?.address,\n          networkPassphrase: opts?.networkPassphrase,\n        });\n\n        if (error) throw error;\n\n        return { signedTxXdr, signerAddress: signerAddress };\n      })\n      .catch(e => {\n        throw parseError(e);\n      });\n  }\n\n  async signAuthEntry(\n    authEntry: string,\n    opts?: {\n      networkPassphrase?: string;\n      address?: string;\n      path?: string;\n    }\n  ): Promise<{ signedAuthEntry: string; signerAddress?: string }> {\n    return this.runChecks()\n      .then(async () => {\n        const { signedAuthEntry, signerAddress, error } = await signAuthEntry(authEntry, {\n          address: opts?.address,\n          networkPassphrase: opts?.networkPassphrase,\n        });\n\n        if (error || !signedAuthEntry) throw error;\n\n        return { signedAuthEntry: Buffer.from(signedAuthEntry).toString('base64'), signerAddress: signerAddress };\n      })\n      .catch(e => {\n        throw parseError(e);\n      });\n  }\n\n  async signMessage(\n    message: string,\n    opts?: {\n      networkPassphrase?: string;\n      address?: string;\n      path?: string;\n    }\n  ): Promise<{ signedMessage: string; signerAddress?: string }> {\n    return this.runChecks()\n      .then(async () => {\n        const { signedMessage, signerAddress, error } = await signMessage(message, {\n          address: opts?.address,\n          networkPassphrase: opts?.networkPassphrase,\n        });\n\n        if (error || !signedMessage) throw error;\n\n        return {\n          signedMessage: typeof signedMessage === 'string'\n            ? signedMessage\n            : Buffer.from(signedMessage).toString('base64'),\n          signerAddress: signerAddress\n        };\n      })\n      .catch(e => {\n        throw parseError(e);\n      });\n  }\n\n  async getNetwork(): Promise<{ network: string; networkPassphrase: string }> {\n    return this.runChecks()\n      .then(async () => {\n        const { network, networkPassphrase, error } = await getNetwork();\n\n        if (error) throw error;\n\n        return { network, networkPassphrase };\n      })\n      .catch(e => {\n        throw parseError(e);\n      });\n  }\n}\n", "import { isConnected, getPublicKey, signTransaction } from '@lobstrco/signer-extension-api';\nimport { ModuleInterface, ModuleType } from '../types';\nimport { parseError } from '../utils';\n\nexport const LOBSTR_ID = 'lobstr';\n\nexport class LobstrModule implements ModuleInterface {\n  moduleType: ModuleType = ModuleType.HOT_WALLET;\n\n  productId: string = LOBSTR_ID;\n  productName: string = 'LOBSTR';\n  productUrl: string = 'https://lobstr.co';\n  productIcon: string = 'https://stellar.creit.tech/wallet-icons/lobstr.png';\n\n  async isAvailable(): Promise<boolean> {\n    return isConnected();\n  }\n\n  async getAddress(): Promise<{ address: string }> {\n    const runChecks = async () => {\n      if (!(await isConnected())) {\n        throw new Error(`Lobstr is not connected`);\n      }\n    };\n\n    return runChecks()\n      .then(() => getPublicKey())\n      .then(address => ({ address }))\n      .catch(e => {\n        throw parseError(e);\n      });\n  }\n\n  async signTransaction(\n    xdr: string,\n    opts?: {\n      networkPassphrase?: string;\n      address?: string;\n      path?: string;\n      submit?: boolean;\n      submitUrl?: string;\n    }\n  ): Promise<{ signedTxXdr: string; signerAddress?: string }> {\n    const runChecks = async () => {\n      if (!(await isConnected())) {\n        throw new Error(`Lobstr is not connected`);\n      }\n\n      if (opts?.address) {\n        console.warn(`Lobstr doesn't allow specifying what public key should sign the transaction, we skip the value`);\n      }\n\n      if (opts?.networkPassphrase) {\n        console.warn(`Lobstr doesn't allow specifying the network that should be used, we skip the value`);\n      }\n    };\n\n    return runChecks()\n      .then(() => signTransaction(xdr))\n      .then(signedTxXdr => ({ signedTxXdr }))\n      .catch(e => {\n        throw parseError(e);\n      });\n  }\n\n  async signAuthEntry(): Promise<{ signedAuthEntry: string; signerAddress?: string }> {\n    throw {\n      code: -3,\n      message: 'Lobstr does not support the \"signAuthEntry\" function',\n    };\n  }\n\n  async signMessage(): Promise<{ signedMessage: string; signerAddress?: string }> {\n    throw {\n      code: -3,\n      message: 'Lobstr does not support the \"signMessage\" function',\n    };\n  }\n\n  async getNetwork(): Promise<{ network: string; networkPassphrase: string }> {\n    throw {\n      code: -3,\n      message: 'Lobstr does not support the \"getNetwork\" function',\n    };\n  }\n}\n", "import { ModuleInterface, ModuleType, WalletNetwork } from '../types';\nimport { parseError } from '../utils';\n\ndeclare const window: Window &\n  typeof globalThis & {\n    rabet?: {\n      connect: () => Promise<{ publicKey: string }>;\n      sign: (xdr: string, network: RabetNetwork) => Promise<{ xdr: string }>;\n    };\n  };\n\nexport const RABET_ID = 'rabet';\n\nexport class RabetModule implements ModuleInterface {\n  moduleType: ModuleType = ModuleType.HOT_WALLET;\n\n  productId: string = RABET_ID;\n  productName: string = 'Rabet';\n  productUrl: string = 'https://rabet.io/';\n  productIcon: string = 'https://stellar.creit.tech/wallet-icons/rabet.png';\n\n  isAvailable(): Promise<boolean> {\n    return new Promise<boolean>(resolve => {\n      // We wait 100ms before answering the call because Rabet is really slow when it comes to create the rabet window object and so this way we make sure is available\n      setTimeout(() => {\n        resolve(typeof window !== \"undefined\" && !!window.rabet);\n      }, 100);\n    });\n  }\n\n  async getAddress(): Promise<{ address: string }> {\n    const runChecks = async () => {\n      if (!(await this.isAvailable())) {\n        throw new Error('Rabet is not installed');\n      }\n    };\n\n    return runChecks()\n      .then(() => window.rabet!.connect())\n      .then(({ publicKey }) => ({ address: publicKey }))\n      .catch(e => {\n        throw parseError(e);\n      });\n  }\n\n  async signTransaction(\n    xdr: string,\n    opts?: {\n      networkPassphrase?: string;\n      address?: string;\n      path?: string;\n      submit?: boolean;\n      submitUrl?: string;\n    }\n  ): Promise<{ signedTxXdr: string; signerAddress?: string }> {\n    const runChecks = async () => {\n      if (!(await this.isAvailable())) {\n        throw new Error('Rabet is not installed');\n      }\n\n      if (\n        opts?.address &&\n        opts.networkPassphrase !== WalletNetwork.PUBLIC &&\n        opts.networkPassphrase !== WalletNetwork.TESTNET\n      ) {\n        throw new Error(`Rabet doesn't support the network: ${opts.networkPassphrase}`);\n      }\n\n      if (opts?.address) {\n        console.warn(`Rabet doesn't allow specifying the network that should be used, we skip the value`);\n      }\n    };\n\n    const sign = async () =>\n      window.rabet!.sign(\n        xdr,\n        opts?.networkPassphrase === WalletNetwork.PUBLIC ? RabetNetwork.PUBLIC : RabetNetwork.TESTNET\n      );\n\n    return runChecks()\n      .then(sign)\n      .then(result => ({ signedTxXdr: result?.xdr }))\n      .catch(e => {\n        throw parseError(e);\n      });\n  }\n\n  async signAuthEntry(): Promise<{ signedAuthEntry: string; signerAddress?: string }> {\n    throw {\n      code: -3,\n      message: 'Rabet does not support the \"signAuthEntry\" function',\n    };\n  }\n\n  async signMessage(): Promise<{ signedMessage: string; signerAddress?: string }> {\n    throw {\n      code: -3,\n      message: 'Rabet does not support the \"signMessage\" function',\n    };\n  }\n\n  async getNetwork(): Promise<{ network: string; networkPassphrase: string }> {\n    throw {\n      code: -3,\n      message: 'Rabet does not support the \"getNetwork\" function',\n    };\n  }\n}\n\nexport enum RabetNetwork {\n  PUBLIC = 'mainnet',\n  TESTNET = 'testnet',\n}\n", "export enum EventType {\n  XBULL_CONNECT = 'XBULL_CONNECT',\n  XBULL_GET_PUBLIC_KEY = 'XBULL_GET_PUBLIC_KEY',\n  XBULL_SIGN_XDR = 'XBULL_SIGN_XDR',\n  XBULL_GET_NETWORK = 'XBULL_GET_NETWORK',\n  XBULL_SIGN_MESSAGE = 'XBULL_SIGN_MESSAGE',\n\n  XBULL_INITIAL_RESPONSE = 'XBULL_INITIAL_RESPONSE',\n  XBULL_CONNECT_RESPONSE = 'XBULL_CONNECT_RESPONSE',\n  XBULL_SIGN = 'XBULL_SIGN',\n  XBULL_SIGN_RESPONSE = 'XBULL_SIGN_RESPONSE',\n  XBULL_SIGN_MESSAGE_RESPONSE = 'XBULL_SIGN_MESSAGE_RESPONSE',\n}\n\nexport interface ISDKConstructor {\n  url?: string;\n  preferredTarget?: 'extension' | 'website'; // Default is extension\n}\n\nexport interface IConnectParams {\n  canRequestPublicKey: boolean;\n  canRequestSign: boolean;\n}\n\nexport interface IConnectResult {\n  success: true;\n  publicKey: string;\n}\n\nexport interface ISignParams {\n  xdr: string;\n  publicKey?: string;\n  network?: string;\n}\n\nexport interface ISignResult {\n  success: true;\n  xdr: string;\n}\n\nexport interface ISignMessageResult {\n  success: true;\n  message: string;\n  fullMessage: string; // This is the message with the SEP-0053 text\n  signedMessage: string;\n  signerAddress: string;\n}\n\nexport interface IRejectResult {\n  success: false;\n  message?: string;\n}\n\n// REQUESTS TO WALLET\nexport interface IConnectRequestData {\n  type: EventType.XBULL_CONNECT;\n  message: string; // IConnectParams JSON version\n  oneTimeCode: string;\n}\n\nexport interface ISignRequestData {\n  type: EventType.XBULL_SIGN;\n  message: string; // IConnectParams JSON version\n  oneTimeCode: string;\n}\n\nexport interface ISignMessageRequestData {\n  type: EventType.XBULL_SIGN_MESSAGE;\n  message: string; // IConnectParams JSON version\n  oneTimeCode: string;\n}\n\n// RESPONSES FROM WALLET\ninterface BaseResponse {\n  type: EventType;\n  message?: string; // base64 encrypted string response\n  oneTimeCode?: string; // base64 string\n}\n\n// All values are base64 encrypted values\nexport interface InitialResponseListenerData extends Required<BaseResponse> {\n  type: EventType.XBULL_INITIAL_RESPONSE;\n  publicKey: string;\n}\n\nexport interface IConnectResponseData extends Required<BaseResponse> {\n  type: EventType.XBULL_CONNECT_RESPONSE;\n  success: true;\n}\n\nexport interface ISignResponseData extends Required<BaseResponse> {\n  type: EventType.XBULL_SIGN_RESPONSE;\n  success: true;\n}\n\nexport interface ISignMessageResponseData extends Required<BaseResponse> {\n  type: EventType.XBULL_SIGN_MESSAGE_RESPONSE;\n  success: true;\n}\n\nexport interface IRejectResponse extends Pick<BaseResponse, 'type'> {\n  success: false;\n}\n\nexport type SdkResponse<T> = T | { error: SdkError };\n\nexport function isResponseError<T>(response: SdkResponse<T>): response is { error: SdkError } {\n  return !!(response as any).error;\n}\n\ninterface SdkError {\n  message: string;    // general description message returned to the client app\n  code: number;       // unique error code\n  ext?: Array<string>;  // optional extended details\n}\n\n/**\n * @deprecated\n */\nexport interface ISitePermissions {\n  canRequestPublicKey: boolean;\n  canRequestSign: boolean;\n}\n\nexport interface IConnectRequestPayload {\n  origin: string;\n  host: string;\n  permissions: ISitePermissions;\n}\n\nexport interface IGetPublicKeyRequestPayload {\n  origin: string;\n  host: string;\n}\n\nexport interface IGetNetworkRequestPayload {\n  origin: string;\n  host: string;\n}\n\nexport interface ISignXDRRequestPayload {\n  origin: string;\n  host: string;\n  xdr: string;\n  xdrType: 'Transaction' | 'AuthEntry';\n  publicKey?: string;\n  network?: string;\n}\n\nexport interface ISignMessageRequestPayload {\n  origin: string;\n  host: string;\n  message: string;\n  publicKey?: string;\n  network?: string;\n}\n// ----- SDK and Content script types END\n\n// ----- Background and Content script types\nexport interface IRuntimeConnectResponse {\n  error: false;\n  payload: ISitePermissions;\n}\n\nexport interface IRuntimeGetPublicKeyResponse {\n  error: false;\n  payload: string;\n}\n\nexport interface IRuntimeSignXDRResponse {\n  error: false;\n  payload: {\n    signedXdr: string;\n    signerAddress: string;\n  };\n}\n\nexport interface IRuntimeSignMessageResponse {\n  error: false;\n  payload: {\n    signedMessage: string;\n    signerAddress: string;\n  };\n}\n\nexport interface IRuntimeGetNetworkResponse {\n  error: false;\n  payload: {\n    network: string,\n    networkPassphrase: string\n  };\n}\n\nexport interface IRuntimeErrorResponse {\n  error: true;\n  errorMessage: string;\n  code?: number;\n}\n\nexport type RuntimeResponse = IRuntimeConnectResponse\n  | IRuntimeGetPublicKeyResponse\n  | IRuntimeSignXDRResponse\n  | IRuntimeSignMessageResponse\n  | IRuntimeErrorResponse\n  | IRuntimeGetNetworkResponse;\n// ----- Background and Content script types END\n", "import {\n  EventType,\n  IConnectRequestPayload,\n  IGetNetworkRequestPayload,\n  IGetPublicKeyRequestPayload,\n  IRuntimeConnectResponse,\n  IRuntimeErrorResponse, IRuntimeGetNetworkResponse,\n  IRuntimeGetPublicKeyResponse, IRuntimeSignMessageResponse,\n  IRuntimeSignXDRResponse, ISignMessageRequestPayload,\n  ISignXDRRequestPayload,\n  SdkResponse,\n} from './interfaces';\n\nexport class xBullSDK {\n  isConnected = false;\n\n  constructor() {}\n\n  private sendEventToContentScript<T, R>(eventName: EventType, payload: T, nonce: string): Promise<{ data: { detail: R; eventId: string; returnFromCS?: boolean } }> {\n    return new Promise<{ data: { detail: R; eventId: string; returnFromCS?: boolean } }>(resolve => {\n      const eventListener = (event: any) => {\n        if (event.source !== window || !event.data || event.origin !== window.origin) {\n          return;\n        }\n\n        const response = event.data as { detail: R; eventId: string; returnFromCS?: boolean };\n\n        if (response.eventId === nonce) {\n          resolve(event);\n          window.removeEventListener('message', eventListener, false);\n        }\n      };\n\n      window.addEventListener('message', eventListener, false);\n\n      (window as any).webkit.messageHandlers.cordova_iab.postMessage(JSON.stringify({\n        type: eventName,\n        eventId: nonce,\n        detail: payload,\n      }));\n    });\n  }\n\n  /**\n   * This function ask the user to confirm they want to accept request from this website,\n   * this function is automatically called when using other functions.\n   */\n  async enableConnection(): Promise<void> {\n    const dispatchEventParams: IConnectRequestPayload = {\n      origin: window.origin,\n      host: window.location.host,\n      permissions: { canRequestPublicKey: true, canRequestSign: true },\n    };\n\n    const response = await this.sendEventToContentScript<\n      IConnectRequestPayload,\n      IRuntimeConnectResponse | IRuntimeErrorResponse\n    >(EventType.XBULL_CONNECT, dispatchEventParams, crypto.randomUUID());\n    const { detail } = response.data;\n\n    if (!detail || detail.error) {\n      throw {\n        code: detail?.code || -1,\n        message: detail?.errorMessage || 'Unexpected error',\n      };\n    }\n\n    this.isConnected = true;\n  }\n\n  /**\n   * https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0043.md#signtransaction\n   */\n  async getAddress(): Promise<SdkResponse<{ address: string }>> {\n    try {\n      await this.enableConnection();\n    } catch (e: any) {\n      return {\n        error: {\n          code: e?.code || -1,\n          message: e?.message || 'Unexpected error',\n        }\n      };\n    }\n\n    const dispatchEventParams: IGetPublicKeyRequestPayload = {\n      origin: window.origin,\n      host: window.location.host,\n    };\n\n    const response = await this.sendEventToContentScript<\n      IGetPublicKeyRequestPayload,\n      IRuntimeGetPublicKeyResponse | IRuntimeErrorResponse\n    >(EventType.XBULL_GET_PUBLIC_KEY, dispatchEventParams, crypto.randomUUID());\n\n    const { detail } = response.data;\n\n    if (!detail || detail.error) {\n      return {\n        error: {\n          code: detail?.code || -1,\n          message: detail?.errorMessage || 'Unexpected error',\n        }\n      };\n    }\n\n    return { address: detail.payload };\n  }\n\n  /**\n   * https://github.com/stellar/stellar-protocol/blob/master/ecosystem/sep-0043.md#signtransaction\n   */\n  async signTransaction(params: {\n    xdr: string,\n    opts?: {\n      networkPassphrase?: string,\n      address?: string;\n      submit?: boolean;\n      submitUrl?: string;\n    };\n  }): Promise<SdkResponse<{ signedTxXdr: string; signerAddress: string; }>> {\n    if (params.opts?.submit || params.opts?.submitUrl) {\n      return {\n        error: {\n          code: -1,\n          message: 'Parameters `submit` and `submitUrl` are not supported',\n        },\n      };\n    }\n\n    try {\n      await this.enableConnection();\n    } catch (e: any) {\n      return {\n        error: {\n          code: e?.code || -1,\n          message: e?.message || 'Unexpected error',\n        }\n      };\n    }\n\n    const dispatchEventParams: ISignXDRRequestPayload = {\n      origin: window.origin,\n      host: window.location.host,\n      network: params.opts?.networkPassphrase,\n      publicKey: params.opts?.address,\n      xdr: params.xdr,\n      xdrType: 'Transaction',\n    };\n\n    const response = await this.sendEventToContentScript<\n      ISignXDRRequestPayload,\n      IRuntimeSignXDRResponse | IRuntimeErrorResponse\n    >(EventType.XBULL_SIGN_XDR, dispatchEventParams, crypto.randomUUID());\n\n    const { detail } = response.data;\n\n    if (!detail || detail.error) {\n      return {\n        error: {\n          code: detail?.code || -1,\n          message: detail?.errorMessage || 'Unexpected error',\n        }\n      };\n    }\n\n    return {\n      signedTxXdr: detail.payload.signedXdr,\n      signerAddress: detail.payload.signerAddress,\n    };\n  }\n\n  async signMessage(\n    message: string,\n    opts?: {\n      networkPassphrase?: string,\n      address?: string;\n    }\n  ): Promise<SdkResponse<{ signedMessage: string; signerAddress: string; }>> {\n    if (!message) return {\n      error: {\n        code: -1,\n        message: 'The message must be defined.'\n      }\n    }\n\n    try {\n      await this.enableConnection();\n    } catch (e: any) {\n      return {\n        error: {\n          code: e?.code || -1,\n          message: e?.message || 'Unexpected error',\n        }\n      };\n    }\n\n    const dispatchEventParams: ISignMessageRequestPayload = {\n      origin: window.origin,\n      host: window.location.host,\n      message: message,\n      publicKey: opts?.address,\n      network: opts?.networkPassphrase,\n    };\n\n    const response = await this.sendEventToContentScript<\n      ISignMessageRequestPayload,\n      IRuntimeSignMessageResponse | IRuntimeErrorResponse\n    >(EventType.XBULL_SIGN_MESSAGE, dispatchEventParams, crypto.randomUUID());\n\n    const { detail } = response.data;\n\n    if (!detail || detail.error) {\n      return {\n        error: {\n          code: detail?.code || -1,\n          message: detail?.errorMessage || 'Unexpected error',\n        }\n      };\n    }\n\n    return {\n      signedMessage: detail.payload.signedMessage,\n      signerAddress: detail.payload.signerAddress,\n    };\n  }\n\n  /**\n   * This method returns the information of the currently selected network\n   */\n  async getNetwork(): Promise<SdkResponse<{ network: string; networkPassphrase: string; }>> {\n    try {\n      await this.enableConnection();\n    } catch (e: any) {\n      return {\n        error: {\n          code: e?.code || -1,\n          message: e?.message || 'Unexpected error',\n        }\n      };\n    }\n\n    const dispatchEventParams: IGetNetworkRequestPayload = {\n      origin: window.origin,\n      host: window.location.host,\n    };\n\n    const response = await this.sendEventToContentScript<\n      IGetNetworkRequestPayload,\n      IRuntimeGetNetworkResponse | IRuntimeErrorResponse\n    >(EventType.XBULL_GET_NETWORK, dispatchEventParams, crypto.randomUUID());\n\n    const { detail } = response.data;\n\n    if (!detail || detail.error) {\n      return {\n        error: {\n          code: detail?.code || -1,\n          message: detail?.errorMessage || 'Unexpected error',\n        }\n      };\n    }\n\n    return {\n      network: detail.payload.network,\n      networkPassphrase: detail.payload.networkPassphrase,\n    };\n  }\n}\n", "import { box, randomBytes } from 'tweetnacl';\nimport { decodeBase64, decodeUTF8, encodeBase64, encodeUTF8 } from 'tweetnacl-util';\nimport {\n  EventType,\n  IConnectParams,\n  IConnectRequestData,\n  IConnectResponseData,\n  IConnectResult,\n  InitialResponseListenerData,\n  IRejectResponse,\n  IRejectResult,\n  ISDKConstructor, ISignMessageRequestData, ISignMessageResponseData, ISignMessageResult,\n  ISignParams, ISignRequestData,\n  ISignResponseData,\n  ISignResult,\n  isResponseError,\n  SdkResponse,\n} from './interfaces';\nimport {\n  firstValueFrom,\n  of,\n  Subject,\n  Subscription,\n  switchMap,\n  take,\n  takeUntil,\n  throwError,\n  timer\n} from 'rxjs';\nimport { xBullSDK } from './mobile-sdk';\n\nexport class xBullWalletConnect {\n  closeCurrentPromises$: Subject<void> = new Subject<void>();\n  closeObservables$: Subject<void> = new Subject<void>();\n\n  preferredTarget: Required<ISDKConstructor['preferredTarget']>;\n\n  target?: Window | null;\n  targetPublicKey?: string; // this value is encrypted\n  readonly walletUrl: string;\n\n  encryptForReceiver: (params: { data: string, receiverPublicKey: Uint8Array }) => { message: string, oneTimeCode: string };\n  decryptFromReceiver: (params: { payload: string; oneTimeCode: string; senderPublicKey: string }) => string;\n  publicKey: () => Uint8Array;\n  session: () => string;\n\n  initialResponse$: Subject<MessageEvent<InitialResponseListenerData>> = new Subject<MessageEvent<InitialResponseListenerData>>();\n  initialResponseCompleted$: Subject<void> = new Subject<void>();\n\n  connectResponse$: Subject<MessageEvent<IConnectResponseData | IRejectResponse>> = new Subject<MessageEvent<IConnectResponseData | IRejectResponse>>();\n  connectResult$: Subject<IConnectResult | IRejectResult> = new Subject<IConnectResult | IRejectResult>(); // the value is the public key returned from the wallet\n\n  signResponse$: Subject<MessageEvent<ISignResponseData | IRejectResponse>> = new Subject<MessageEvent<ISignResponseData | IRejectResponse>>();\n  signResult$: Subject<ISignResult | IRejectResult> = new Subject<ISignResult | IRejectResult>();\n\n  signMessageResponse$: Subject<MessageEvent<ISignMessageResponseData | IRejectResponse>> = new Subject<MessageEvent<ISignMessageResponseData | IRejectResponse>>();\n  signMessageResult$: Subject<ISignMessageResult | IRejectResult> = new Subject<ISignMessageResult | IRejectResult>();\n\n  constructor(params?: ISDKConstructor) {\n    this.preferredTarget = params?.preferredTarget || 'extension';\n    this.walletUrl = params?.url || 'https://wallet.xbull.app/connect';\n    const sessionKeypair = box.keyPair();\n    const session = encodeBase64(randomBytes(24));\n\n    this.encryptForReceiver = (params: { data: string, receiverPublicKey: Uint8Array }) => {\n      const oneTimeCode = randomBytes(24);\n      const cipherText = box(\n        decodeUTF8(params.data),\n        oneTimeCode,\n        params.receiverPublicKey,\n        sessionKeypair.secretKey\n      );\n\n      return {\n        message: encodeBase64(cipherText),\n        oneTimeCode: encodeBase64(oneTimeCode),\n      };\n    };\n\n    this.decryptFromReceiver = (params: { payload: string; oneTimeCode: string; senderPublicKey: string }) => {\n      const decryptedMessage = box.open(\n        decodeBase64(params.payload),\n        decodeBase64(params.oneTimeCode),\n        decodeBase64(params.senderPublicKey),\n        sessionKeypair.secretKey,\n      );\n\n      if (!decryptedMessage) {\n        throw new Error('Decrypted message is null');\n      }\n\n      return encodeUTF8(decryptedMessage);\n    }\n\n    this.publicKey = () => sessionKeypair.publicKey;\n\n    this.session = () => session.slice();\n\n    const listener = (ev: any) => {\n      switch (ev.data.type as EventType) {\n        case EventType.XBULL_INITIAL_RESPONSE:\n          this.initialResponse$.next(ev);\n          break;\n\n        case EventType.XBULL_CONNECT_RESPONSE:\n          this.connectResponse$.next(ev);\n          break;\n\n        case EventType.XBULL_SIGN_RESPONSE:\n          this.signResponse$.next(ev);\n          break;\n\n        case EventType.XBULL_SIGN_MESSAGE_RESPONSE:\n          this.signMessageResponse$.next(ev);\n          break;\n      }\n    };\n\n    window.addEventListener('message', listener);\n\n    this.closeObservables$.asObservable()\n      .pipe(take(1))\n      .subscribe(() => {\n        window.removeEventListener('message', listener);\n      });\n  }\n\n  closeCurrentPromisesSubscription: Subscription = timer(1000, 1000)\n    .pipe(takeUntil(this.closeObservables$))\n    .subscribe(() => {\n      if (this.target?.closed) {\n        this.closeCurrentPromises$.next();\n      }\n    })\n\n  onInititalResponseSubscription: Subscription = this.initialResponse$\n    .pipe(takeUntil(this.closeObservables$))\n    .subscribe((ev: MessageEvent<InitialResponseListenerData>) => {\n      const decryptedMessage = this.decryptFromReceiver({\n        oneTimeCode: ev.data.oneTimeCode,\n        payload: ev.data.message,\n        senderPublicKey: ev.data.publicKey\n      });\n\n      const data = JSON.parse(decryptedMessage);\n\n      if (data.providedSession === this.session()) {\n        this.targetPublicKey = ev.data.publicKey;\n        this.initialResponseCompleted$.next();\n      }\n    });\n\n  onConnectResponseSubscription: Subscription = this.connectResponse$\n    .pipe(takeUntil(this.closeObservables$))\n    .subscribe((ev: MessageEvent<IConnectResponseData | IRejectResponse>) => {\n      if (!this.targetPublicKey) {\n        this.connectResult$.next({ success: false, message: 'Wallet encryption public key is not provided, request rejected.' })\n        return;\n      }\n\n      if (!ev.data.success) {\n        this.connectResult$.next({ success: false, message: 'Request rejected from the wallet' });\n        return;\n      }\n\n      const decryptedMessage = this.decryptFromReceiver({\n        oneTimeCode: ev.data.oneTimeCode,\n        payload: ev.data.message,\n        senderPublicKey: this.targetPublicKey,\n      });\n\n      const data: { publicKey: string } = JSON.parse(decryptedMessage);\n\n      this.connectResult$.next({ success: true, publicKey: data.publicKey });\n    });\n\n  onSignResponseSubscription: Subscription = this.signResponse$\n    .pipe(takeUntil(this.closeObservables$))\n    .subscribe((ev: MessageEvent<ISignResponseData | IRejectResponse>) => {\n      if (!this.targetPublicKey) {\n        this.signResult$.next({ success: false, message: 'Wallet encryption public key is not provided, request rejected.' })\n        return;\n      }\n\n      if (!ev.data.success) {\n        this.signResult$.next({ success: false, message: 'Request rejected from the wallet' });\n        return;\n      }\n\n      const decryptedMessage = this.decryptFromReceiver({\n        oneTimeCode: ev.data.oneTimeCode,\n        payload: ev.data.message,\n        senderPublicKey: this.targetPublicKey,\n      });\n\n      const data: { xdr: string } = JSON.parse(decryptedMessage);\n\n      this.signResult$.next({ success: true, xdr: data.xdr });\n    });\n\n\n  onSignMessageResponseSubscription: Subscription = this.signMessageResponse$\n    .pipe(takeUntil(this.closeObservables$))\n    .subscribe((ev: MessageEvent<ISignMessageResponseData | IRejectResponse>) => {\n      if (!this.targetPublicKey) {\n        this.signMessageResult$.next({ success: false, message: 'Wallet encryption public key is not provided, request rejected.' })\n        return;\n      }\n\n      if (!ev.data.success) {\n        this.signMessageResult$.next({ success: false, message: 'Request rejected from the wallet' });\n        return;\n      }\n\n      const decryptedMessage = this.decryptFromReceiver({\n        oneTimeCode: ev.data.oneTimeCode,\n        payload: ev.data.message,\n        senderPublicKey: this.targetPublicKey,\n      });\n\n      const data: Omit<ISignMessageResult, 'success'> = JSON.parse(decryptedMessage);\n\n      this.signMessageResult$.next({ success: true, ...data });\n    });\n\n  openWallet() {\n    if (!!this.target && !this.target.closed) {\n      this.target.close();\n      this.target = null;\n      this.closeCurrentPromises$.next();\n    }\n\n    this.target = window.open(\n      `${this.walletUrl}?public=${encodeURIComponent(encodeBase64(this.publicKey()))}&session=${encodeURIComponent(this.session())}`,\n      'xBull_Wallet_app',\n      'width=380,height=640,left=100,top=100'\n    );\n\n    return firstValueFrom(\n      this.initialResponseCompleted$\n        .pipe(takeUntil(this.closeCurrentPromises$))\n        .pipe(takeUntil(this.closeObservables$))\n    );\n  }\n\n  closeWallet() {\n    if (!!this.target) {\n      this.target?.close();\n      this.target = null;\n    }\n  }\n\n  async connect(params: IConnectParams = { canRequestPublicKey: true, canRequestSign: true }): Promise<string> {\n    const extensionSdk: xBullSDK = !!(window as any)?.webkit?.messageHandlers?.cordova_iab ? new xBullSDK() : (window as any).xBullSDK;\n    if (!!extensionSdk && this.preferredTarget === 'extension') {\n      const response: SdkResponse<{ address: string }> = await extensionSdk.getAddress();\n\n      if (isResponseError(response)) {\n        throw response.error;\n      } else {\n        return response.address;\n      }\n    } else {\n\n      await this.openWallet();\n\n      if (!this.target || !this.targetPublicKey) {\n        throw new Error(`xBull Wallet is not open, we can't connect with it`);\n      }\n\n      const { message, oneTimeCode } = this.encryptForReceiver({\n        data: JSON.stringify(params),\n        receiverPublicKey: decodeBase64(this.targetPublicKey),\n      })\n\n      const payload: IConnectRequestData = {\n        type: EventType.XBULL_CONNECT,\n        message,\n        oneTimeCode,\n      };\n\n      this.target.postMessage(payload, '*');\n\n      const result = this.connectResult$\n        .asObservable()\n        .pipe(switchMap((result: IConnectResult | IRejectResult) => {\n          if (!result.success) {\n            this.closeWallet();\n            return throwError(() => new Error(result.message));\n          } else {\n            this.closeWallet();\n            return of(result.publicKey);\n          }\n        }))\n        .pipe(take(1))\n        .pipe(takeUntil(this.closeCurrentPromises$))\n        .pipe(takeUntil(this.closeObservables$));\n\n      return firstValueFrom(result);\n\n    }\n  }\n\n  async sign(params: ISignParams): Promise<string> {\n    const extensionSdk: xBullSDK = !!(window as any)?.webkit?.messageHandlers?.cordova_iab ? new xBullSDK() : (window as any).xBullSDK;\n    if (!!extensionSdk && this.preferredTarget === 'extension') {\n      const response = await extensionSdk.signTransaction({\n        xdr: params.xdr,\n        opts: {\n          networkPassphrase: params.network,\n          address: params.publicKey,\n        }\n      });\n\n      if (isResponseError(response)) {\n        throw response.error;\n      } else {\n        return response.signedTxXdr;\n      }\n    } else {\n      await this.openWallet();\n\n      if (!this.target || !this.targetPublicKey) {\n        throw new Error(`xBull Wallet is not open, we can't connect with it`);\n      }\n\n      if (typeof params.xdr !== 'string') {\n        throw new Error('XDR provided needs to be a string value');\n      }\n\n      const { message, oneTimeCode } = this.encryptForReceiver({\n        data: JSON.stringify(params),\n        receiverPublicKey: decodeBase64(this.targetPublicKey),\n      });\n\n      const payload: ISignRequestData = {\n        type: EventType.XBULL_SIGN,\n        message,\n        oneTimeCode,\n      };\n\n      this.target.postMessage(payload, '*');\n\n      const result = this.signResult$\n        .asObservable()\n        .pipe(switchMap((result: ISignResult | IRejectResult) => {\n          if (!result.success) {\n            this.closeWallet();\n            return throwError(() => new Error(result.message));\n          } else {\n            this.closeWallet();\n            return of(result.xdr);\n          }\n        }))\n        .pipe(take(1))\n        .pipe(takeUntil(this.closeCurrentPromises$))\n        .pipe(takeUntil(this.closeObservables$));\n\n      return firstValueFrom(result);\n    }\n  }\n\n  async signMessage(\n    message: string,\n    opts?: {\n      networkPassphrase?: string,\n      address?: string;\n    }\n  ): Promise<{ signedMessage: string; signerAddress: string}>  {\n    const extensionSdk: xBullSDK = !!(window as any)?.webkit?.messageHandlers?.cordova_iab ? new xBullSDK() : (window as any).xBullSDK;\n    if (!!extensionSdk && this.preferredTarget === 'extension') {\n      const response = await extensionSdk.signMessage(message, opts);\n\n      if (isResponseError(response)) {\n        throw response.error;\n      } else {\n        return response;\n      }\n    } else {\n      await this.openWallet();\n\n      if (!this.target || !this.targetPublicKey) {\n        throw new Error(`xBull Wallet is not open, we can't connect with it`);\n      }\n\n      if (typeof message !== 'string') {\n        throw new Error('XDR provided needs to be a string value');\n      }\n\n      const encrypted = this.encryptForReceiver({\n        data: JSON.stringify({ message, opts }),\n        receiverPublicKey: decodeBase64(this.targetPublicKey),\n      });\n\n      const payload: ISignMessageRequestData = {\n        type: EventType.XBULL_SIGN_MESSAGE,\n        message: encrypted.message,\n        oneTimeCode: encrypted.oneTimeCode,\n      };\n\n      this.target.postMessage(payload, '*');\n\n      const result = this.signMessageResult$\n        .asObservable()\n        .pipe(switchMap((result: ISignMessageResult | IRejectResult) => {\n          if (!result.success) {\n            this.closeWallet();\n            return throwError(() => new Error(result.message));\n          } else {\n            this.closeWallet();\n            return of({\n              signedMessage: result.signedMessage,\n              signerAddress: result.signerAddress\n            });\n          }\n        }))\n        .pipe(take(1))\n        .pipe(takeUntil(this.closeCurrentPromises$))\n        .pipe(takeUntil(this.closeObservables$));\n\n      return firstValueFrom(result);\n    }\n  }\n\n  closeConnections() {\n    this.closeObservables$.next();\n    this.closeCurrentPromises$.next();\n    this.closeObservables$.complete();\n    this.closeCurrentPromises$.complete();\n  }\n}\n", "import { xBullWalletConnect } from '@creit.tech/xbull-wallet-connect';\nimport { ModuleInterface, ModuleType } from '../types';\nimport { parseError } from '../utils';\n\nexport const XBULL_ID = 'xbull';\n\nexport class xBullModule implements ModuleInterface {\n  moduleType: ModuleType = ModuleType.HOT_WALLET;\n\n  productId: string = XBULL_ID;\n  productName: string = 'xBull';\n  productUrl: string = 'https://xbull.app';\n  productIcon: string = 'https://stellar.creit.tech/wallet-icons/xbull.png';\n\n  async isAvailable(): Promise<boolean> {\n    return true;\n  }\n\n  async getAddress(): Promise<{ address: string }> {\n    try {\n      const bridge: xBullWalletConnect = new xBullWalletConnect();\n      const publicKey: string = await bridge.connect();\n      bridge.closeConnections();\n      return { address: publicKey };\n    } catch (e: any) {\n      throw parseError(e);\n    }\n  }\n\n  async signTransaction(\n    xdr: string,\n    opts?: {\n      networkPassphrase?: string;\n      address?: string;\n      path?: string;\n      submit?: boolean;\n      submitUrl?: string;\n    }\n  ): Promise<{ signedTxXdr: string; signerAddress?: string }> {\n    try {\n      const bridge: xBullWalletConnect = new xBullWalletConnect();\n\n      const signedXdr: string = await bridge.sign({\n        xdr,\n        publicKey: opts?.address,\n        network: opts?.networkPassphrase,\n      });\n\n      bridge.closeConnections();\n      return { signedTxXdr: signedXdr, signerAddress: opts?.address };\n    } catch (e: any) {\n      throw parseError(e);\n    }\n  }\n\n  async signAuthEntry(): Promise<{ signedAuthEntry: string; signerAddress?: string }> {\n    throw {\n      code: -3,\n      message: 'xBull does not support the \"signAuthEntry\" function',\n    };\n  }\n\n  async signMessage(\n    message: string,\n    opts?: {\n      networkPassphrase?: string;\n      address?: string;\n      path?: string;\n    }\n  ): Promise<{ signedMessage: string; signerAddress?: string }> {\n    try {\n      const bridge: xBullWalletConnect = new xBullWalletConnect();\n\n      const result = await bridge.signMessage(message, {\n        address: opts?.address,\n        networkPassphrase: opts?.networkPassphrase,\n      });\n\n      bridge.closeConnections();\n      return result;\n    } catch (e: any) {\n      throw parseError(e);\n    }\n  }\n\n  async getNetwork(): Promise<{ network: string; networkPassphrase: string }> {\n    throw {\n      code: -3,\n      message: 'xBull does not support the \"getNetwork\" function',\n    };\n  }\n}\n", "import { HOT } from '@hot-wallet/sdk';\nimport { ModuleInterface, ModuleType, WalletNetwork } from '../types';\n\nexport const HOTWALLET_ID = 'hot-wallet';\n\nexport class HotWalletModule implements ModuleInterface {\n  moduleType: ModuleType;\n  productId: string;\n  productName: string;\n  productUrl: string;\n  productIcon: string;\n\n  constructor() {\n    this.moduleType = ModuleType.HOT_WALLET;\n    this.productId = HOTWALLET_ID;\n    this.productName = 'HOT Wallet';\n    this.productUrl = 'https://hot-labs.org/wallet';\n    this.productIcon = 'https://storage.herewallet.app/logo.png';\n  }\n\n  async isAvailable() {\n    return true;\n  }\n\n  async getAddress() {\n    return await HOT.request('stellar:getAddress', {});\n  }\n\n  async signTransaction(xdr: string, opts?: { address?: string }) {\n    return await HOT.request('stellar:signTransaction', { xdr, accountToSign: opts?.address });\n  }\n\n  async signAuthEntry(authEntry: string, opts?: { address?: string }) {\n    return await HOT.request('stellar:signAuthEntry', { authEntry, accountToSign: opts?.address });\n  }\n\n  async signMessage(message: string, opts?: { address?: string }) {\n    return await HOT.request('stellar:signMessage', { message, accountToSign: opts?.address });\n  }\n\n  async getNetwork() {\n    return { network: 'mainnet', networkPassphrase: WalletNetwork.PUBLIC };\n  }\n}\n", "import { ModuleInterface, ModuleType } from '../types';\nimport { parseError } from '../utils';\n\ninterface SignTransactionProps {\n  xdr: string;\n  accountToSign?: string;\n  networkPassphrase?: string;\n}\n\ninterface SignBlobProps {\n  blob: string;\n  accountToSign: string;\n}\n\ninterface SignAuthEntryProps {\n  xdr: string;\n  accountToSign?: string;\n}\n\ninterface SignMessageProps {\n  message: string;\n  accountToSign?: string;\n}\n\ndeclare const window: Window & {\n  hanaWallet?: {\n    stellar?: {\n      getPublicKey(): Promise<string>;\n      signTransaction({ xdr, accountToSign, networkPassphrase }: SignTransactionProps): Promise<string>;\n      signBlob({ blob, accountToSign }: SignBlobProps): Promise<string>;\n      signAuthEntry({ xdr, accountToSign }: SignAuthEntryProps): Promise<string>;\n      signMessage({ message, accountToSign }: SignMessageProps): Promise<string>;\n    };\n  };\n};\n\nexport const HANA_ID = 'hana';\n\nexport class HanaModule implements ModuleInterface {\n  moduleType: ModuleType = ModuleType.HOT_WALLET;\n\n  productId: string = HANA_ID;\n  productName: string = 'Hana Wallet';\n  productUrl: string = 'https://hanawallet.io/';\n  productIcon: string = 'https://stellar.creit.tech/wallet-icons/hana.png';\n\n  async runChecks(): Promise<void> {\n    if (!(await this.isAvailable())) {\n      throw new Error('Hana Wallet is not installed');\n    }\n  }\n\n  isAvailable(): Promise<boolean> {\n    return new Promise(resolve => resolve(typeof window !== \"undefined\" && !!window.hanaWallet?.stellar));\n  }\n\n  async getAddress(): Promise<{ address: string }> {\n    return this.runChecks()\n      .then(() => window.hanaWallet!.stellar!.getPublicKey())\n      .then(address => ({ address }))\n      .catch(e => {\n        throw parseError(e);\n      });\n  }\n\n  async signTransaction(\n    xdr: string,\n    opts?: {\n      networkPassphrase?: string;\n      address?: string;\n      path?: string;\n      submit?: boolean;\n      submitUrl?: string;\n    }\n  ): Promise<{ signedTxXdr: string; signerAddress?: string }> {\n    return this.runChecks()\n      .then(() =>\n        window.hanaWallet!.stellar!.signTransaction({\n          xdr,\n          accountToSign: opts?.address,\n          networkPassphrase: opts?.networkPassphrase,\n        })\n      )\n      .then(signedTxXdr => ({ signedTxXdr, signerAddress: opts?.address }))\n      .catch(e => {\n        throw parseError(e);\n      });\n  }\n\n  async signAuthEntry(\n    authEntry: string,\n    opts?: {\n      networkPassphrase?: string;\n      address?: string;\n      path?: string;\n    }\n  ): Promise<{ signedAuthEntry: string; signerAddress?: string }> {\n    return this.runChecks()\n      .then(() =>\n        window.hanaWallet!.stellar!.signAuthEntry({\n          xdr: authEntry,\n          accountToSign: opts?.address,\n        })\n      )\n      .then(signedAuthEntry => ({ signedAuthEntry, signerAddress: opts?.address }))\n      .catch(e => {\n        throw parseError(e);\n      });\n  }\n\n  async signMessage(\n    message: string,\n    opts?: {\n      address?: string;\n    }\n  ): Promise<{ signedMessage: string; signerAddress?: string }> {\n    return this.runChecks()\n      .then(() =>\n        window.hanaWallet!.stellar!.signMessage({\n          message,\n          accountToSign: opts?.address,\n        })\n      )\n      .then(signedMessage => ({ signedMessage, signerAddress: opts?.address }))\n      .catch(e => {\n        throw parseError(e);\n      });\n  }\n\n  async getNetwork(): Promise<{ network: string; networkPassphrase: string }> {\n    throw {\n      code: -3,\n      message: 'Hana does not support the \"getNetwork\" function',\n    };\n  }\n}\n", "import { KitActions, ModuleInterface, ModuleType } from '../types';\nimport { parseError } from '../utils';\n\ndeclare const window: Window & {\n    kleverWallet?: {\n        stellar?: KitActions;\n    };\n};\n\nexport const KLEVER_ID = 'klever';\n\nexport class KleverModule implements ModuleInterface {\n  moduleType: ModuleType = ModuleType.HOT_WALLET;\n\n  productId: string = KLEVER_ID;\n  productName: string = 'Klever Wallet';\n  productUrl: string = 'https://klever.io/';\n  productIcon: string = 'https://stellar.creit.tech/wallet-icons/klever.png';\n\n  async runChecks(): Promise<void> {\n    if (!(await this.isAvailable())) {\n      throw new Error('Klever Wallet is not installed');\n    }\n  }\n\n  isAvailable(): Promise<boolean> {\n    return new Promise(resolve => resolve(typeof window !== \"undefined\" && !!window.kleverWallet?.stellar));\n  }\n\n  async getAddress(): Promise<{ address: string }> {\n    return this.runChecks()\n      .then(() => window.kleverWallet!.stellar!.getAddress())\n      .catch(e => { throw parseError(e); });\n  }\n\n  async signTransaction(\n    xdr: string,\n    opts?: {\n      networkPassphrase?: string;\n      address?: string;\n      path?: string;\n      submit?: boolean;\n      submitUrl?: string;\n    }\n  ): Promise<{ signedTxXdr: string; signerAddress?: string }> {\n    return this.runChecks()\n      .then(() => window.kleverWallet!.stellar!.signTransaction(xdr, opts))\n      .catch(e => { throw parseError(e); });\n  }\n\n  async signAuthEntry(\n    authEntry: string,\n    opts?: {\n      networkPassphrase?: string;\n      address?: string;\n      path?: string;\n    }\n  ): Promise<{ signedAuthEntry: string; signerAddress?: string }> {\n    return this.runChecks()\n      .then(() => window.kleverWallet!.stellar!.signAuthEntry(authEntry, opts))\n      .catch(e => { throw parseError(e); });\n  }\n\n  async signMessage(\n    message: string,\n    opts?: {\n      address?: string;\n    }\n  ): Promise<{ signedMessage: string; signerAddress?: string }> {\n    return this.runChecks()\n      .then(() => window.kleverWallet!.stellar!.signMessage(message, opts))\n      .catch(e => { throw parseError(e); });\n  }\n\n  async getNetwork(): Promise<{ network: string; networkPassphrase: string }> {\n    return this.runChecks()\n      .then(() => window.kleverWallet!.stellar!.getNetwork())\n      .catch(e => { throw parseError(e); });\n  }\n}\n", "import { AlbedoModule } from './modules/albedo.module';\nimport { FreighterModule } from './modules/freighter.module';\nimport { LobstrModule } from './modules/lobstr.module';\nimport { RabetModule } from './modules/rabet.module';\nimport { xBullModule } from './modules/xbull.module';\nimport { HotWalletModule } from './modules/hotwallet.module';\nimport { HanaModule } from './modules/hana.module';\nimport { KleverModule } from './modules/klever.module';\nimport { ModuleInterface } from './types';\n\n/**\n * This method returns all modules that don't require extra configuration before they can be loaded\n * You can provide a filter function if needed\n */\nexport function allowAllModules(opts?: { filterBy: (module: ModuleInterface) => boolean }): ModuleInterface[] {\n  const modules: ModuleInterface[] = [\n    new AlbedoModule(),\n    new FreighterModule(),\n    new RabetModule(),\n    new xBullModule(),\n    new LobstrModule(),\n    new HanaModule(),\n    new HotWalletModule(),\n    new KleverModule(),\n  ];\n  return opts?.filterBy ? modules.filter(opts.filterBy) : modules;\n}\n\n/**\n * This method only returns those modules from wallet that follow exactly the SEP-43 standard and don't require extra configuration before they can be loaded\n * You can provide a filter function if needed\n */\nexport function sep43Modules(opts?: { filterBy: (module: ModuleInterface) => boolean }): ModuleInterface[] {\n  const modules: ModuleInterface[] = [new FreighterModule(), new HotWalletModule()];\n  return opts?.filterBy ? modules.filter(opts.filterBy) : modules;\n}\n\nexport function parseError(e: any) {\n  return {\n    code: e?.error?.code || e?.code || -1,\n    message: e?.error?.message || e?.message || (typeof e === 'string' && e) || 'Unhandled error from the wallet',\n    ext: e?.error?.ext || e?.ext,\n  };\n}\n"],
  "mappings": "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AAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,CAAC;AACP,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,CAAC;AACP,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,CAAC;AACP,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,CAAC;AACP,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,CAAC;AACP,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,CAAC;AACP,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,CAAC;AACP,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,CAAC;AACP,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,EAAE;AACR,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,EAAE;AACR,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,EAAE;AACR,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,EAAE;AACR,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,EAAE;AACR,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,EAAE;AACR,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,I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AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;AAAA,QACpC;AAAA,QAAY;AAAA,QAAY;AAAA,QAAY;A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K,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK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;;ACDA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACCA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;A;;;;;;;;;;;;ACDA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACEA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;A;;;;;;;ACDA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACDA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACCA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;A;;;;;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACDA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACCA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;A;;;;;;;ACDA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACCA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACDA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACCA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACCA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;AAmFM,SAAU,UACd,SACA,gBAA6G;AAE7G,SAAO,QAAQ,SAAC,QAAQ,YAAU;AAChC,QAAI,kBAAyD;AAC7D,QAAI,QAAQ;AAEZ,QAAI,aAAa;AAIjB,QAAM,gBAAgB,WAAA;AAAM,aAAA,cAAc,CAAC,mBAAmB,WAAW,SAAQ;IAArD;AAE5B,WAAO,UACL,yBACE,YACA,SAAC,OAAK;AAEJ,0BAAe,QAAf,oBAAe,SAAA,SAAf,gBAAiB,YAAW;AAC5B,UAAI,aAAa;AACjB,UAAM,aAAa;AAEnB,gBAAU,QAAQ,OAAO,UAAU,CAAC,EAAE,UACnC,kBAAkB,yBACjB,YAIA,SAAC,YAAU;AAAK,eAAA,WAAW,KAAK,iBAAiB,eAAe,OAAO,YAAY,YAAY,YAAY,IAAI,UAAU;MAAzG,GAChB,WAAA;AAIE,0BAAkB;AAClB,sBAAa;MACf,CAAC,CACD;IAEN,GACA,WAAA;AACE,mBAAa;AACb,oBAAa;IACf,CAAC,CACF;EAEL,CAAC;AACH;;;ACpIA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACCA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;AA4CM,SAAU,UAAa,UAA8B;AACzD,SAAO,QAAQ,SAAC,QAAQ,YAAU;AAChC,cAAU,QAAQ,EAAE,UAAU,yBAAyB,YAAY,WAAA;AAAM,aAAA,WAAW,SAAQ;IAAnB,GAAuB,IAAI,CAAC;AACrG,KAAC,WAAW,UAAU,OAAO,UAAU,UAAU;EACnD,CAAC;AACH;;;ACjDA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACEA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACHA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACCA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACCA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;A;;;;;;;ACFA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;A;;;;;;;ACEA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;A;;;;;;;ACDA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;A;;;;;;;;;;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACDA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;A;;;;;;;A3MGA,SAAS,eAAe,gBAAgB;AACtC,QAAM,SAAS;AAAA,IACb,QAAQ,CAAC;AAAA,IACT,OAAO,CAAC;AAAA,EACV;AACA,aAAW;AAAA,IACT,QAAAC;AAAA,IACA;AAAA,EACF,KAAK,gBAAgB;AACnB,WAAO,OAAO,OAAO,QAAQA,OAAM;AACnC,WAAO,OAAO,OAAO,OAAO,KAAK;AAAA,EACnC;AACA,SAAO;AACT;AAGA,IAAM,kBAAkB,IAAI,gBAAgB,KAAK;AACjD,IAAM,aAAa,gBAAgB,aAAa,EAAE,KAAK,OAAO,gBAAc,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC;AA0BjG,IAAM,mBAAmB,CAAC;AAC1B,IAAM,WAAN,MAAe;AAAA,EACb,uBAAuB,IAAI;AACzB,qBAAiB,iBAAiB;AAAA,EACpC;AAAA,EACA,qBAAqB,IAAI;AACvB,qBAAiB,eAAe;AAAA,EAClC;AACF;AACA,IAAM,WAAW,IAAI,SAAS;AAE9B,IAAM,WAAW,oBAAI,IAAI;AACzB,IAAM,kBAAkB,IAAI,QAAQ;AACpC,IAAM,YAAY,gBAAgB,aAAa;AAG/C,SAAS,SAASC,QAAO;AACvB,WAAS,IAAIA,OAAM,MAAMA,MAAK;AAC9B,kBAAgB,KAAK;AAAA,IACnB,MAAM;AAAA,IACN,OAAAA;AAAA,EACF,CAAC;AACH;AAGA,SAAS,YAAYA,QAAO;AAC1B,WAAS,OAAOA,OAAM,IAAI;AAC1B,kBAAgB,KAAK;AAAA,IACnB,MAAM;AAAA,IACN,OAAAA;AAAA,EACF,CAAC;AACH;AAeA,IAAI,SAAS,CAAC;AAOd,SAAS,UAAUC,IAAG;AACpB,SAAO,KAAKA,EAAC;AACf;AACA,SAAS,WAAW,QAAQ;AAC1B,MAAI,OAAO,QAAQ;AACjB,WAAO,QAAQ,CAAAA,OAAK,OAAO,KAAKA,EAAC,CAAC;AAAA,EACpC;AACA,WAAS,CAAC;AACZ;AAEA,IAAM,QAAN,cAAoB,gBAAgB;AAAA,EAClC,YAAY,UAAU;AACpB,UAAM,SAAS,KAAK;AACpB,SAAK,WAAW;AAChB,SAAK,eAAe;AACpB,SAAK,QAAQ;AACb,SAAK,kBAAkB;AACvB,SAAK,SAAS,IAAI,QAAQ;AAC1B,SAAK,UAAU;AAAA,MACb,QAAQ,KAAK,UAAU;AAAA,MACvB,UAAU,YAAU;AAClB,kBAAU,MAAM;AAAA,MAClB;AAAA,IACF;AACA,SAAK,UAAU,KAAK,OAAO,aAAa;AACxC,SAAK,QAAQ,KAAK,gBAAgB,SAAS,KAAK;AAChD,SAAK,eAAe,KAAK,SAAS;AAClC,aAAS,IAAI;AAAA,EACf;AAAA,EACA,IAAI,OAAO;AACT,WAAO,KAAK,SAAS;AAAA,EACvB;AAAA,EACA,gBAAgBC,QAAO;AACrB,QAAI,iBAAiB,cAAc;AACjC,aAAO,iBAAiB,aAAaA,QAAO,KAAK,IAAI;AAAA,IACvD;AACA,WAAOA;AAAA,EACT;AAAA,EACA,YAAY;AACV,WAAO,KAAK,SAAS;AAAA,EACvB;AAAA,EACA,MAAM,UAAU;AACd,WAAO,SAAS,KAAK,SAAS,CAAC;AAAA,EACjC;AAAA,EACA,UAAU,UAAU;AAClB,UAAM,eAAe,KAAK,SAAS;AACnC,QAAI,YAAY,SAAS,OAAO,CAAC,OAAO,YAAY;AAClD,cAAQ,QAAQ,OAAO,KAAK,OAAO;AACnC,aAAO;AAAA,IACT,GAAG,YAAY;AACf,QAAI,iBAAiB,gBAAgB;AACnC,kBAAY,iBAAiB,eAAe,cAAc,WAAW,KAAK,IAAI;AAAA,IAChF;AACA,QAAI,cAAc,cAAc;AAC9B,WAAK,QAAQ;AACb,UAAI,gBAAgB,SAAS,GAAG;AAC9B,YAAI,CAAC,KAAK,iBAAiB;AACzB,eAAK,kBAAkB;AACvB,qBAAW,UAAU,MAAM;AACzB,kBAAM,KAAK,KAAK,KAAK;AACrB,uBAAW,KAAK,MAAM;AACtB,iBAAK,kBAAkB;AAAA,UACzB,CAAC;AAAA,QACH;AAAA,MACF,OAAO;AACL,cAAM,KAAK,KAAK,KAAK;AACrB,mBAAW,KAAK,MAAM;AAAA,MACxB;AAAA,IACF;AAAA,EACF;AAAA,EACA,WAAW;AACT,WAAO,KAAK;AAAA,EACd;AAAA,EACA,QAAQ;AACN,SAAK,OAAO,MAAM,KAAK,YAAY;AAAA,EACrC;AAAA,EACA,QAAQ,aAAa;AACnB,QAAI,YAAY;AAChB,UAAMC,UAAS,CAAC;AAChB,WAAO,IAAI,WAAW,cAAY;AAChC,iBAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,WAAW,GAAG;AACtD,iBAAS,IAAI,MAAM,UAAU,WAAS;AACpC,UAAAA,QAAO,GAAG,IAAI;AACd,sBAAY;AAAA,QACd,CAAC,CAAC;AAAA,MACJ;AACA,aAAO,KAAK,UAAU;AAAA,QACpB,OAAO;AACL,cAAI,WAAW;AACb,qBAAS,KAAK;AAAA,cACZ,GAAGA;AAAA,YACL,CAAC;AACD,wBAAY;AAAA,UACd;AAAA,QACF;AAAA,QACA,MAAMF,IAAG;AACP,mBAAS,MAAMA,EAAC;AAAA,QAClB;AAAA,QACA,WAAW;AACT,mBAAS,SAAS;AAAA,QACpB;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA,EACA,UAAU;AACR,gBAAY,IAAI;AAChB,SAAK,MAAM;AAAA,EACb;AAAA,EACA,KAAK,OAAO;AACV,SAAK,OAAO,MAAM,KAAK;AAAA,EACzB;AAAA;AAAA,EAGA,QAAQ;AAAA,EAAC;AAAA;AAAA,EAGT,WAAW;AAAA,EAAC;AACd;AAEA,SAAS,YAAY,gBAAgB,gBAAgB;AACnD,QAAM;AAAA,IACJ,OAAAC;AAAA,IACA,QAAAE;AAAA,EACF,IAAI,YAAY,GAAG,cAAc;AACjC,QAAM;AAAA,IACJ;AAAA,EACF,IAAI;AACJ,SAAO,IAAI,MAAM;AAAA,IACf;AAAA,IACA,OAAAF;AAAA,IACA,QAAAE;AAAA,EACF,CAAC;AACH;AAKA,SAASC,YAAW,OAAO;AACzB,SAAO,OAAO,UAAU;AAC1B;AAsCA,SAAS,QAAQ,KAAK,OAAO;AAC3B,SAAO,SAAUC,QAAO;AACtB,WAAO;AAAA,MACL,GAAGA;AAAA,MACH,CAAC,GAAG,GAAGC,YAAW,KAAK,IAAI,MAAMD,OAAM,GAAG,CAAC,IAAI;AAAA,IACjD;AAAA,EACF;AACF;AA8BA,SAAS,OAAO,OAAO;AACrB,SAAO,KAAK,IAAI,KAAK,GAAG,qBAAqB,CAAC;AAChD;AA0JA,SAAS,UAAU,OAAO;AACxB,SAAO;AAAA,IACL;AAAA,IACA,QAAQ;AAAA,EACV;AACF;;;A4MhcY,IAAAE,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;IAAA,iBAAA,CAAAC,mBAAL;AACLA,iBAAA,QAAS,IAAA;AACTA,iBAAA,SAAU,IAAA;AACVA,iBAAA,WAAY,IAAA;AACZA,iBAAA,SAAU,IAAA;AACVA,iBAAA,YAAa,IAAA;AALHA,SAAAA;AAAA,GAAA,iBAAA,CAAA,CAAA;AAQA,IAAA,cAAA,CAAAC,gBAAL;AACLA,cAAA,WAAY,IAAA;AACZA,cAAA,YAAa,IAAA;AACbA,cAAA,eAAgB,IAAA;AAChBA,cAAA,kBAAmB,IAAA;AAJTA,SAAAA;AAAA,GAAA,cAAA,CAAA,CAAA;;;ACdL,IAAM,QAAQ;EACnB,EAAE,MAAM,QAAQ;EAChB,UAAsB;IACpB,gBAAgB,CAAA;IAChB,qBAAqB,CAAA;EAAC,CACvB;AACH;AAEO,IAAM,kBAAkD,MAAM;EACnE,OAAO,CAACC,WAAsBA,OAAM,cAAc;AACpD;AAEO,IAAM,mBAA8D,MAAM;EAC/E,OAAO,CAACA,WAAsBA,OAAM,eAAe;AACrD;AAEO,IAAM,cAAmD,MAAM;EACpE,OAAO,CAACA,WAAsBA,OAAM,UAAU;AAChD;AAEO,IAAM,eAAqD,MAAM;EACtE,OAAO,CAACA,WAAsBA,OAAM,WAAW;AACjD;AAEO,IAAM,iBAAiD,MAAM;EAClE,OAAO,CAACA,WAAsBA,OAAM,aAAa;AACnD;AAEa,IAAA,cAA8C,MAAM,KAAK,OAAO,CAACA,WAAsBA,OAAM,UAAU,CAAC;AAE9G,IAAM,gBAAgD,MAAM;EACjE,OAAO,CAACA,WAAsBA,OAAM,YAAY;AAClD;AAEO,IAAM,uBAA2E,MAAM;EAC5F,OAAO,CAACA,WAAsBA,OAAM,mBAAmB;AACzD;AAEO,SAAS,oBAAoB,UAA0D;AAC5F,QAAM,OAAO,QAAQ,oBAAoB,QAAQ,CAAC;AACpD;AAEO,SAAS,WAAW,SAA8B;AACvD,MAAI,CAAC,OAAO,OAAO,aAAa,EAAE,SAAS,OAAO,GAAG;AACnD,UAAM,IAAI,MAAM,mBAAmB,OAAO,oBAAoB;EAAA;AAGhE,QAAM,OAAO,QAAQ,mBAAmB,OAAO,CAAC;AAClD;AAEO,SAAS,cAAc,OAA0B;AACtD,QAAM,OAAO,QAAQ,cAAc,KAAK,CAAC;AAC3C;AAEO,SAAS,cAAc,OAA2B;AACvD,QAAM,OAAO,QAAQ,eAAe,KAAK,CAAC;AAC5C;AAEO,SAAS,kBAAkB,MAA0B;AAC1D,QAAM,OAAO,QAAQ,kBAAkB,IAAI,CAAC;AAC9C;AAEO,SAAS,WAAW,SAAuB;AAChD,QAAM,OAAO,QAAQ,iBAAiB,OAAO,CAAC;AAChD;AAEO,SAAS,gBAAsB;AACpC,QAAM,OAAO,QAAQ,iBAAiB,MAAS,CAAC;AAClD;AAEO,SAAS,cAAc,KAAmB;AAC/C,QAAM,OAAO,QAAQ,cAAc,GAAG,CAAC;AACzC;;;ACjEO,IAAM,oBAAN,MAA8C;EAKnD,IAAY,iBAAkC;AAC5C,UAAM,EAAE,iBAAA,IAAqB,MAAM,SAAS;AAE5C,QAAI,CAAC,kBAAkB;AACrB,YAAM,EAAE,MAAM,IAAI,SAAS,8BAA8B;IAAA;AAGrD,UAAA,SAAsC,KAAK,QAAQ;MACvD,CAAC,QAAkC,IAAI,cAAc;IAAA;AAGvD,QAAI,CAAC,QAAQ;AACX,YAAM,EAAE,MAAM,IAAI,SAAS,8BAA8B;IAAA;AAGpD,WAAA;EAAA;EAGT,YAAY,QAAiC;AAC3C,SAAK,UAAU,OAAO;AACtB,QAAI,OAAO,iBAAuB,MAAA,UAAU,OAAO,gBAAgB;AACnE,eAAW,OAAO,OAAO;AAEnB,UAAA,aAAsC,OAAO,SAAS,OAAO;AACnE,QAAI,YAAY;AACd,oBAAc,UAAU;IAAA;AAG1B,QAAI,OAAO,aAAa;AACtB,oBAAc,OAAO,WAAW;IAAA;AAGlC,SAAK,oBAAoB,EAAE,KAAK,CAAC,UAAoC;AACnE,wBAAkB,KAAK;IAAA,CACxB;EAAA;;;;;EAOH,MAAa,sBAAmD;AAC9D,WAAO,QAAQ;MACb,KAAK,QAAQ,IAAI,OAAO,QAAoD;AACpE,cAAAC,SAAwB,IAAI,QAAQ,CAAKC,OAAA,WAAW,MAAMA,GAAE,KAAK,GAAG,GAAG,CAAC;AACvE,eAAA;UACL,IAAI,IAAI;UACR,MAAM,IAAI;UACV,MAAM,IAAI;UACV,MAAM,IAAI;UACV,aAAa,MAAM,QAAQ,KAAK,CAACD,QAAO,IAAI,YAAY,CAAC,CAAC;UAC1D,mBAAmB,MAAM,QAAQ,KAAK;YACpCA;YAAO,IAAI,oBAAoB,IAAI,kBAAA,IAAsB,QAAQ,QAAQ,KAAK;UAAA,CAC/E;UACD,KAAK,IAAI;QAAA;MACX,CACD;IAAA;EACH;EAGK,UAAU,IAAkB;AAC3B,UAAA,SAAsC,KAAK,QAAQ;MACvD,CAAC,QAAkC,IAAI,cAAc;IAAA;AAGvD,QAAI,CAAC,QAAQ;AACX,YAAM,IAAI,MAAM,cAAc,EAAE,oBAAoB;IAAA;AAGtD,wBAAoB,OAAO,SAAS;EAAA;EAGtC,MAAa,WAAW,QAAwF;AAC9G,UAAM,EAAE,QAAQ,IAAI,MAAM,KAAK,eAAe,WAAW,MAAM;AAC/D,eAAW,OAAO;AAClB,WAAO,EAAE,QAAQ;EAAA;EAGnB,MAAa,gBACX,KACA,MAO0D;AACnD,WAAA,KAAK,eAAe,gBAAgB,KAAK;MAC9C,GAAG;MACH,mBAAmB,MAAM,qBAAqB,MAAM,SAAA,EAAW;IAAA,CAChE;EAAA;EAGH,MAAa,cACX,WACA,MAK8D;AACvD,WAAA,KAAK,eAAe,cAAc,WAAW;MAClD,GAAG;MACH,mBAAmB,MAAM,qBAAqB,MAAM,SAAA,EAAW;IAAA,CAChE;EAAA;EAGH,MAAa,YACX,SACA,MAK4D;AACrD,WAAA,KAAK,eAAe,YAAY,SAAS;MAC9C,GAAG;MACH,mBAAmB,MAAM,qBAAqB,MAAM,SAAA,EAAW;IAAA,CAChE;EAAA;EAGH,MAAM,aAAsE;AACnE,WAAA,KAAK,eAAe,WAAW;EAAA;EAGxC,MAAM,aAA4B;AAClB,kBAAA;EAAA;;EAIT,kBAA2B;AACzB,WAAA,CAAC,CAAC,KAAK;EAAA;;;;;EAOT,cAAc,QAKZ;AACD,UAAA,YACJ,OAAO,OAAO,cAAc,WACvB,SAAS,cAAc,OAAO,SAAS,IACxC,OAAO;AAEb,QAAI,CAAC,UAAiB,OAAA,IAAI,MAAM,4BAA4B;AAElD,cAAA;MACR;MACA,MAAM;AACJ,aAAK,UAAU;UACb,kBAAkB,CAAU,WAAA;AAC1B,gCAAoB,OAAO,EAAE;AACxB,iBAAA,WAAA,EAAa,KAAK,CAACC,OAA2B,OAAO,UAAUA,EAAC,CAAC;UAAA;QACxE,CACD,EAAE,KAAK;MAAA;MAEV;IAAA;AAGE,QAAA,CAAC,OAAO,aAAc;AAEpB,UAAA,eACJ,OAAO,OAAO,iBAAiB,WAC1B,SAAS,cAAc,OAAO,YAAY,IAC3C,OAAO;AAEb,QAAI,CAAC,aAAoB,OAAA,IAAI,MAAM,+BAA+B;AAErD,iBAAA;MACX;MACA,MAAM;AACJ,eAAO,aAAa;AACN,sBAAA;AAEV,YAAA,KAAK,eAAe,YAAY;AAC7B,eAAA,eAAe,WAAW,EAAE,KAAK;QAAA;MACxC;MAEF;IAAA;EACF;;;;;;;;;;;;EAcF,MAAa,aAAa,QAQR;AAChB,QAAI,KAAK,eAAe;AAChB,YAAA,IAAI,MAAM,+CAA+C;IAAA;AAG5D,SAAA,gBAAgB,SAAS,cAAc,wBAAwB;AAEpE,QAAI,OAAO,YAAY;AACrB,WAAK,cAAc,aAAa,cAAc,OAAO,UAAU;IAAA;AAGjE,QAAI,OAAO,YAAY;AACrB,oBAAc,OAAO,UAAU;IAAA;AAG1B,WAAA,UAAU,YAAY,KAAK,aAAa;AAE/C,SAAK,cAAc;MACjB;MACA,MAAM;AACJ,aAAK,UAAU;UACb,kBAAkB,CAAU,WAAA;AAC1B,gCAAoB,OAAO,EAAE;AACxB,iBAAA,WAAA,EACF,KAAK,CAACA,OAA2B,OAAO,UAAUA,EAAC,CAAC,EACpD,MAAM,CAAO,QAAA;AACZ,kBAAI,OAAO,QAAgB,QAAA,QAAQ,GAAG;YAAA,CACvC;UAAA;UAEL,UAAU,CAAC,QAAqB;AAC9B,gBAAI,OAAO,SAAiB,QAAA,SAAS,GAAG;UAAA;QAC1C,CACD;MAAA;MAEH;IAAA;AAGF,SAAK,cAAc;MACjB;MACA,MAAM;AACJ,eAAO,aAAa;AAEhB,YAAA,KAAK,eAAe,YAAY;AAClC,eAAK,eAAe,WAAW;QAAA;MACjC;MAEF;IAAA;EACF;;;;;;EAQF,MAAa,aAAa,QAAsD;AAC1E,QAAA,CAAC,KAAK,eAAe;AACjB,YAAA,IAAI,MAAM,oDAAoD;IAAA;AAGlE,QAAA,QAAQ,mBAAmB,MAAM;AACnC,WAAK,cAAc,WAAW;IAAA;AAGhC,SAAK,cAAc,OAAO;AAC1B,WAAO,KAAK;EAAA;;;EAKd,MAAa,UAAU,QAKL;AAChB,QAAI,KAAK,gBAAgB,CAAC,KAAK,eAAe;AACtC,YAAA,IAAI,MAAM,2CAA2C;IAAA,OACtD;AACA,WAAA,eAAe,SAAS,cAAc,uBAAuB;IAAA;AAG9D,UAAA,mBAAuC,MAAM,KAAK,oBAAoB;AAC5E,sBAAkB,gBAAgB;AAE7B,SAAA,aAAa,aAAa,aAAa,EAAE;AAE9C,QAAI,OAAO,YAAY;AACrB,WAAK,aAAa,aAAa,cAAc,OAAO,UAAU;IAAA;AAGhE,QAAI,OAAO,kBAAkB;AAC3B,WAAK,aAAa,aAAa,oBAAoB,OAAO,gBAAgB;IAAA;AAGnE,aAAA,KAAK,YAAY,KAAK,YAAY;AAErC,UAAA,WAAW,CAAC,UAAuB;AAChC,aAAA,iBAAiB,MAAM,MAAM;AAGpC,WAAK,aAAa,oBAAoB,mBAAmB,UAAU,KAAK;AAG/D,eAAA,KAAK,YAAY,KAAK,YAAY;AAC3C,WAAK,eAAe;IAAA;AAItB,SAAK,aAAa,iBAAiB,mBAAmB,UAAU,KAAK;AAE/D,UAAA,gBAAgB,CAAC,UAAuB;AAC5C,UAAI,OAAO,UAAU;AACZ,eAAA,SAAS,MAAM,MAAM;MAAA;AAI9B,WAAK,aAAa,oBAAoB,mBAAmB,UAAU,KAAK;AAGxE,WAAK,aAAa,oBAAoB,gBAAgB,eAAe,KAAK;AAGjE,eAAA,KAAK,YAAY,KAAK,YAAY;AAC3C,WAAK,eAAe;IAAA;AAItB,SAAK,aAAa,iBAAiB,gBAAgB,eAAe,KAAK;EAAA;;AAG3E;A;;;;;;;AClXA,IAAAC,iBAAA;AAAA,IAAAA,iBAAA;AAAA,IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;AAMA,IAAM,YAAY;AAGlB,IAAMC,UAAS;AAKR,IAAM,8BACXA,QAAO,eACNA,QAAO,aAAa,UAAaA,QAAO,SAAS,iBAClD,wBAAwB,SAAS,aACjC,aAAa,cAAc;AAkB7B,IAAM,oBAAoB,OAAM;AAEhC,IAAM,cAAc,oBAAI,QAAO;AASzB,IAAO,YAAP,MAAgB;EAOpB,YACE,SACA,SACA,WAAiB;AARnB,SAAC,cAAc,IAAI;AAUjB,QAAI,cAAc,mBAAmB;AACnC,YAAM,IAAI,MACR,mEAAmE;IAEvE;AACA,SAAK,UAAU;AACf,SAAK,WAAW;EAClB;;;EAIA,IAAI,aAAU;AAGZ,QAAI,aAAa,KAAK;AACtB,UAAM,UAAU,KAAK;AACrB,QAAI,+BAA+B,eAAe,QAAW;AAC3D,YAAM,YAAY,YAAY,UAAa,QAAQ,WAAW;AAC9D,UAAI,WAAW;AACb,qBAAa,YAAY,IAAI,OAAO;MACtC;AACA,UAAI,eAAe,QAAW;AAC5B,SAAC,KAAK,cAAc,aAAa,IAAI,cAAa,GAAI,YACpD,KAAK,OAAO;AAEd,YAAI,WAAW;AACb,sBAAY,IAAI,SAAS,UAAU;QACrC;MACF;IACF;AACA,WAAO;EACT;EAEA,WAAQ;AACN,WAAO,KAAK;EACd;;AAWF,IAAM,oBAAoB,CAAC,UAAkC;AAE3D,MAAK,MAAoB,cAAc,MAAM,MAAM;AACjD,WAAQ,MAAoB;EAC9B,WAAW,OAAO,UAAU,UAAU;AACpC,WAAO;EACT,OAAO;AACL,UAAM,IAAI,MACR,mEACK,KAAK,sFACkB;EAEhC;AACF;AASO,IAAM,YAAY,CAAC,UACxB,IAAK,UACH,OAAO,UAAU,WAAW,QAAQ,OAAO,KAAK,GAChD,QACA,iBAAiB;AAWd,IAAM,MAAM,CACjB,YACG,WACU;AACb,QAAM,UACJ,QAAQ,WAAW,IACf,QAAQ,CAAC,IACT,OAAO,OACL,CAAC,KAAK,GAAG,QAAQ,MAAM,kBAAkB,CAAC,IAAI,QAAQ,MAAM,CAAC,GAC7D,QAAQ,CAAC,CAAC;AAElB,SAAO,IAAK,UACV,SACA,SACA,iBAAiB;AAErB;AAWO,IAAM,cAAc,CACzB,YACA,WACE;AACF,MAAI,6BAA6B;AAC9B,eAA0B,qBAAqB,OAAO,IAAI,CAACC,OAC1DA,cAAa,gBAAgBA,KAAIA,GAAE,UAAW;EAElD,OAAO;AACL,eAAWA,MAAK,QAAQ;AACtB,YAAM,QAAQ,SAAS,cAAc,OAAO;AAE5C,YAAM,QAASD,QAAe,UAAU;AACxC,UAAI,UAAU,QAAW;AACvB,cAAM,aAAa,SAAS,KAAK;MACnC;AACA,YAAM,cAAeC,GAAgB;AACrC,iBAAW,YAAY,KAAK;IAC9B;EACF;AACF;AAEA,IAAM,0BAA0B,CAAC,UAAwB;AACvD,MAAI,UAAU;AACd,aAAW,QAAQ,MAAM,UAAU;AACjC,eAAW,KAAK;EAClB;AACA,SAAO,UAAU,OAAO;AAC1B;AAEO,IAAM,qBACX,+BACC,aAAaD,QAAO,kBAAkB,SACnC,CAACC,OAAyBA,KAC1B,CAACA,OACCA,cAAa,gBAAgB,wBAAwBA,EAAC,IAAIA;;;ADhKlE,IAAM,EACJ,IACA,gBACA,0BACA,qBACA,uBACA,eAAc,IACZ;AAEJ,IAAMC,aAAY;AAGlB,IAAMC,UAAS;AAEf,IAAID,YAAW;AACb,EAAAC,QAAO,mBAAmB;AAC5B;AAEA,IAAM,WAAW;AAEjB,IAAI;AAEJ,IAAM,eAAgBA,QACnB;AAMH,IAAM,iCAAiC,eAClC,aAAa,cACd;AAEJ,IAAM,kBAAkB,WACpBA,QAAO,wCACPA,QAAO;AAEX,IAAI,UAAU;AAGZ,EAAAA,QAAO,sBAAsB,oBAAI,IAAG;AAOpC,iBAAe,CAAC,MAAc,YAAmB;AAC/C,eAAW,4BAA4B,IAAI;AAC3C,QACE,CAACA,QAAO,kBAAmB,IAAI,OAAO,KACtC,CAACA,QAAO,kBAAmB,IAAI,IAAI,GACnC;AACA,cAAQ,KAAK,OAAO;AACpB,MAAAA,QAAO,kBAAmB,IAAI,OAAO;IACvC;EACF;AAEA,iBAAe,MAAK;AAClB,iBACE,YACA,qDAAqD;AAIvD,QAAIA,QAAO,UAAU,SAAS,oBAAoB,QAAW;AAC3D,mBACE,4BACA,0GACwD;IAE5D;EACF,CAAC;AACH;AAwCA,IAAM,gBAAgB,WAClB,CAAC,UAA0C;AACzC,QAAM,aAAcA,QACjB;AACH,MAAI,CAAC,YAAY;AACf;EACF;AACA,EAAAA,QAAO,cACL,IAAI,YAA6C,aAAa;IAC5D,QAAQ;GACT,CAAC;AAEN,IACA;AASJ,IAAM,4BAA4B,CAChC,MACA,SACM;AA0KD,IAAM,mBAA8C;EACzD,YAAY,OAAgB,MAAc;AACxC,YAAQ,MAAM;MACZ,KAAK;AACH,gBAAQ,QAAQ,iCAAiC;AACjD;MACF,KAAK;MACL,KAAK;AAGH,gBAAQ,SAAS,OAAO,QAAQ,KAAK,UAAU,KAAK;AACpD;IACJ;AACA,WAAO;EACT;EAEA,cAAc,OAAsB,MAAc;AAChD,QAAI,YAAqB;AACzB,YAAQ,MAAM;MACZ,KAAK;AACH,oBAAY,UAAU;AACtB;MACF,KAAK;AACH,oBAAY,UAAU,OAAO,OAAO,OAAO,KAAK;AAChD;MACF,KAAK;MACL,KAAK;AAIH,YAAI;AAEF,sBAAY,KAAK,MAAM,KAAM;QAC/B,SAASC,IAAG;AACV,sBAAY;QACd;AACA;IACJ;AACA,WAAO;EACT;;AAWK,IAAM,WAAuB,CAAC,OAAgB,QACnD,CAAC,GAAG,OAAO,GAAG;AAEhB,IAAM,6BAAkD;EACtD,WAAW;EACX,MAAM;EACN,WAAW;EACX,SAAS;EACT,YAAY;EACZ,YAAY;;AAsBb,OAA8B,aAAa,OAAO,UAAU;AAc7DD,QAAO,wBAAwB,oBAAI,QAAO;AAWpC,IAAgB,kBAAhB,cASI,YAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAqFnB,OAAO,eAAe,aAAwB;AAC5C,SAAK,UAAS;AACd,KAAC,KAAK,kBAAkB,CAAA,GAAI,KAAK,WAAW;EAC9C;;;;;;EAuGA,WAAW,qBAAkB;AAE3B,SAAK,SAAQ;AAKb,WACE,KAAK,4BAA4B,CAAC,GAAG,KAAK,yBAAyB,KAAI,CAAE;EAE7E;;;;;;;;;;;;;;;;;;;;;;;;;;EA6BA,OAAO,eACL,MACA,UAA+B,4BAA0B;AAGzD,QAAI,QAAQ,OAAO;AAChB,cAAsD,YAAY;IACrE;AACA,SAAK,UAAS;AAGd,QAAI,KAAK,UAAU,eAAe,IAAI,GAAG;AACvC,gBAAU,OAAO,OAAO,OAAO;AAC/B,cAAQ,UAAU;IACpB;AACA,SAAK,kBAAkB,IAAI,MAAM,OAAO;AACxC,QAAI,CAAC,QAAQ,YAAY;AACvB,YAAM,MAAM;;;QAGR,OAAO,IAAI,GAAG,OAAO,IAAI,CAAC,sBAAsB;UAChD,OAAM;AACV,YAAM,aAAa,KAAK,sBAAsB,MAAM,KAAK,OAAO;AAChE,UAAI,eAAe,QAAW;AAC5B,uBAAe,KAAK,WAAW,MAAM,UAAU;MACjD;IACF;EACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA6BU,OAAO,sBACf,MACA,KACA,SAA4B;AAE5B,UAAM,EAAC,KAAK,IAAG,IAAI,yBAAyB,KAAK,WAAW,IAAI,KAAK;MACnE,MAAG;AACD,eAAO,KAAK,GAAwB;MACtC;MACA,IAA2B,GAAU;AAClC,aAAqD,GAAG,IAAI;MAC/D;;AAEF,QAAI,YAAY,OAAO,MAAM;AAC3B,UAAI,YAAY,yBAAyB,KAAK,WAAW,IAAI,KAAK,CAAA,IAAK;AACrE,cAAM,IAAI,MACR,SAAS,KAAK,UAAU,OAAO,IAAI,CAAC,CAAC,OAChC,KAAK,IAAI,4JAEmD;MAErE;AACA,mBACE,oCACA,SAAS,KAAK,UAAU,OAAO,IAAI,CAAC,CAAC,OAChC,KAAK,IAAI,uHAEY;IAE9B;AACA,WAAO;MACL;MACA,IAA2B,OAAc;AACvC,cAAM,WAAW,KAAK,KAAK,IAAI;AAC/B,aAAK,KAAK,MAAM,KAAK;AACrB,aAAK,cAAc,MAAM,UAAU,OAAO;MAC5C;MACA,cAAc;MACd,YAAY;;EAEhB;;;;;;;;;;;;;;;EAgBA,OAAO,mBAAmB,MAAiB;AACzC,WAAO,KAAK,kBAAkB,IAAI,IAAI,KAAK;EAC7C;;;;;;;;;;;;EAgBQ,OAAO,YAAS;AACtB,QACE,KAAK,eAAe,0BAA0B,qBAAqB,IAAI,CAAC,GACxE;AAEA;IACF;AAEA,UAAM,YAAY,eAAe,IAAI;AACrC,cAAU,SAAQ;AAKlB,QAAI,UAAU,kBAAkB,QAAW;AACzC,WAAK,gBAAgB,CAAC,GAAG,UAAU,aAAa;IAClD;AAEA,SAAK,oBAAoB,IAAI,IAAI,UAAU,iBAAiB;EAC9D;;;;;;;;;;;;EAaU,OAAO,WAAQ;AACvB,QAAI,KAAK,eAAe,0BAA0B,aAAa,IAAI,CAAC,GAAG;AACrE;IACF;AACA,SAAK,YAAY;AACjB,SAAK,UAAS;AAGd,QAAI,KAAK,eAAe,0BAA0B,cAAc,IAAI,CAAC,GAAG;AACtE,YAAM,QAAQ,KAAK;AACnB,YAAM,WAAW;QACf,GAAG,oBAAoB,KAAK;QAC5B,GAAG,sBAAsB,KAAK;;AAEhC,iBAAW,KAAK,UAAU;AACxB,aAAK,eAAe,GAAG,MAAM,CAAC,CAAC;MACjC;IACF;AAGA,UAAM,WAAW,KAAK,OAAO,QAAQ;AACrC,QAAI,aAAa,MAAM;AACrB,YAAM,aAAa,oBAAoB,IAAI,QAAQ;AACnD,UAAI,eAAe,QAAW;AAC5B,mBAAW,CAAC,GAAG,OAAO,KAAK,YAAY;AACrC,eAAK,kBAAkB,IAAI,GAAG,OAAO;QACvC;MACF;IACF;AAGA,SAAK,2BAA2B,oBAAI,IAAG;AACvC,eAAW,CAAC,GAAG,OAAO,KAAK,KAAK,mBAAmB;AACjD,YAAM,OAAO,KAAK,2BAA2B,GAAG,OAAO;AACvD,UAAI,SAAS,QAAW;AACtB,aAAK,yBAAyB,IAAI,MAAM,CAAC;MAC3C;IACF;AAEA,SAAK,gBAAgB,KAAK,eAAe,KAAK,MAAM;AAEpD,QAAI,UAAU;AACZ,UAAI,KAAK,eAAe,gBAAgB,GAAG;AACzC,qBACE,+BACA,qHAC4D;MAEhE;AACA,UAAI,KAAK,eAAe,uBAAuB,GAAG;AAChD,qBACE,uCACA,4HAC4D;MAEhE;IACF;EACF;;;;;;;;;;;;;;;EA4BU,OAAO,eACf,QAAuB;AAEvB,UAAM,gBAAgB,CAAA;AACtB,QAAI,MAAM,QAAQ,MAAM,GAAG;AAIzB,YAAM,MAAM,IAAI,IAAK,OAA0B,KAAK,QAAQ,EAAE,QAAO,CAAE;AAEvE,iBAAWE,MAAK,KAAK;AACnB,sBAAc,QAAQ,mBAAmBA,EAAsB,CAAC;MAClE;IACF,WAAW,WAAW,QAAW;AAC/B,oBAAc,KAAK,mBAAmB,MAAM,CAAC;IAC/C;AACA,WAAO;EACT;;;;;EAaQ,OAAO,2BACb,MACA,SAA4B;AAE5B,UAAM,YAAY,QAAQ;AAC1B,WAAO,cAAc,QACjB,SACA,OAAO,cAAc,WACnB,YACA,OAAO,SAAS,WACd,KAAK,YAAW,IAChB;EACV;EAiDA,cAAA;AACE,UAAK;AA9WC,SAAA,uBAAwC;AAuUhD,SAAA,kBAAkB;AAOlB,SAAA,aAAa;AAwBL,SAAA,uBAA2C;AASjD,SAAK,aAAY;EACnB;;;;;EAMQ,eAAY;AAClB,SAAK,kBAAkB,IAAI,QACzB,CAAC,QAAS,KAAK,iBAAiB,GAAI;AAEtC,SAAK,sBAAsB,oBAAI,IAAG;AAGlC,SAAK,yBAAwB;AAG7B,SAAK,cAAa;AACjB,SAAK,YAAuC,eAAe,QAAQ,CAACC,OACnEA,GAAE,IAAI,CAAC;EAEX;;;;;;;;;;EAWA,cAAc,YAA8B;AAC1C,KAAC,KAAK,kBAAkB,oBAAI,IAAG,GAAI,IAAI,UAAU;AAKjD,QAAI,KAAK,eAAe,UAAa,KAAK,aAAa;AACrD,iBAAW,gBAAe;IAC5B;EACF;;;;;EAMA,iBAAiB,YAA8B;AAC7C,SAAK,eAAe,OAAO,UAAU;EACvC;;;;;;;EAQQ,2BAAwB;AAC9B,UAAM,qBAAqB,oBAAI,IAAG;AAClC,UAAM,oBAAqB,KAAK,YAC7B;AACH,eAAW,KAAK,kBAAkB,KAAI,GAAoC;AACxE,UAAI,KAAK,eAAe,CAAC,GAAG;AAC1B,2BAAmB,IAAI,GAAG,KAAK,CAAC,CAAC;AACjC,eAAO,KAAK,CAAC;MACf;IACF;AACA,QAAI,mBAAmB,OAAO,GAAG;AAC/B,WAAK,uBAAuB;IAC9B;EACF;;;;;;;;;;EAWU,mBAAgB;AACxB,UAAM,aACJ,KAAK,cACL,KAAK,aACF,KAAK,YAAuC,iBAAiB;AAElE,gBACE,YACC,KAAK,YAAuC,aAAa;AAE5D,WAAO;EACT;;;;;;EAOA,oBAAiB;AAEd,SAA4C,eAC3C,KAAK,iBAAgB;AACvB,SAAK,eAAe,IAAI;AACxB,SAAK,eAAe,QAAQ,CAAC,MAAM,EAAE,gBAAe,CAAE;EACxD;;;;;;;EAQU,eAAe,kBAAyB;EAAG;;;;;;;EAQrD,uBAAoB;AAClB,SAAK,eAAe,QAAQ,CAAC,MAAM,EAAE,mBAAkB,CAAE;EAC3D;;;;;;;;;;;;;EAcA,yBACE,MACA,MACA,OAAoB;AAEpB,SAAK,sBAAsB,MAAM,KAAK;EACxC;EAEQ,sBAAsB,MAAmB,OAAc;AAC7D,UAAM,iBACJ,KAAK,YACL;AACF,UAAM,UAAU,eAAe,IAAI,IAAI;AACvC,UAAM,OACJ,KAAK,YACL,2BAA2B,MAAM,OAAO;AAC1C,QAAI,SAAS,UAAa,QAAQ,YAAY,MAAM;AAClD,YAAM,YACH,QAAQ,WAAyC,gBAClD,SACK,QAAQ,YACT;AACN,YAAM,YAAY,UAAU,YAAa,OAAO,QAAQ,IAAI;AAC5D,UACE,YACC,KAAK,YAAuC,gBAAiB,SAC5D,WAAW,KAEb,cAAc,QACd;AACA,qBACE,6BACA,+BAA+B,IAAc,qCACnB,KAAK,SAAS,4HAEC;MAE7C;AASA,WAAK,uBAAuB;AAC5B,UAAI,aAAa,MAAM;AACrB,aAAK,gBAAgB,IAAI;MAC3B,OAAO;AACL,aAAK,aAAa,MAAM,SAAmB;MAC7C;AAEA,WAAK,uBAAuB;IAC9B;EACF;;EAGA,sBAAsB,MAAc,OAAoB;AACtD,UAAM,OAAO,KAAK;AAGlB,UAAM,WAAY,KAAK,yBAA0C,IAAI,IAAI;AAGzE,QAAI,aAAa,UAAa,KAAK,yBAAyB,UAAU;AACpE,YAAM,UAAU,KAAK,mBAAmB,QAAQ;AAChD,YAAM,YACJ,OAAO,QAAQ,cAAc,aACzB,EAAC,eAAe,QAAQ,UAAS,IACjC,QAAQ,WAAW,kBAAkB,SACnC,QAAQ,YACR;AAER,WAAK,uBAAuB;AAC5B,YAAM,iBAAiB,UAAU,cAAe,OAAO,QAAQ,IAAI;AACnE,WAAK,QAAsB,IACzB,kBACA,KAAK,iBAAiB,IAAI,QAAQ;MAEjC;AAEH,WAAK,uBAAuB;IAC9B;EACF;;;;;;;;;;;;;;;EAgBA,cACE,MACA,UACA,SAA6B;AAG7B,QAAI,SAAS,QAAW;AACtB,UAAI,YAAa,gBAA4B,OAAO;AAClD,qBACE,IACA,yPAAyP;MAE7P;AACA,YAAM,OAAO,KAAK;AAClB,YAAM,WAAW,KAAK,IAAkB;AACxC,kBAAY,KAAK,mBAAmB,IAAI;AACxC,YAAM,WACH,QAAQ,cAAc,UAAU,UAAU,QAAQ;;;;;;MAOlD,QAAQ,cACP,QAAQ,WACR,aAAa,KAAK,iBAAiB,IAAI,IAAI,KAC3C,CAAC,KAAK,aAAa,KAAK,2BAA2B,MAAM,OAAO,CAAE;AACtE,UAAI,SAAS;AACX,aAAK,iBAAiB,MAAM,UAAU,OAAO;MAC/C,OAAO;AAEL;MACF;IACF;AACA,QAAI,KAAK,oBAAoB,OAAO;AAClC,WAAK,kBAAkB,KAAK,gBAAe;IAC7C;EACF;;;;EAKA,iBACE,MACA,UACA,EAAC,YAAY,SAAS,QAAO,GAC7B,iBAAyB;AAIzB,QAAI,cAAc,EAAE,KAAK,oBAAoB,oBAAI,IAAG,GAAI,IAAI,IAAI,GAAG;AACjE,WAAK,gBAAgB,IACnB,MACA,mBAAmB,YAAY,KAAK,IAAkB,CAAC;AAIzD,UAAI,YAAY,QAAQ,oBAAoB,QAAW;AACrD;MACF;IACF;AAGA,QAAI,CAAC,KAAK,oBAAoB,IAAI,IAAI,GAAG;AAGvC,UAAI,CAAC,KAAK,cAAc,CAAC,YAAY;AACnC,mBAAW;MACb;AACA,WAAK,oBAAoB,IAAI,MAAM,QAAQ;IAC7C;AAKA,QAAI,YAAY,QAAQ,KAAK,yBAAyB,MAAM;AAC1D,OAAC,KAAK,2BAA2B,oBAAI,IAAG,GAAiB,IAAI,IAAI;IACnE;EACF;;;;EAKQ,MAAM,kBAAe;AAC3B,SAAK,kBAAkB;AACvB,QAAI;AAGF,YAAM,KAAK;IACb,SAASF,IAAG;AAKV,cAAQ,OAAOA,EAAC;IAClB;AACA,UAAM,SAAS,KAAK,eAAc;AAIlC,QAAI,UAAU,MAAM;AAClB,YAAM;IACR;AACA,WAAO,CAAC,KAAK;EACf;;;;;;;;;;;;;;;;;;EAmBU,iBAAc;AACtB,UAAM,SAAS,KAAK,cAAa;AACjC,QACE,YACC,KAAK,YAAuC,gBAAiB,SAC5D,sBAAsB,KAExB,OAAQ,QAAoD,SAC1D,YACF;AACA,mBACE,wBACA,WAAW,KAAK,SAAS,mIAEM;IAEnC;AACA,WAAO;EACT;;;;;;;;;;;EAYU,gBAAa;AAIrB,QAAI,CAAC,KAAK,iBAAiB;AACzB;IACF;AACA,oBAAgB,EAAC,MAAM,SAAQ,CAAC;AAChC,QAAI,CAAC,KAAK,YAAY;AAGnB,WAA4C,eAC3C,KAAK,iBAAgB;AACvB,UAAI,UAAU;AAKZ,cAAM,OAAO,KAAK;AAClB,cAAM,qBAAqB,CAAC,GAAG,KAAK,kBAAkB,KAAI,CAAE,EAAE,OAC5D,CAAC,MAAM,KAAK,eAAe,CAAC,KAAK,KAAK,eAAe,IAAI,CAAC;AAE5D,YAAI,mBAAmB,QAAQ;AAC7B,gBAAM,IAAI,MACR,uCAAuC,KAAK,SAAS,kFAExC,mBAAmB,KAAK,IAAI,CAAC,yKAIjB;QAE7B;MACF;AAEA,UAAI,KAAK,sBAAsB;AAG7B,mBAAW,CAAC,GAAG,KAAK,KAAK,KAAK,sBAAsB;AAClD,eAAK,CAAe,IAAI;QAC1B;AACA,aAAK,uBAAuB;MAC9B;AAUA,YAAM,oBAAqB,KAAK,YAC7B;AACH,UAAI,kBAAkB,OAAO,GAAG;AAC9B,mBAAW,CAAC,GAAG,OAAO,KAAK,mBAAmB;AAC5C,gBAAM,EAAC,QAAO,IAAI;AAClB,gBAAM,QAAQ,KAAK,CAAe;AAClC,cACE,YAAY,QACZ,CAAC,KAAK,oBAAoB,IAAI,CAAC,KAC/B,UAAU,QACV;AACA,iBAAK,iBAAiB,GAAG,QAAW,SAAS,KAAK;UACpD;QACF;MACF;IACF;AACA,QAAI,eAAe;AACnB,UAAM,oBAAoB,KAAK;AAC/B,QAAI;AACF,qBAAe,KAAK,aAAa,iBAAiB;AAClD,UAAI,cAAc;AAChB,aAAK,WAAW,iBAAiB;AACjC,aAAK,eAAe,QAAQ,CAAC,MAAM,EAAE,aAAY,CAAE;AACnD,aAAK,OAAO,iBAAiB;MAC/B,OAAO;AACL,aAAK,cAAa;MACpB;IACF,SAASA,IAAG;AAGV,qBAAe;AAEf,WAAK,cAAa;AAClB,YAAMA;IACR;AAEA,QAAI,cAAc;AAChB,WAAK,YAAY,iBAAiB;IACpC;EACF;;;;;;;;;;;;;;;;;;;;;;EAuBU,WAAW,oBAAkC;EAAS;;;EAIhE,YAAY,mBAAiC;AAC3C,SAAK,eAAe,QAAQ,CAAC,MAAM,EAAE,cAAa,CAAE;AACpD,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,aAAa;AAClB,WAAK,aAAa,iBAAiB;IACrC;AACA,SAAK,QAAQ,iBAAiB;AAC9B,QACE,YACA,KAAK,mBACJ,KAAK,YAAuC,gBAAiB,SAC5D,kBAAkB,GAEpB;AACA,mBACE,oBACA,WAAW,KAAK,SAAS,8PAIyC;IAEtE;EACF;EAEQ,gBAAa;AACnB,SAAK,sBAAsB,oBAAI,IAAG;AAClC,SAAK,kBAAkB;EACzB;;;;;;;;;;;;;;;;;EAkBA,IAAI,iBAAc;AAChB,WAAO,KAAK,kBAAiB;EAC/B;;;;;;;;;;;;;;;;;;;;;;;;EAyBU,oBAAiB;AACzB,WAAO,KAAK;EACd;;;;;;;;;EAUU,aAAa,oBAAkC;AACvD,WAAO;EACT;;;;;;;;;;EAWU,OAAO,oBAAkC;AAIjD,SAAK,2BAA2B,KAAK,uBAAuB,QAAQ,CAAC,MACnE,KAAK,sBAAsB,GAAG,KAAK,CAAe,CAAC,CAAC;AAEtD,SAAK,cAAa;EACpB;;;;;;;;;;;EAYU,QAAQ,oBAAkC;EAAG;;;;;;;;;;;;;;;;;EAkB7C,aAAa,oBAAkC;EAAG;;AAniCrD,gBAAA,gBAA0C,CAAA;AAiT1C,gBAAA,oBAAoC,EAAC,MAAM,OAAM;AAuvBzD,gBACC,0BAA0B,qBAAqB,eAAe,CAAC,IAC7D,oBAAI,IAAG;AACV,gBACC,0BAA0B,aAAa,eAAe,CAAC,IACrD,oBAAI,IAAG;AAGX,kBAAkB,EAAC,gBAAe,CAAC;AAGnC,IAAI,UAAU;AAEZ,kBAAgB,kBAAkB;IAChC;IACA;;AAEF,QAAM,oBAAoB,SAAU,MAA4B;AAC9D,QACE,CAAC,KAAK,eAAe,0BAA0B,mBAAmB,IAAI,CAAC,GACvE;AACA,WAAK,kBAAkB,KAAK,gBAAiB,MAAK;IACpD;EACF;AACA,kBAAgB,gBAAgB,SAE9B,SAAoB;AAEpB,sBAAkB,IAAI;AACtB,QAAI,CAAC,KAAK,gBAAiB,SAAS,OAAO,GAAG;AAC5C,WAAK,gBAAiB,KAAK,OAAO;IACpC;EACF;AACA,kBAAgB,iBAAiB,SAE/B,SAAoB;AAEpB,sBAAkB,IAAI;AACtB,UAAME,KAAI,KAAK,gBAAiB,QAAQ,OAAO;AAC/C,QAAIA,MAAK,GAAG;AACV,WAAK,gBAAiB,OAAOA,IAAG,CAAC;IACnC;EACF;AACF;CAICH,QAAO,4BAA4B,CAAA,GAAI,KAAK,OAAO;AACpD,IAAI,YAAYA,QAAO,wBAAwB,SAAS,GAAG;AACzD,iBAAe,MAAK;AAClB,iBACE,qBACA,gFACuB;EAE3B,CAAC;AACH;;;AE/sDA,IAAAI,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;AAUA,IAAMC,YAAW;AACjB,IAAM,8BAA8B;AACpC,IAAM,0BAA0B;AAChC,IAAMC,aAAY;AAGlB,IAAMC,UAAS;AAmLf,IAAMC,iBAAgBH,YAClB,CAAC,UAAqC;AACpC,QAAM,aAAcE,QACjB;AACH,MAAI,CAAC,YAAY;AACf;EACF;AACA,EAAAA,QAAO,cACL,IAAI,YAAwC,aAAa;IACvD,QAAQ;GACT,CAAC;AAEN,IACA;AAIJ,IAAI,mBAAmB;AAEvB,IAAIE;AAEJ,IAAIJ,WAAU;AACZ,EAAAE,QAAO,sBAAsB,oBAAI,IAAG;AAOpC,EAAAE,gBAAe,CAAC,MAAc,YAAmB;AAC/C,eAAW,OACP,4BAA4B,IAAI,2BAChC;AACJ,QACE,CAACF,QAAO,kBAAmB,IAAI,OAAO,KACtC,CAACA,QAAO,kBAAmB,IAAI,IAAI,GACnC;AACA,cAAQ,KAAK,OAAO;AACpB,MAAAA,QAAO,kBAAmB,IAAI,OAAO;IACvC;EACF;AAEA,iBAAe,MAAK;AAClB,IAAAE,cACE,YACA,qDAAqD;EAEzD,CAAC;AACH;AAEA,IAAM,OACJ,2BACAF,QAAO,UAAU,SACjBA,QAAO,UAAU,YAAY,OACxBA,QAAO,SAAU,OAClB,CAAiB,SAAY;AAEnC,IAAMG,gBAAgBH,QAAyC;AAU/D,IAAM,SAASG,gBACXA,cAAa,aAAa,YAAY;EACpC,YAAY,CAACC,OAAMA;CACpB,IACD;AA0CJ,IAAM,mBAAmC,CAAC,UAAmB;AAC7D,IAAM,gBAAkC,CACtC,OACA,OACA,UACG;AAGL,IAAM,eAAe,CAAC,iBAAkC;AACtD,MAAI,CAAC,6BAA6B;AAChC;EACF;AACA,MAAI,6BAA6B,eAAe;AAC9C,UAAM,IAAI,MACR,qHAC8D;EAElE;AACA,6BAA2B;AAC7B;AAKA,IAAM,gDAAgD,MAAK;AACzD,6BAA2B;AAC7B;AAEA,IAAM,kBAAoC,CAAC,MAAM,MAAM,SAAQ;AAC7D,SAAO,yBAAyB,MAAM,MAAM,IAAI;AAClD;AAIA,IAAM,uBAAuB;AAM7B,IAAM,SAAS,OAAO,KAAK,OAAM,EAAG,QAAQ,CAAC,EAAE,MAAM,CAAC,CAAC;AAGvD,IAAM,cAAc,MAAM;AAI1B,IAAM,aAAa,IAAI,WAAW;AAElC,IAAM,IACJL,cAAaC,QAAO,aAAa,SAC5B;EACC,mBAAgB;AACd,WAAO,CAAA;EACT;IAEF;AAGN,IAAM,eAAe,MAAM,EAAE,cAAc,EAAE;AAI7C,IAAM,cAAc,CAAC,UACnB,UAAU,QAAS,OAAO,SAAS,YAAY,OAAO,SAAS;AACjE,IAAMK,WAAU,MAAM;AACtB,IAAMC,cAAa,CAAC,UAClBD,SAAQ,KAAK;AAEb,OAAQ,QAAgB,OAAO,QAAQ,MAAM;AAE/C,IAAM,aAAa;;AACnB,IAAM,kBAAkB;;AACxB,IAAM,YAAY;AAgBlB,IAAM,eAAe;AACrB,IAAM,gBAAgB;AACtB,IAAM,WAAW;AACjB,IAAM,mBAAmB;AAEzB,IAAM,kBAAkB;AAIxB,IAAM,mBAAmB;AAwBzB,IAAM,cAAc,IAAI,OACtB,KAAK,UAAU,OAAO,SAAS,MAAM,UAAU,KAAK,UAAU,OAAO,eAAe,gBACpF,GAAG;AAEL,IAAM,eAAe;AACrB,IAAM,iBAAiB;AACvB,IAAM,oBAAoB;AAC1B,IAAM,aAAa;AAEnB,IAAM,0BAA0B;AAChC,IAAM,0BAA0B;AAOhC,IAAM,iBAAiB;AAGvB,IAAM,cAAc;AACpB,IAAM,aAAa;AACnB,IAAM,gBAAgB;AAMtB,IAAM,iBAAiB;AACvB,IAAM,aAAa;AACnB,IAAM,gBAAgB;AACtB,IAAM,yBAAyB;AAC/B,IAAM,aAAa;AACnB,IAAM,eAAe;AACrB,IAAM,eAAe;AAwFrB,IAAM,MACJ,CAAuB,SACvB,CAAC,YAAkC,WAAwC;AAIzE,MAAIP,aAAY,QAAQ,KAAK,CAACM,OAAMA,OAAM,MAAS,GAAG;AACpD,YAAQ,KACN,kGAC8D;EAElE;AACA,MAAIN,WAAU;AAIZ,QACE,OAAO,KAAK,CAAC,QAAS,MAAkC,cAAc,CAAC,GACvE;AACA,MAAAI,cACE,IACA;8GACiH;IAErH;EACF;AACA,SAAO;;IAEL,CAAC,YAAY,GAAG;IAChB;IACA;;AAEJ;AAeK,IAAM,OAAO,IAAI,WAAW;AA0B5B,IAAM,MAAM,IAAI,UAAU;AA0B1B,IAAM,SAAS,IAAI,aAAa;AAMhC,IAAM,WAAW,OAAO,IAAI,cAAc;AAqB1C,IAAM,UAAU,OAAO,IAAI,aAAa;AAS/C,IAAM,gBAAgB,oBAAI,QAAO;AAqCjC,IAAM,SAAS,EAAE;EACf;EACA;;AAA2C;AAG7C,IAAI,2BAA6C;AAkBjD,SAAS,wBACP,KACA,eAAqB;AAOrB,MAAI,CAACG,SAAQ,GAAG,KAAK,CAAC,IAAI,eAAe,KAAK,GAAG;AAC/C,QAAI,UAAU;AACd,QAAIP,WAAU;AACZ,gBAAU;;;;;;;;;;UAWP,KAAI,EACJ,QAAQ,SAAS,IAAI;IAC1B;AACA,UAAM,IAAI,MAAM,OAAO;EACzB;AACA,SAAO,WAAW,SACd,OAAO,WAAW,aAAa,IAC9B;AACP;AAcA,IAAM,kBAAkB,CACtB,SACA,SACgC;AAOhC,QAAM,IAAI,QAAQ,SAAS;AAI3B,QAAM,YAA2B,CAAA;AACjC,MAAIS,QACF,SAAS,aAAa,UAAU,SAAS,gBAAgB,WAAW;AAKtE,MAAI;AAIJ,MAAI,QAAQ;AAEZ,WAASC,KAAI,GAAGA,KAAI,GAAGA,MAAK;AAC1B,UAAMJ,KAAI,QAAQI,EAAC;AAMnB,QAAI,mBAAmB;AACvB,QAAI;AACJ,QAAI,YAAY;AAChB,QAAI;AAIJ,WAAO,YAAYJ,GAAE,QAAQ;AAE3B,YAAM,YAAY;AAClB,cAAQ,MAAM,KAAKA,EAAC;AACpB,UAAI,UAAU,MAAM;AAClB;MACF;AACA,kBAAY,MAAM;AAClB,UAAI,UAAU,cAAc;AAC1B,YAAI,MAAM,aAAa,MAAM,OAAO;AAClC,kBAAQ;QACV,WAAW,MAAM,aAAa,MAAM,QAAW;AAE7C,kBAAQ;QACV,WAAW,MAAM,QAAQ,MAAM,QAAW;AACxC,cAAI,eAAe,KAAK,MAAM,QAAQ,CAAC,GAAG;AAGxC,8BAAkB,IAAI,OAAO,KAAK,MAAM,QAAQ,CAAC,IAAI,GAAG;UAC1D;AACA,kBAAQ;QACV,WAAW,MAAM,gBAAgB,MAAM,QAAW;AAChD,cAAIN,WAAU;AACZ,kBAAM,IAAI,MACR,kJACsE;UAE1E;AACA,kBAAQ;QACV;MACF,WAAW,UAAU,aAAa;AAChC,YAAI,MAAM,YAAY,MAAM,KAAK;AAG/B,kBAAQ,mBAAmB;AAG3B,6BAAmB;QACrB,WAAW,MAAM,cAAc,MAAM,QAAW;AAE9C,6BAAmB;QACrB,OAAO;AACL,6BAAmB,MAAM,YAAY,MAAM,iBAAiB,EAAE;AAC9D,qBAAW,MAAM,cAAc;AAC/B,kBACE,MAAM,UAAU,MAAM,SAClB,cACA,MAAM,UAAU,MAAM,MACpB,0BACA;QACV;MACF,WACE,UAAU,2BACV,UAAU,yBACV;AACA,gBAAQ;MACV,WAAW,UAAU,mBAAmB,UAAU,kBAAkB;AAClE,gBAAQ;MACV,OAAO;AAGL,gBAAQ;AACR,0BAAkB;MACpB;IACF;AAEA,QAAIA,WAAU;AAIZ,cAAQ,OACN,qBAAqB,MACnB,UAAU,eACV,UAAU,2BACV,UAAU,yBACZ,0BAA0B;IAE9B;AAeA,UAAM,MACJ,UAAU,eAAe,QAAQU,KAAI,CAAC,EAAE,WAAW,IAAI,IAAI,MAAM;AACnE,IAAAD,SACE,UAAU,eACNH,KAAI,aACJ,oBAAoB,KACjB,UAAU,KAAK,QAAS,GACzBA,GAAE,MAAM,GAAG,gBAAgB,IACzB,uBACAA,GAAE,MAAM,gBAAgB,KAC1B,SACA,MACAA,KAAI,UAAU,qBAAqB,KAAKI,KAAI;EACtD;AAEA,QAAM,aACJD,SACC,QAAQ,CAAC,KAAK,UACd,SAAS,aAAa,WAAW,SAAS,gBAAgB,YAAY;AAGzE,SAAO,CAAC,wBAAwB,SAAS,UAAU,GAAG,SAAS;AACjE;AAIA,IAAM,WAAN,MAAM,UAAQ;EAMZ,YAEE,EAAC,SAAS,CAAC,YAAY,GAAG,KAAI,GAC9B,SAAuB;AALzB,SAAA,QAA6B,CAAA;AAO3B,QAAI;AACJ,QAAI,YAAY;AAChB,QAAI,gBAAgB;AACpB,UAAM,YAAY,QAAQ,SAAS;AACnC,UAAM,QAAQ,KAAK;AAGnB,UAAM,CAACA,OAAM,SAAS,IAAI,gBAAgB,SAAS,IAAI;AACvD,SAAK,KAAK,UAAS,cAAcA,OAAM,OAAO;AAC9C,WAAO,cAAc,KAAK,GAAG;AAG7B,QAAI,SAAS,cAAc,SAAS,eAAe;AACjD,YAAM,UAAU,KAAK,GAAG,QAAQ;AAChC,cAAQ,YAAY,GAAG,QAAQ,UAAU;IAC3C;AAGA,YAAQ,OAAO,OAAO,SAAQ,OAAQ,QAAQ,MAAM,SAAS,WAAW;AACtE,UAAI,KAAK,aAAa,GAAG;AACvB,YAAIT,WAAU;AACZ,gBAAMW,OAAO,KAAiB;AAK9B,cACE,2BAA4B,KAAKA,IAAG,KACnC,KAAiB,UAAU,SAAS,MAAM,GAC3C;AACA,kBAAM,IACJ,0CAA0CA,IAAG,sDACMA,IAAG;AAExD,gBAAIA,SAAQ,YAAY;AACtB,oBAAM,IAAI,MAAM,CAAC;YACnB;AAAO,cAAAP,cAAa,IAAI,CAAC;UAC3B;QACF;AAIA,YAAK,KAAiB,cAAa,GAAI;AACrC,qBAAW,QAAS,KAAiB,kBAAiB,GAAI;AACxD,gBAAI,KAAK,SAAS,oBAAoB,GAAG;AACvC,oBAAM,WAAW,UAAU,eAAe;AAC1C,oBAAM,QAAS,KAAiB,aAAa,IAAI;AACjD,oBAAM,UAAU,MAAM,MAAM,MAAM;AAClC,oBAAM,IAAI,eAAe,KAAK,QAAQ;AACtC,oBAAM,KAAK;gBACT,MAAM;gBACN,OAAO;gBACP,MAAM,EAAE,CAAC;gBACT,SAAS;gBACT,MACE,EAAE,CAAC,MAAM,MACL,eACA,EAAE,CAAC,MAAM,MACP,uBACA,EAAE,CAAC,MAAM,MACP,YACA;eACX;AACA,mBAAiB,gBAAgB,IAAI;YACxC,WAAW,KAAK,WAAW,MAAM,GAAG;AAClC,oBAAM,KAAK;gBACT,MAAM;gBACN,OAAO;eACR;AACA,mBAAiB,gBAAgB,IAAI;YACxC;UACF;QACF;AAGA,YAAI,eAAe,KAAM,KAAiB,OAAO,GAAG;AAIlD,gBAAMQ,WAAW,KAAiB,YAAa,MAAM,MAAM;AAC3D,gBAAM,YAAYA,SAAQ,SAAS;AACnC,cAAI,YAAY,GAAG;AAChB,iBAAiB,cAAcP,gBAC3BA,cAAa,cACd;AAGJ,qBAASK,KAAI,GAAGA,KAAI,WAAWA,MAAK;AACjC,mBAAiB,OAAOE,SAAQF,EAAC,GAAG,aAAY,CAAE;AAEnD,qBAAO,SAAQ;AACf,oBAAM,KAAK,EAAC,MAAM,YAAY,OAAO,EAAE,UAAS,CAAC;YACnD;AAIC,iBAAiB,OAAOE,SAAQ,SAAS,GAAG,aAAY,CAAE;UAC7D;QACF;MACF,WAAW,KAAK,aAAa,GAAG;AAC9B,cAAM,OAAQ,KAAiB;AAC/B,YAAI,SAAS,aAAa;AACxB,gBAAM,KAAK,EAAC,MAAM,YAAY,OAAO,UAAS,CAAC;QACjD,OAAO;AACL,cAAIF,KAAI;AACR,kBAAQA,KAAK,KAAiB,KAAK,QAAQ,QAAQA,KAAI,CAAC,OAAO,IAAI;AAGjE,kBAAM,KAAK,EAAC,MAAM,cAAc,OAAO,UAAS,CAAC;AAEjD,YAAAA,MAAK,OAAO,SAAS;UACvB;QACF;MACF;AACA;IACF;AAEA,QAAIV,WAAU;AAOZ,UAAI,UAAU,WAAW,eAAe;AACtC,cAAM,IAAI,MACR;MAME,QAAQ,KAAK,QAAQ,IACrB,GAAG;MAET;IACF;AAKA,IAAAG,kBACEA,eAAc;MACZ,MAAM;MACN,UAAU;MACV,kBAAkB,KAAK;MACvB,OAAO,KAAK;MACZ;KACD;EACL;;;EAIA,OAAO,cAAcM,OAAmB,UAAwB;AAC9D,UAAM,KAAK,EAAE,cAAc,UAAU;AACrC,OAAG,YAAYA;AACf,WAAO;EACT;;AAgBF,SAAS,iBACP,MACA,OACA,SAA0B,MAC1B,gBAAuB;AAIvB,MAAI,UAAU,UAAU;AACtB,WAAO;EACT;AACA,MAAI,mBACF,mBAAmB,SACd,OAAyB,eAAe,cAAc,IACtD,OAA+C;AACtD,QAAM,2BAA2B,YAAY,KAAK,IAC9C;;IAEC,MAA0B,iBAAiB;;AAChD,MAAI,kBAAkB,gBAAgB,0BAA0B;AAE9D,uBAAmB,oCAAoC,IAAI,KAAK;AAChE,QAAI,6BAA6B,QAAW;AAC1C,yBAAmB;IACrB,OAAO;AACL,yBAAmB,IAAI,yBAAyB,IAAgB;AAChE,uBAAiB,aAAa,MAAM,QAAQ,cAAc;IAC5D;AACA,QAAI,mBAAmB,QAAW;AAChC,OAAE,OAAyB,iBAAiB,CAAA,GAAI,cAAc,IAC5D;IACJ,OAAO;AACJ,aAAiC,cAAc;IAClD;EACF;AACA,MAAI,qBAAqB,QAAW;AAClC,YAAQ,iBACN,MACA,iBAAiB,UAAU,MAAO,MAA0B,MAAM,GAClE,kBACA,cAAc;EAElB;AACA,SAAO;AACT;AAOA,IAAM,mBAAN,MAAsB;EASpB,YAAY,UAAoB,QAAiB;AAPjD,SAAA,UAAmC,CAAA;AAKnC,SAAA,2BAAiD;AAG/C,SAAK,aAAa;AAClB,SAAK,WAAW;EAClB;;EAGA,IAAI,aAAU;AACZ,WAAO,KAAK,SAAS;EACvB;;EAGA,IAAI,gBAAa;AACf,WAAO,KAAK,SAAS;EACvB;;;EAIA,OAAO,SAAkC;AACvC,UAAM,EACJ,IAAI,EAAC,QAAO,GACZ,MAAY,IACV,KAAK;AACT,UAAM,YAAY,SAAS,iBAAiB,GAAG,WAAW,SAAS,IAAI;AACvE,WAAO,cAAc;AAErB,QAAI,OAAO,OAAO,SAAQ;AAC1B,QAAI,YAAY;AAChB,QAAI,YAAY;AAChB,QAAI,eAAe,MAAM,CAAC;AAE1B,WAAO,iBAAiB,QAAW;AACjC,UAAI,cAAc,aAAa,OAAO;AACpC,YAAI;AACJ,YAAI,aAAa,SAAS,YAAY;AACpC,iBAAO,IAAI,UACT,MACA,KAAK,aACL,MACA,OAAO;QAEX,WAAW,aAAa,SAAS,gBAAgB;AAC/C,iBAAO,IAAI,aAAa,KACtB,MACA,aAAa,MACb,aAAa,SACb,MACA,OAAO;QAEX,WAAW,aAAa,SAAS,cAAc;AAC7C,iBAAO,IAAI,YAAY,MAAqB,MAAM,OAAO;QAC3D;AACA,aAAK,QAAQ,KAAK,IAAI;AACtB,uBAAe,MAAM,EAAE,SAAS;MAClC;AACA,UAAI,cAAc,cAAc,OAAO;AACrC,eAAO,OAAO,SAAQ;AACtB;MACF;IACF;AAIA,WAAO,cAAc;AACrB,WAAO;EACT;EAEA,QAAQ,QAAsB;AAC5B,QAAIC,KAAI;AACR,eAAW,QAAQ,KAAK,SAAS;AAC/B,UAAI,SAAS,QAAW;AACtB,QAAAP,kBACEA,eAAc;UACZ,MAAM;UACN;UACA,OAAO,OAAOO,EAAC;UACf,YAAYA;UACZ;UACA,kBAAkB;SACnB;AACH,YAAK,KAAuB,YAAY,QAAW;AAChD,eAAuB,WAAW,QAAQ,MAAuBA,EAAC;AAInE,UAAAA,MAAM,KAAuB,QAAS,SAAS;QACjD,OAAO;AACL,eAAK,WAAW,OAAOA,EAAC,CAAC;QAC3B;MACF;AACA,MAAAA;IACF;EACF;;AA8CF,IAAM,YAAN,MAAM,WAAS;;EAwBb,IAAI,gBAAa;AAIf,WAAO,KAAK,UAAU,iBAAiB,KAAK;EAC9C;EAeA,YACE,WACA,SACA,QACA,SAAkC;AA/C3B,SAAA,OAAO;AAEhB,SAAA,mBAA4B;AA+B5B,SAAA,2BAAiD;AAgB/C,SAAK,cAAc;AACnB,SAAK,YAAY;AACjB,SAAK,WAAW;AAChB,SAAK,UAAU;AAIf,SAAK,gBAAgB,SAAS,eAAe;AAC7C,QAAI,6BAA6B;AAE/B,WAAK,iBAAiB;IACxB;EACF;;;;;;;;;;;;;;;;;;;EAoBA,IAAI,aAAU;AACZ,QAAI,aAAmB,KAAK,KAAK,WAAW,EAAE;AAC9C,UAAM,SAAS,KAAK;AACpB,QACE,WAAW,UACX,YAAY,aAAa,IACzB;AAIA,mBAAc,OAAwC;IACxD;AACA,WAAO;EACT;;;;;EAMA,IAAI,YAAS;AACX,WAAO,KAAK;EACd;;;;;EAMA,IAAI,UAAO;AACT,WAAO,KAAK;EACd;EAEA,WAAW,OAAgB,kBAAmC,MAAI;AAChE,QAAIV,aAAY,KAAK,eAAe,MAAM;AACxC,YAAM,IAAI,MACR,0UAA0U;IAE9U;AACA,YAAQ,iBAAiB,MAAM,OAAO,eAAe;AACrD,QAAI,YAAY,KAAK,GAAG;AAItB,UAAI,UAAU,WAAW,SAAS,QAAQ,UAAU,IAAI;AACtD,YAAI,KAAK,qBAAqB,SAAS;AACrC,UAAAG,kBACEA,eAAc;YACZ,MAAM;YACN,OAAO,KAAK;YACZ,KAAK,KAAK;YACV,QAAQ,KAAK;YACb,SAAS,KAAK;WACf;AACH,eAAK,QAAO;QACd;AACA,aAAK,mBAAmB;MAC1B,WAAW,UAAU,KAAK,oBAAoB,UAAU,UAAU;AAChE,aAAK,YAAY,KAAK;MACxB;IAEF,WAAY,MAAyB,YAAY,MAAM,QAAW;AAChE,WAAK,sBAAsB,KAAuB;IACpD,WAAY,MAAe,aAAa,QAAW;AACjD,UAAIH,aAAY,KAAK,SAAS,SAAS,OAAO;AAC5C,aAAK,YACH,6GACuD;AAEzD,gBAAQ,KACN,yCACA,OACA,oEACA,8DACA,oEACA,2CAA2C;AAE7C;MACF;AACA,WAAK,YAAY,KAAa;IAChC,WAAWQ,YAAW,KAAK,GAAG;AAC5B,WAAK,gBAAgB,KAAK;IAC5B,OAAO;AAEL,WAAK,YAAY,KAAK;IACxB;EACF;EAEQ,QAAwB,MAAO;AACrC,WAAO,KAAK,KAAK,KAAK,WAAW,EAAE,UAAW,EAAE,aAC9C,MACA,KAAK,SAAS;EAElB;EAEQ,YAAY,OAAW;AAC7B,QAAI,KAAK,qBAAqB,OAAO;AACnC,WAAK,QAAO;AACZ,UACE,+BACA,6BAA6B,eAC7B;AACA,cAAM,iBAAiB,KAAK,YAAY,YAAY;AACpD,YAAI,mBAAmB,WAAW,mBAAmB,UAAU;AAC7D,cAAI,UAAU;AACd,cAAIR,WAAU;AACZ,gBAAI,mBAAmB,SAAS;AAC9B,wBACE;YAOJ,OAAO;AACL,wBACE;YAGJ;UACF;AACA,gBAAM,IAAI,MAAM,OAAO;QACzB;MACF;AACA,MAAAG,kBACEA,eAAc;QACZ,MAAM;QACN,OAAO,KAAK;QACZ,QAAQ,KAAK;QACb;QACA,SAAS,KAAK;OACf;AACH,WAAK,mBAAmB,KAAK,QAAQ,KAAK;IAC5C;EACF;EAEQ,YAAY,OAAc;AAIhC,QACE,KAAK,qBAAqB,WAC1B,YAAY,KAAK,gBAAgB,GACjC;AACA,YAAM,OAAO,KAAK,KAAK,WAAW,EAAE;AACpC,UAAI,6BAA6B;AAC/B,YAAI,KAAK,mBAAmB,QAAW;AACrC,eAAK,iBAAiB,gBAAgB,MAAM,QAAQ,UAAU;QAChE;AACA,gBAAQ,KAAK,eAAe,KAAK;MACnC;AACA,MAAAA,kBACEA,eAAc;QACZ,MAAM;QACN;QACA;QACA,SAAS,KAAK;OACf;AACF,WAAc,OAAO;IACxB,OAAO;AACL,UAAI,6BAA6B;AAC/B,cAAM,WAAW,EAAE,eAAe,EAAE;AACpC,aAAK,YAAY,QAAQ;AAKzB,YAAI,KAAK,mBAAmB,QAAW;AACrC,eAAK,iBAAiB,gBAAgB,UAAU,QAAQ,UAAU;QACpE;AACA,gBAAQ,KAAK,eAAe,KAAK;AACjC,QAAAA,kBACEA,eAAc;UACZ,MAAM;UACN,MAAM;UACN;UACA,SAAS,KAAK;SACf;AACH,iBAAS,OAAO;MAClB,OAAO;AACL,aAAK,YAAY,EAAE,eAAe,KAAe,CAAC;AAClD,QAAAA,kBACEA,eAAc;UACZ,MAAM;UACN,MAAM,KAAK,KAAK,WAAW,EAAE;UAC7B;UACA,SAAS,KAAK;SACf;MACL;IACF;AACA,SAAK,mBAAmB;EAC1B;EAEQ,sBACN,QAA+C;AAG/C,UAAM,EAAC,QAAQ,CAAC,YAAY,GAAG,KAAI,IAAI;AAKvC,UAAM,WACJ,OAAO,SAAS,WACZ,KAAK,cAAc,MAAkC,KACpD,KAAK,OAAO,WACV,KAAK,KAAK,SAAS,cAClB,wBAAwB,KAAK,GAAG,KAAK,EAAE,CAAC,CAAC,GACzC,KAAK,OAAO,IAEhB;AAEN,QAAK,KAAK,kBAAuC,eAAe,UAAU;AACxE,MAAAA,kBACEA,eAAc;QACZ,MAAM;QACN;QACA,UAAU,KAAK;QACf,OAAQ,KAAK,iBAAsC;QACnD,SAAS,KAAK;QACd;OACD;AACF,WAAK,iBAAsC,QAAQ,MAAM;IAC5D,OAAO;AACL,YAAM,WAAW,IAAI,iBAAiB,UAAsB,IAAI;AAChE,YAAM,WAAW,SAAS,OAAO,KAAK,OAAO;AAC7C,MAAAA,kBACEA,eAAc;QACZ,MAAM;QACN;QACA;QACA,OAAO,SAAS;QAChB,SAAS,KAAK;QACd;QACA;OACD;AACH,eAAS,QAAQ,MAAM;AACvB,MAAAA,kBACEA,eAAc;QACZ,MAAM;QACN;QACA;QACA,OAAO,SAAS;QAChB,SAAS,KAAK;QACd;QACA;OACD;AACH,WAAK,YAAY,QAAQ;AACzB,WAAK,mBAAmB;IAC1B;EACF;;;EAIA,cAAc,QAAgC;AAC5C,QAAI,WAAW,cAAc,IAAI,OAAO,OAAO;AAC/C,QAAI,aAAa,QAAW;AAC1B,oBAAc,IAAI,OAAO,SAAU,WAAW,IAAI,SAAS,MAAM,CAAE;IACrE;AACA,WAAO;EACT;EAEQ,gBAAgB,OAAwB;AAW9C,QAAI,CAACI,SAAQ,KAAK,gBAAgB,GAAG;AACnC,WAAK,mBAAmB,CAAA;AACxB,WAAK,QAAO;IACd;AAIA,UAAM,YAAY,KAAK;AACvB,QAAI,YAAY;AAChB,QAAI;AAEJ,eAAW,QAAQ,OAAO;AACxB,UAAI,cAAc,UAAU,QAAQ;AAKlC,kBAAU,KACP,WAAW,IAAI,WACd,KAAK,QAAQ,aAAY,CAAE,GAC3B,KAAK,QAAQ,aAAY,CAAE,GAC3B,MACA,KAAK,OAAO,CACZ;MAEN,OAAO;AAEL,mBAAW,UAAU,SAAS;MAChC;AACA,eAAS,WAAW,IAAI;AACxB;IACF;AAEA,QAAI,YAAY,UAAU,QAAQ;AAEhC,WAAK,QACH,YAAY,KAAK,SAAS,SAAU,EAAE,aACtC,SAAS;AAGX,gBAAU,SAAS;IACrB;EACF;;;;;;;;;;;;EAaA,QACE,QAA0B,KAAK,KAAK,WAAW,EAAE,aACjDM,OAAa;AAEb,SAAK,4BAA4B,OAAO,MAAMA,KAAI;AAClD,WAAO,UAAU,KAAK,WAAW;AAI/B,YAAMC,KAAI,KAAK,KAAM,EAAE;AACvB,WAAK,KAAM,EAAE,OAAM;AACnB,cAAQA;IACV;EACF;;;;;;;;EASA,aAAaC,cAAoB;AAC/B,QAAI,KAAK,aAAa,QAAW;AAC/B,WAAK,gBAAgBA;AACrB,WAAK,4BAA4BA,YAAW;IAC9C,WAAWf,WAAU;AACnB,YAAM,IAAI,MACR,8EACoC;IAExC;EACF;;AA2BF,IAAM,gBAAN,MAAmB;EA2BjB,IAAI,UAAO;AACT,WAAO,KAAK,QAAQ;EACtB;;EAGA,IAAI,gBAAa;AACf,WAAO,KAAK,SAAS;EACvB;EAEA,YACE,SACA,MACA,SACA,QACA,SAAkC;AAxC3B,SAAA,OAIe;AAYxB,SAAA,mBAA6C;AAM7C,SAAA,2BAAiD;AAoB/C,SAAK,UAAU;AACf,SAAK,OAAO;AACZ,SAAK,WAAW;AAChB,SAAK,UAAU;AACf,QAAI,QAAQ,SAAS,KAAK,QAAQ,CAAC,MAAM,MAAM,QAAQ,CAAC,MAAM,IAAI;AAChE,WAAK,mBAAmB,IAAI,MAAM,QAAQ,SAAS,CAAC,EAAE,KAAK,IAAI,OAAM,CAAE;AACvE,WAAK,UAAU;IACjB,OAAO;AACL,WAAK,mBAAmB;IAC1B;AACA,QAAI,6BAA6B;AAC/B,WAAK,aAAa;IACpB;EACF;;;;;;;;;;;;;;;;;;;;;;;EAwBA,WACE,OACA,kBAAmC,MACnC,YACA,UAAkB;AAElB,UAAM,UAAU,KAAK;AAGrB,QAAI,SAAS;AAEb,QAAI,YAAY,QAAW;AAEzB,cAAQ,iBAAiB,MAAM,OAAO,iBAAiB,CAAC;AACxD,eACE,CAAC,YAAY,KAAK,KACjB,UAAU,KAAK,oBAAoB,UAAU;AAChD,UAAI,QAAQ;AACV,aAAK,mBAAmB;MAC1B;IACF,OAAO;AAEL,YAAM,SAAS;AACf,cAAQ,QAAQ,CAAC;AAEjB,UAAIU,IAAG;AACP,WAAKA,KAAI,GAAGA,KAAI,QAAQ,SAAS,GAAGA,MAAK;AACvC,YAAI,iBAAiB,MAAM,OAAO,aAAcA,EAAC,GAAG,iBAAiBA,EAAC;AAEtE,YAAI,MAAM,UAAU;AAElB,cAAK,KAAK,iBAAoCA,EAAC;QACjD;AACA,mBACE,CAAC,YAAY,CAAC,KAAK,MAAO,KAAK,iBAAoCA,EAAC;AACtE,YAAI,MAAM,SAAS;AACjB,kBAAQ;QACV,WAAW,UAAU,SAAS;AAC5B,oBAAU,KAAK,MAAM,QAAQA,KAAI,CAAC;QACpC;AAGC,aAAK,iBAAoCA,EAAC,IAAI;MACjD;IACF;AACA,QAAI,UAAU,CAAC,UAAU;AACvB,WAAK,aAAa,KAAK;IACzB;EACF;;EAGA,aAAa,OAAc;AACzB,QAAI,UAAU,SAAS;AACpB,WAAK,KAAK,OAAO,EAAc,gBAAgB,KAAK,IAAI;IAC3D,OAAO;AACL,UAAI,6BAA6B;AAC/B,YAAI,KAAK,eAAe,QAAW;AACjC,eAAK,aAAa,yBAChB,KAAK,SACL,KAAK,MACL,WAAW;QAEf;AACA,gBAAQ,KAAK,WAAW,SAAS,EAAE;MACrC;AACA,MAAAP,kBACEA,eAAc;QACZ,MAAM;QACN,SAAS,KAAK;QACd,MAAM,KAAK;QACX;QACA,SAAS,KAAK;OACf;AACF,WAAK,KAAK,OAAO,EAAc,aAC9B,KAAK,MACJ,SAAS,EAAa;IAE3B;EACF;;AAIF,IAAM,eAAN,cAA2B,cAAa;EAAxC,cAAA;;AACoB,SAAA,OAAO;EAyB3B;;EAtBW,aAAa,OAAc;AAClC,QAAI,6BAA6B;AAC/B,UAAI,KAAK,eAAe,QAAW;AACjC,aAAK,aAAa,yBAChB,KAAK,SACL,KAAK,MACL,UAAU;MAEd;AACA,cAAQ,KAAK,WAAW,KAAK;IAC/B;AACA,IAAAA,kBACEA,eAAc;MACZ,MAAM;MACN,SAAS,KAAK;MACd,MAAM,KAAK;MACX;MACA,SAAS,KAAK;KACf;AAEF,SAAK,QAAgB,KAAK,IAAI,IAAI,UAAU,UAAU,SAAY;EACrE;;AAIF,IAAM,uBAAN,cAAmC,cAAa;EAAhD,cAAA;;AACoB,SAAA,OAAO;EAiB3B;;EAdW,aAAa,OAAc;AAClC,IAAAA,kBACEA,eAAc;MACZ,MAAM;MACN,SAAS,KAAK;MACd,MAAM,KAAK;MACX,OAAO,CAAC,EAAE,SAAS,UAAU;MAC7B,SAAS,KAAK;KACf;AACF,SAAK,KAAK,OAAO,EAAc,gBAC9B,KAAK,MACL,CAAC,CAAC,SAAS,UAAU,OAAO;EAEhC;;AAkBF,IAAM,YAAN,cAAwB,cAAa;EAGnC,YACE,SACA,MACA,SACA,QACA,SAAkC;AAElC,UAAM,SAAS,MAAM,SAAS,QAAQ,OAAO;AAT7B,SAAA,OAAO;AAWvB,QAAIH,aAAY,KAAK,YAAY,QAAW;AAC1C,YAAM,IAAI,MACR,QAAQ,QAAQ,SAAS,gBAAgB,IAAI,8HAEF;IAE/C;EACF;;;;EAKS,WACP,aACA,kBAAmC,MAAI;AAEvC,kBACE,iBAAiB,MAAM,aAAa,iBAAiB,CAAC,KAAK;AAC7D,QAAI,gBAAgB,UAAU;AAC5B;IACF;AACA,UAAM,cAAc,KAAK;AAIzB,UAAM,uBACH,gBAAgB,WAAW,gBAAgB,WAC3C,YAAyC,YACvC,YAAyC,WAC3C,YAAyC,SACvC,YAAyC,QAC3C,YAAyC,YACvC,YAAyC;AAI9C,UAAM,oBACJ,gBAAgB,YACf,gBAAgB,WAAW;AAE9B,IAAAG,kBACEA,eAAc;MACZ,MAAM;MACN,SAAS,KAAK;MACd,MAAM,KAAK;MACX,OAAO;MACP,SAAS,KAAK;MACd,gBAAgB;MAChB,aAAa;MACb;KACD;AACH,QAAI,sBAAsB;AACxB,WAAK,QAAQ,oBACX,KAAK,MACL,MACA,WAAuC;IAE3C;AACA,QAAI,mBAAmB;AACrB,WAAK,QAAQ,iBACX,KAAK,MACL,MACA,WAAuC;IAE3C;AACA,SAAK,mBAAmB;EAC1B;EAEA,YAAY,OAAY;AACtB,QAAI,OAAO,KAAK,qBAAqB,YAAY;AAC/C,WAAK,iBAAiB,KAAK,KAAK,SAAS,QAAQ,KAAK,SAAS,KAAK;IACtE,OAAO;AACJ,WAAK,iBAAyC,YAAY,KAAK;IAClE;EACF;;AAIF,IAAM,cAAN,MAAiB;EAiBf,YACS,SACP,QACA,SAAkC;AAF3B,SAAA,UAAA;AAjBA,SAAA,OAAO;AAYhB,SAAA,2BAAiD;AAS/C,SAAK,WAAW;AAChB,SAAK,UAAU;EACjB;;EAGA,IAAI,gBAAa;AACf,WAAO,KAAK,SAAS;EACvB;EAEA,WAAW,OAAc;AACvB,IAAAA,kBACEA,eAAc;MACZ,MAAM;MACN,SAAS,KAAK;MACd;MACA,SAAS,KAAK;KACf;AACH,qBAAiB,MAAM,KAAK;EAC9B;;AAyCF,IAAMa,mBAAkBC,YACpBC,QAAO,gCACPA,QAAO;AACXF,mBAAkB,UAAU,SAAS;CAIpCE,QAAO,oBAAoB,CAAA,GAAI,KAAK,OAAO;AAC5C,IAAID,aAAYC,QAAO,gBAAgB,SAAS,GAAG;AACjD,iBAAe,MAAK;AAClB,IAAAC,cACE,qBACA,gFACiD;EAErD,CAAC;AACH;AA2BO,IAAM,SAAS,CACpB,OACA,WACA,YACY;AACZ,MAAIF,aAAY,aAAa,MAAM;AAKjC,UAAM,IAAI,UAAU,2CAA2C,SAAS,EAAE;EAC5E;AACA,QAAM,WAAWA,YAAW,qBAAqB;AACjD,QAAM,gBAAgB,SAAS,gBAAgB;AAG/C,MAAI,OAAmB,cAAsB,YAAY;AACzD,EAAAG,kBACEA,eAAc;IACZ,MAAM;IACN,IAAI;IACJ;IACA;IACA;IACA;GACD;AACH,MAAI,SAAS,QAAW;AACtB,UAAM,UAAU,SAAS,gBAAgB;AAGxC,kBAAsB,YAAY,IAAI,OAAO,IAAI,UAChD,UAAU,aAAa,aAAY,GAAI,OAAO,GAC9C,SACA,QACA,WAAW,CAAA,CAAE;EAEjB;AACA,OAAK,WAAW,KAAK;AACrB,EAAAA,kBACEA,eAAc;IACZ,MAAM;IACN,IAAI;IACJ;IACA;IACA;IACA;GACD;AACH,SAAO;AACT;AAEA,IAAI,6BAA6B;AAC/B,SAAO,eAAe;AACtB,SAAO,kBAAkB;AACzB,MAAIH,WAAU;AACZ,WAAO,gDACL;EACJ;AACF;;;ACzvEA,IAAAI,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;AAuFA,IAAMC,6BAA4B,CAChC,MACA,SACM;AAER,IAAMC,YAAW;AAEjB,IAAMC,UAAS;AAEf,IAAIC;AAEJ,IAAIF,WAAU;AAGZ,EAAAC,QAAO,sBAAsB,oBAAI,IAAG;AAOpC,EAAAC,gBAAe,CAAC,MAAc,YAAmB;AAC/C,eAAW,4BAA4B,IAAI;AAC3C,QACE,CAACD,QAAO,kBAAmB,IAAI,OAAO,KACtC,CAACA,QAAO,kBAAmB,IAAI,IAAI,GACnC;AACA,cAAQ,KAAK,OAAO;AACpB,MAAAA,QAAO,kBAAmB,IAAI,OAAO;IACvC;EACF;AACF;AAWM,IAAO,aAAP,cAA0B,gBAAe;EAA/C,cAAA;;AAOW,SAAA,gBAA+B,EAAC,MAAM,KAAI;AAE3C,SAAA,cAAoC;EA8F9C;;;;EAzFqB,mBAAgB;AACjC,UAAM,aAAa,MAAM,iBAAgB;AAMzC,SAAK,cAAc,iBAAiB,WAAY;AAChD,WAAO;EACT;;;;;;;;EASmB,OAAO,mBAAiC;AAIzD,UAAM,QAAQ,KAAK,OAAM;AACzB,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,cAAc,cAAc,KAAK;IACxC;AACA,UAAM,OAAO,iBAAiB;AAC9B,SAAK,cAAc,OAAO,OAAO,KAAK,YAAY,KAAK,aAAa;EACtE;;;;;;;;;;;;;;;;;;;;;EAsBS,oBAAiB;AACxB,UAAM,kBAAiB;AACvB,SAAK,aAAa,aAAa,IAAI;EACrC;;;;;;;;;;;;;;;;;;;;EAqBS,uBAAoB;AAC3B,UAAM,qBAAoB;AAC1B,SAAK,aAAa,aAAa,KAAK;EACtC;;;;;;;;EASU,SAAM;AACd,WAAO;EACT;;AApGO,WAAC,eAAe,IAAI;AA8G5B,WACCF,2BAA0B,aAAa,UAAU,CAAC,IAChD;AAGJE,QAAO,2BAA2B,EAAC,WAAU,CAAC;AAG9C,IAAME,mBAAkBH,YACpBC,QAAO,mCACPA,QAAO;AACXE,mBAAkB,EAAC,WAAU,CAAC;CAmC7BC,QAAO,uBAAuB,CAAA,GAAI,KAAK,OAAO;AAC/C,IAAIC,aAAYD,QAAO,mBAAmB,SAAS,GAAG;AACpD,iBAAe,MAAK;AAClB,IAAAE,cACE,qBACA,gFACuB;EAE3B,CAAC;AACH;;;ACxSA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;AAAA,IAAAA,iBAAA;AAAA,IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;AA0CO,IAAM,WAAW;EACtB,WAAW;EACX,OAAO;EACP,UAAU;EACV,mBAAmB;EACnB,OAAO;EACP,SAAS;;AAoCJ,IAAM,YACX,CAA2B,MAC3B,IAAI,YAAsE;;EAExE,CAAC,iBAAiB,GAAG;EACrB;;AAQE,IAAgB,YAAhB,MAAyB;EAkB7B,YAAY,WAAmB;EAAG;;EAGlC,IAAI,gBAAa;AACf,WAAO,KAAK,SAAS;EACvB;;EAGA,aACE,MACA,QACA,gBAAkC;AAElC,SAAK,SAAS;AACd,SAAK,WAAW;AAChB,SAAK,mBAAmB;EAC1B;;EAEA,UAAU,MAAY,OAAqB;AACzC,WAAO,KAAK,OAAO,MAAM,KAAK;EAChC;EAIA,OAAO,OAAa,OAAqB;AACvC,WAAO,KAAK,OAAO,GAAG,KAAK;EAC7B;;;;ADnHF,IAAM,YAAY;AAElB,IAAM,gBAAgB,OAAO;AAE7B,IAAM,WAAW,IAAI,cAAc;AAEnC,IAAM,oBAAN,cAAgC,UAAS;EAGvC,YAAY,UAAkB;AAC5B,UAAM,QAAQ;AACd,QACE,SAAS,SAAS,SAAS,aAC3B,SAAS,SAAS,WACjB,SAAS,SAAS,SAAoB,GACvC;AACA,YAAM,IAAI,MACR,4GAC+C;IAEnD;EACF;EAEA,OAAO,WAA8B;AACnC,WAAO,OAAO,KAAK,SAAS,EAAE,OAAO,CAAC,OAAO,SAAQ;AACnD,YAAM,QAAQ,UAAU,IAAI;AAC5B,UAAI,SAAS,MAAM;AACjB,eAAO;MACT;AAQA,aAAO,KAAK,SAAS,GAAG,IACpB,OACA,KACG,QAAQ,qCAAqC,KAAK,EAClD,YAAW;AAClB,aAAO,QAAQ,GAAG,IAAI,IAAI,KAAK;IACjC,GAAG,EAAE;EACP;EAES,OAAO,MAAqB,CAAC,SAAS,GAA4B;AACzE,UAAM,EAAC,MAAK,IAAI,KAAK;AAErB,QAAI,KAAK,6BAA6B,QAAW;AAC/C,WAAK,2BAA2B,IAAI,IAAI,OAAO,KAAK,SAAS,CAAC;AAC9D,aAAO,KAAK,OAAO,SAAS;IAC9B;AAGA,eAAW,QAAQ,KAAK,0BAA0B;AAEhD,UAAI,UAAU,IAAI,KAAK,MAAM;AAC3B,aAAK,yBAA0B,OAAO,IAAI;AAC1C,YAAI,KAAK,SAAS,GAAG,GAAG;AACtB,gBAAM,eAAe,IAAI;QAC3B,OAAO;AAEJ,gBAAc,IAAI,IAAI;QACzB;MACF;IACF;AAGA,eAAW,QAAQ,WAAW;AAC5B,YAAM,QAAQ,UAAU,IAAI;AAC5B,UAAI,SAAS,MAAM;AACjB,aAAK,yBAAyB,IAAI,IAAI;AACtC,cAAM,cACJ,OAAO,UAAU,YAAY,MAAM,SAAS,aAAa;AAC3D,YAAI,KAAK,SAAS,GAAG,KAAK,aAAa;AACrC,gBAAM,YACJ,MACA,cACK,MAAiB,MAAM,GAAG,QAAQ,IAClC,OACL,cAAc,YAAY,EAAE;QAEhC,OAAO;AAEJ,gBAAc,IAAI,IAAI;QACzB;MACF;IACF;AACA,WAAO;EACT;;AAuBK,IAAM,WAAW,UAAU,iBAAiB;;;AE1InD,IAAAC,iBAAA;AAAA,IAAAA,iBAAA;AAAA,IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;AA6CO,IAAM,gBACX,CAAC,YACD,CACE,eACAC,aACE;AACF,MAAIA,aAAY,QAAW;AACzB,IAAAA,SAAQ,eAAe,MAAK;AAC1B,qBAAe,OACb,SACA,aAAyC;IAE7C,CAAC;EACH,OAAO;AACL,mBAAe,OAAO,SAAS,aAAyC;EAC1E;AACF;;;AC7DF,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;AAqBA,IAAMC,YAAW;AAEjB,IAAIC;AAEJ,IAAID,WAAU;AAGZ,aAAW,sBAAsB,oBAAI,IAAG;AAOxC,EAAAC,gBAAe,CAAC,MAAc,YAAmB;AAC/C,eAAW,4BAA4B,IAAI;AAC3C,QACE,CAAC,WAAW,kBAAmB,IAAI,OAAO,KAC1C,CAAC,WAAW,kBAAmB,IAAI,IAAI,GACvC;AACA,cAAQ,KAAK,OAAO;AACpB,iBAAW,kBAAmB,IAAI,OAAO;IAC3C;EACF;AACF;AA2BA,IAAM,iBAAiB,CACrB,SACA,OACA,SACE;AACF,QAAM,iBAAiB,MAAM,eAAe,IAAI;AAC/C,QAAM,YAAuC,eAAe,MAAM,OAAO;AAM1E,SAAO,iBACH,OAAO,yBAAyB,OAAO,IAAI,IAC3C;AACN;AAKA,IAAMC,8BAAkD;EACtD,WAAW;EACX,MAAM;EACN,WAAW;EACX,SAAS;EACT,YAAY;;AAaP,IAAM,mBAAmB,CAC9B,UAA+BA,6BAC/B,QACAC,aACsE;AACtE,QAAM,EAAC,MAAM,SAAQ,IAAIA;AAEzB,MAAIH,aAAY,YAAY,MAAM;AAChC,IAAAC,cACE,0BACA,aAAa,MAAM,oMAGa;EAEpC;AAGA,MAAI,aAAa,WAAW,oBAAoB,IAAI,QAAQ;AAC5D,MAAI,eAAe,QAAW;AAC5B,eAAW,oBAAoB,IAAI,UAAW,aAAa,oBAAI,IAAG,CAAG;EACvE;AACA,MAAI,SAAS,UAAU;AACrB,cAAU,OAAO,OAAO,OAAO;AAC/B,YAAQ,UAAU;EACpB;AACA,aAAW,IAAIE,SAAQ,MAAM,OAAO;AAEpC,MAAI,SAAS,YAAY;AAIvB,UAAM,EAAC,KAAI,IAAIA;AACf,WAAO;MACL,IAA2B,GAAI;AAC7B,cAAM,WACJ,OACA,IAAI,KAAK,IAAoB;AAC9B,eAA8C,IAAI,KACjD,MACA,CAAC;AAEH,aAAK,cAAc,MAAM,UAAU,OAAO;MAC5C;MACA,KAA4B,GAAI;AAC9B,YAAI,MAAM,QAAW;AACnB,eAAK,iBAAiB,MAAM,QAAW,SAAS,CAAC;QACnD;AACA,eAAO;MACT;;EAEJ,WAAW,SAAS,UAAU;AAC5B,UAAM,EAAC,KAAI,IAAIA;AACf,WAAO,SAAiC,OAAQ;AAC9C,YAAM,WAAW,KAAK,IAA6B;AAClD,aAA8B,KAAK,MAAM,KAAK;AAC/C,WAAK,cAAc,MAAM,UAAU,OAAO;IAC5C;EACF;AACA,QAAM,IAAI,MAAM,mCAAmC,IAAI,EAAE;AAC3D;AAkCM,SAAU,SAAS,SAA6B;AACpD,SAAO,CACL,eAIA,kBAKO;AACP,WACE,OAAO,kBAAkB,WACrB,iBACE,SACA,eAGA,aAA8C,IAEhD,eACE,SACA,eACA,aAA4B;EAGtC;AACF;;;ACxOA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;AAwCM,SAAU,MAAM,SAA0B;AAC9C,SAAO,SAAS;IACd,GAAG;;;;IAIH,OAAO;IACP,WAAW;GACZ;AACH;;;ACjDA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ADeA,IAAMC,YAAW;AAEjB,IAAIC;AAEJ,IAAID,WAAU;AAGZ,aAAW,sBAAsB,oBAAI,IAAG;AAOxC,EAAAC,gBAAe,CAAC,MAAc,YAAmB;AAC/C,eAAW,OACP,4BAA4B,IAAI,2BAChC;AACJ,QACE,CAAC,WAAW,kBAAmB,IAAI,OAAO,KAC1C,CAAC,WAAW,kBAAmB,IAAI,IAAI,GACvC;AACA,cAAQ,KAAK,OAAO;AACpB,iBAAW,kBAAmB,IAAI,OAAO;IAC3C;EACF;AACF;;;AEzCA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;A;;;;;ACGO,IAAM,gBAAN,MAAqD;EAI1D,YAAoB,MAAsC,QAA8B,OAAW;AAA/E,SAAA,OAAA;AAAsC,SAAA,SAAA;AAA8B,SAAA,QAAA;AAH7D,SAAA,MAAA;AACc,SAAA,SAAA,IAAI,gBAA+B,MAAS;AAG9E,SAAA,KAAK,cAAc,IAAI;EAAA;EAG9B,gBAAgB;AACd,SAAK,MAAM,KAAK,OAAO,UAAU,CAAS,UAAA;AACxC,WAAK,QAAQ;AACR,WAAA,OAAO,KAAK,KAAK;AACtB,WAAK,KAAK,cAAc;IAAA,CACzB;EAAA;EAGH,mBAAmB;AACjB,SAAK,KAAK,YAAY;EAAA;AAE1B;A;;;;;ACpBO,IAAM,oBAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4B1B,IAAM,wBAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgG9B,IAAM,mBAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DzB,IAAM,sBAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8F5B,IAAM,iBAAiB;;;;;;;;;AAUvB,IAAM,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7QxB,IAAM,cAAwD;EACnE,MAAM;IACJ,SAAS;IACT,WAAW;IACX,gBAAgB;IAChB,mBAAmB;IACnB,cAAc;IACd,aAAa;IACb,uBAAuB;IACvB,qBAAqB;IACrB,yBAAyB;EAAA;EAE3B,OAAO;IACL,SAAS;IACT,WAAW;IACX,gBAAgB;IAChB,mBAAmB;IACnB,cAAc;IACd,aAAa;IACb,uBAAuB;IACvB,qBAAqB;IACrB,yBAAyB;EAAA;AAE7B;AAGa,IAAA,sBAAN,cAAkC,WAAW;EAA7C,cAAA;AAAA,UAAA,GAAA,SAAA;AAwBuB,SAAA,mBAAA;AAGP,SAAA,YAAA;AAGG,SAAA,eAAA;AAGH,SAAA,aAAA;AAGM,SAAA,mBAAA;AAEyB,SAAA,iBAAA,IAAI,cAAc,MAAM,eAAe;AAE3C,SAAA,QAAA,IAAI,cAAc,MAAM,WAAW;EAAA;EAE1E,oBAAoB;AAC3B,UAAM,kBAAkB;AAElB,UAAA,kBAAgD,KAAK,mBAAmB;AAC9E,QAAI,iBAAiB;AACnB,iBAAW,MAAY;AACrB,aAAK,iBAAiB,eAAe;MAAA,GACpC,EAAE;IAAA;EACP;EAGF,MAAM,aAA4B;AAChC,SAAK,eAAe;AAEpB,UAAM,IAAI,QAAQ,CAAAC,OAAK,WAAWA,IAAG,GAAG,CAAC;AAErC,QAAA,CAAC,KAAK,kBAAkB;AAC1B,WAAK,YAAY;IAAA;AAGd,SAAA;MACH,IAAI,YAAY,gBAAgB;QAC9B,QAAQ,IAAI,MAAM,cAAc;QAChC,SAAS;QACT,UAAU;MAAA,CACX;IAAA;AAGH,SAAK,eAAe;EAAA;EAGtB,MAAM,iBAAiB,QAAyC;AAC1D,QAAA,CAAC,OAAO,aAAa;AAChB,aAAA,KAAK,OAAO,KAAK,QAAQ;AAChC;IAAA;AAGF,SAAK,eAAe;AAEpB,UAAM,IAAI,QAAQ,CAAAA,OAAK,WAAWA,IAAG,GAAG,CAAC;AAErC,QAAA;AACF,YAAM,SAAwB,OAAO,aAAa,QAAQ,mCAAmC;AAC7F,UAAI,iBAAgD,SAAS,KAAK,MAAM,MAAM,IAAI,CAAA;AACjE,uBAAA,CAAC,OAAO,IAAI,GAAG,eAAe,OAAO,CAAC,OAAwB,OAAO,OAAO,EAAE,CAAC;AAChG,aAAO,aAAa,QAAQ,qCAAqC,KAAK,UAAU,cAAc,CAAC;IAAA,SACxFC,IAAG;AACV,cAAQ,MAAMA,EAAC;IAAA;AAGZ,SAAA;MACH,IAAI,YAAY,mBAAmB;QACjC,QAAQ;QACR,SAAS;QACT,UAAU;MAAA,CACX;IAAA;AAGH,SAAK,eAAe;EAAA;;;;;;;;;EAWd,gBAAoC;AACpC,UAAA,gBACJ,KAAK,eAAe,MAAO;MACzB,CAAC,KAAyE,YAA8B;AAC/F,eAAA;UACL,WAAW,QAAQ,cAAc,CAAC,GAAG,IAAI,WAAW,OAAO,IAAI,IAAI;UACnE,aAAa,CAAC,QAAQ,cAAc,CAAC,GAAG,IAAI,aAAa,OAAO,IAAI,IAAI;QAAA;MAC1E;MAEF,EAAE,WAAW,CAAA,GAAI,aAAa,CAAA,EAAG;IAAA;AAGjC,QAAA;AACA,QAAA;AACF,YAAM,SAAwB,OAAO,aAAa,QAAQ,mCAAmC;AAC7F,uBAAiB,SAAS,KAAK,MAAM,MAAM,IAAI,CAAA;IAAC,SACzCA,IAAG;AACV,cAAQ,MAAMA,EAAC;AACf,uBAAiB,CAAA;IAAC;AAGhB,QAAA,eAAe,WAAW,GAAG;AAC/B,aAAO,CAAC,GAAG,cAAc,WAAW,GAAG,cAAc,WAAW;IAAA;AAGlE,UAAM,cAAkC,CAAA;AACxC,UAAM,iBAAqC,CAAA;AAChC,eAAA,mBAAmB,cAAc,WAAW;AACrD,UAAI,eAAe,KAAK,CAAC,OAAwB,OAAO,gBAAgB,EAAE,GAAG;AAC3E,oBAAY,KAAK,eAAe;MAAA,OAC3B;AACL,uBAAe,KAAK,eAAe;MAAA;IACrC;AAGK,WAAA;MACL,GAAG,YAAY,KAAK,CAAC,GAAqB,MAAwB;AACzD,eAAA,eAAe,QAAQ,EAAE,EAAE,IAAI,eAAe,QAAQ,EAAE,EAAE;MAAA,CAClE;MACD,GAAG;MACH,GAAG,cAAc;IAAA;EACnB;EAGM,qBAAmD;AACzD,WAAO,KAAK,cAAc,EAAE,KAAK,CAACC,OAAiCA,GAAE,iBAAiB;EAAA;EAGhF,iBAAiB;AACvB,QAAI,CAAC,KAAK,MAAM,MAAA,QAAc,CAAA;AAEvB,WAAA;MACL,oBAAoB,KAAK,MAAM,MAAM;MACrC,sBAAsB,KAAK,MAAM,MAAM;MACvC,4BAA4B,KAAK,MAAM,MAAM;MAC7C,+BAA+B,KAAK,MAAM,MAAM;MAChD,yBAAyB,KAAK,MAAM,MAAM;MAC1C,yBAAyB,KAAK,MAAM,MAAM;MAC1C,oCAAoC,KAAK,MAAM,MAAM;MACrD,kCAAkC,KAAK,MAAM,MAAM;MACnD,sCAAsC,KAAK,MAAM,MAAM;IAAA;EACzD;EAGO,SAAS;AACZ,QAAA,KAAK,mBAAA,GAAsB;AACtB,aAAA;IAAA;AAGT,UAAM,cAAc;;;;;;;;;;;;;;;;;;;;;;AAuBpB,UAAM,iBAAiB;;;sEAG2C,KAAK,UAAU;;2BAE1D,MAAM,KAAK,WAAA,CAAY;;;;;;;;;YAStC,KAAK,cAAA,EAAgB;MACrB,CAAC,MAAwBC,OACvB;;2BAEa,MAAM,KAAK,iBAAiB,IAAI,CAAC;+CACb,CAAC,KAAK,cAAc,kBAAkB,EAAE,IAAIA,OACzE,KAAK,eAAe,MAAO,SAAS,IAChC,SACA,EAAE;6BACK,KAAK,IAAI,QAAQ,KAAK,IAAI;oDACH,KAAK,IAAI;oBACzC,CAAC,KAAK,cAAc,oCAAoC,KAAK,gBAAgB,aAAa,EAAE;;;IAAA,CAGrG;;;;AAKA,WAAA;;gBAEK,SAAS,KAAK,eAAe,CAAC,CAAC;8BACjB,KAAK,eAAe,YAAY,EAAE;gBAChD,KAAK,SAAS;;iDAEmB,WAAW;oDACR,cAAc;;;;;;0BAMxC,KAAK,eAAe,YAAY,EAAE;iBAC3C,MAAM,KAAK,WAAA,CAAY;;EAAA;AAGxC;AA7Pa,oBACK,SAAS;EACvB;;;;;;;;;EASA;EACA;EACA;EACA;EACA;EACA;AACF;AAOA,gBAAA;EADC,SAAS,EAAE,MAAM,SAAS,SAAS,KAAA,CAAM;AAAA,GAvB/B,oBAwBX,WAAA,oBAAA,CAAA;AAGA,gBAAA;EADC,SAAS,EAAE,MAAM,SAAS,SAAS,KAAA,CAAM;AAAA,GA1B/B,oBA2BX,WAAA,aAAA,CAAA;AAGA,gBAAA;EADC,MAAM;AAAA,GA7BI,oBA8BX,WAAA,gBAAA,CAAA;AAGA,gBAAA;EADC,SAAS,EAAE,MAAM,QAAQ,SAAS,KAAA,CAAM;AAAA,GAhC9B,oBAiCX,WAAA,cAAA,CAAA;AAGA,gBAAA;EADC,SAAS,EAAE,MAAM,QAAQ,SAAS,KAAA,CAAM;AAAA,GAnC9B,oBAoCX,WAAA,oBAAA,CAAA;AApCW,sBAAN,gBAAA;EADN,cAAc,uBAAuB;AAAA,GACzB,mBAAA;A;;;;;;;;;;AC5Cb,eAAsB,oBAAoB,IAA6B;AAC/D,QAAA,aAAiC,MAAM,eAAe,WAAW;AACvE,MAAI,CAAC,YAAY;AACT,UAAA,IAAI,MAAM,6BAA6B;EAAA;AAEzC,QAAA,MAAW,IAAI,IAAI,UAAU;AAC/B,MAAA,WAAW,aAAa,EAAE;AACxB,QAAA,WAAqB,MAAM,MAAM,GAAG;AACpC,QAAA,OAAO,MAAM,SAAS,KAAK;AAC3B,QAAA,gBAAgB,KAAK,SAAS,KAAK,CAAC,MAAuC,EAAE,eAAe,QAAQ;AAC1G,SAAO,cAAc;AACvB;;;ACdA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;eAAsB,gBAAgB,YAAmC;AACvE,MAAI,CAAC,YAAY;AACT,UAAA,IAAI,MAAM,kDAAkD;EAAA;AAG9D,QAAA,UAAU,UAAU,UAAU,UAAU;AAChD;A;;;;;ACJO,IAAM,kBAAkB;;;;;AAMxB,IAAM,eAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDrB,IAAM,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CxB,IAAM,eAA2D;EACtE,MAAM;IACJ,SAAS;IACT,WAAW;IACX,gBAAgB;IAChB,cAAc;IACd,eAAe;IACf,oBAAoB;EAAA;EAEtB,OAAO;IACL,SAAS;IACT,WAAW;IACX,gBAAgB;IAChB,cAAc;IACd,eAAe;IACf,oBAAoB;EAAA;AAExB;AAGa,IAAA,uBAAN,cAAmC,WAAW;EAA9C,cAAA;AAAA,UAAA,GAAA,SAAA;AAagB,SAAA,aAAA;AAGG,SAAA,eAAA;AAMK,SAAA,oBAAA;AAEsB,SAAA,gBAAA,IAAI,cAAc,MAAM,cAAc;AACxC,SAAA,QAAA,IAAI,cAAc,MAAM,YAAY;EAAA;EAGrF,IAAY,iBAAiB;AAC3B,QAAI,CAAC,KAAK,MAAM,MAAA,QAAc,CAAA;AAEvB,WAAA;MACL,qBAAqB,KAAK,MAAM,MAAM;MACtC,uBAAuB,KAAK,MAAM,MAAM;MACxC,6BAA6B,KAAK,MAAM,MAAM;MAC9C,0BAA0B,KAAK,MAAM,MAAM;MAC3C,oBAAoB,KAAK,MAAM,MAAM;MACrC,0BAA0B,KAAK,MAAM,MAAM;IAAA;EAC7C;EAGF,kBAAkB;AACZ,QAAA,KAAK,cAAc,OAAO;AACvB,WAAA,eAAe,CAAC,KAAK;IAAA,OACrB;AACA,WAAA;QACH,IAAI,YAAY,kBAAkB;UAChC,SAAS;UACT,UAAU;QAAA,CACX;MAAA;IACH;EACF;EAGF,gBAAsB;AACpB,SAAK,eAAe;EAAA;EAGtB,aAAmB;AACH,kBAAA;AACd,SAAK,cAAc;AAEd,SAAA;MACH,IAAI,YAAY,qBAAqB;QACnC,SAAS;QACT,UAAU;MAAA,CACX;IAAA;EACH;EAGF,MAAM,gBAA+B;AAC7B,UAAA,gBAAgB,KAAK,cAAc,KAAM;AAC/C,SAAK,oBAAoB;AACzB,UAAM,IAAI,QAAQ,CAAAC,OAAK,WAAWA,IAAG,GAAI,CAAC;AAC1C,SAAK,oBAAoB;EAAA;EAG3B,MAAM,sBAAqC;AACnC,UAAA,aAAiC,MAAM,eAAe,WAAW;AAEvE,QAAI,YAAY;AACT,WAAA,2BAA2B,KAAK,cAAc,OAChD;QACC,UAAU,OAAO,UAA+C;AAC9D,iBAAO,QAAQ,oBAAoB,KAAK,EAAE,MAAM,MAAc,GAAG,IAAI;QAAA,CACtE;MAAA,EAEF,UAAU,CAAC,YAA0B;AACpC,aAAK,iBAAiB;MAAA,CACvB;IAAA;EACL;EAGO,oBAAoB;AAC3B,UAAM,kBAAkB;AACnB,SAAA,oBAAA,EAAsB,KAAK;EAAA;EAGzB,uBAAuB;AAC9B,UAAM,qBAAqB;AAE3B,SAAK,0BAA0B,YAAY;EAAA;EAGpC,SAAS;AAChB,UAAM,SAAS;uBACI,KAAK,eAAe;UACjC,KAAK,cAAc,QACjB,KAAK,cAAc,MAAM,MAAM,GAAG,CAAC,IAAI,SAAS,KAAK,cAAc,MAAM,MAAM,EAAE,IACjF,KAAK,UAAU;;;;;;;;;;;;;;AAejB,UAAA,WAAW,KAAK,eAClB;;6BAEqB,KAAK,aAAa;;;;;;;;;;;;;;;;;;;kBAmB7B,KAAK,cAAc,OAAO,MAAM,GAAG,CAAC,CAAC,OAAO,KAAK,cAAc,OAAO,MAAM,EAAE,CAAC;;;gBAGjF,KAAK,iBACH,mDAAmD,KAAK,cAAc,cACtE,EAAE;;;;+BAIW,KAAK,aAAa;kBAC/B,CAAC,KAAK,oBACJ;;;;;;;;;;;;gCAaA,UAAU;;;+BAGC,KAAK,UAAU;;;;;;;;;;;;;;;;;;YAmBtC;AAEG,WAAA;uBACY,SAAS,KAAK,cAAc,CAAC,0BAA0B,MAAM,IAAI,QAAQ;;EAAA;AAGhG;AAtMa,qBACK,SAAS;EACvB;;;;;EAKA;EACA;EACA;AACF;AAGAC,iBAAA;EADC,SAAS,EAAE,MAAM,QAAQ,SAAS,KAAA,CAAM;AAAA,GAZ9B,qBAaX,WAAA,cAAA,CAAA;AAGAA,iBAAA;EADC,MAAM;AAAA,GAfI,qBAgBX,WAAA,gBAAA,CAAA;AAGAA,iBAAA;EADC,MAAM;AAAA,GAlBI,qBAmBX,WAAA,kBAAA,CAAA;AAGAA,iBAAA;EADC,MAAM;AAAA,GArBI,qBAsBX,WAAA,qBAAA,CAAA;AAtBW,uBAANA,iBAAA;EADN,cAAc,wBAAwB;AAAA,GAC1B,oBAAA;A;;;;;;;;;;AClCN,IAAMC,qBAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4B1B,IAAMC,yBAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgG9B,IAAMC,oBAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DzB,IAAMC,uBAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgH5B,IAAMC,kBAAiB;;;;;;;;;AAUvB,IAAMC,mBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzQlB,IAAA,uBAAN,cAAmC,WAAW;EAA9C,cAAA;AAAA,UAAA,GAAA,SAAA;AAoBgB,SAAA,YAAA;AAGM,SAAA,kBAAA;AAGH,SAAA,eAAA;AAGH,SAAA,aAAA;AAGrB,SAAA,WAAmD,CAAA;EAAC;EAE3C,oBAAoB;AAC3B,UAAM,kBAAkB;EAAA;EAG1B,MAAM,YAAY,QAA6D;AAC7E,SAAK,eAAe;AAEpB,UAAM,IAAI,QAAQ,CAAAC,OAAK,WAAWA,IAAG,GAAG,CAAC;AAEpC,SAAA;MACH,IAAI,YAAY,oBAAoB;QAClC,QAAQ;QACR,SAAS;QACT,UAAU;MAAA,CACX;IAAA;AAGH,SAAK,eAAe;EAAA;EAGtB,MAAM,aAA4B;AAChC,SAAK,eAAe;AAEpB,UAAM,IAAI,QAAQ,CAAAA,OAAK,WAAWA,IAAG,GAAG,CAAC;AAEzC,SAAK,YAAY;AAEZ,SAAA;MACH,IAAI,YAAY,2BAA2B;QACzC,QAAQ,IAAI,MAAM,yBAAyB;QAC3C,SAAS;QACT,UAAU;MAAA,CACX;IAAA;AAGH,SAAK,eAAe;EAAA;EAGb,SAAS;AAChB,UAAM,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCpB,UAAM,eAAe;;UAEf,KAAK,SAAS;MACd,CAAC,EAAE,WAAW,MAAA,MAAY;0BACV,MAAM,KAAK,YAAY,EAAE,WAAW,MAAA,CAAO,CAAC;;kBAEpD,UAAU,MAAM,GAAG,CAAC,CAAC,OAAO,UAAU,MAAM,EAAE,CAAC;;oDAEb,KAAK;;;IAAA,CAGhD;;;AAIE,WAAA;6CACkC,KAAK,eAAe,YAAY,EAAE,WAAW,KAAK,SAAS;;;;;4EAK5B,KAAK,UAAU;;iCAE1D,MAAM,KAAK,WAAA,CAAY;;;;;;;;;;;;;gBAaxC,KAAK,kBAAkB,cAAc,YAAY;;;;;;;;0BAQvC,KAAK,eAAe,YAAY,EAAE;iBAC3C,MAAM,KAAK,WAAA,CAAY;;EAAA;AAGxC;AA3Ja,qBACK,SAAS;EACvB;;;;;;;;;EASAC;EACAC;EACAC;EACAC;EACAC;EACAC;AACF;AAGAC,iBAAA;EADC,SAAS,EAAE,MAAM,SAAS,SAAS,KAAA,CAAM;AAAA,GAnB/B,qBAoBX,WAAA,aAAA,CAAA;AAGAA,iBAAA;EADC,SAAS,EAAE,MAAM,SAAS,SAAS,KAAA,CAAM;AAAA,GAtB/B,qBAuBX,WAAA,mBAAA,CAAA;AAGAA,iBAAA;EADC,MAAM;AAAA,GAzBI,qBA0BX,WAAA,gBAAA,CAAA;AAGAA,iBAAA;EADC,SAAS,EAAE,MAAM,QAAQ,SAAS,KAAA,CAAM;AAAA,GA5B9B,qBA6BX,WAAA,cAAA,CAAA;AAGAA,iBAAA;EADC,SAAS,EAAE,MAAM,QAAQ,SAAS,MAAM,WAAW,CAAU,UAAA,QAAQ,KAAK,MAAM,KAAK,IAAI,CAAA,EAAA,CAAK;AAAA,GA/BpF,qBAgCX,WAAA,YAAA,CAAA;AAhCW,uBAANA,iBAAA;EADN,cAAc,2BAA2B;AAAA,GAC7B,oBAAA;A;;;;;;;;;;;;AC3Cb,IAAAC,iBAAA;AAAA,IAAAA,iBAAA;AAAA,IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;AAAA,IAAAA,iBAAA;AAAA,IAAAA,iBAAA;AAAO,SAAS,sBAAsB;AAClC,QAAM,KAAK,IAAI,YAAY,CAAC;AAC5B,MAAI,OAAO,WAAW,eAAe,OAAO,iBAAiB;AACzD,WAAO,gBAAgB,EAAE;AAAA,EAC7B,OAAO;AACH,aAASC,KAAI,GAAGA,KAAI,GAAG,QAAQA,MAAK;AAChC,SAAGA,EAAC,IAAI,KAAK,MAAM,KAAK,OAAO,IAAI,UAAU;AAAA,IACjD;AAAA,EACJ;AACA,SAAO,MAAM,KAAK,EAAE,EAAE,IAAI,CAAAC,OAAKA,GAAE,SAAS,EAAE,CAAC,EAAE,KAAK,EAAE;AAC1D;;;ACVA,IAAAC,iBAAA;AAAA,IAAAA,iBAAA;AAAA,IAAAA,iBAAA;AAAA,IAAM,kBAAkB;AAAA,EACpB,YAAY;AAAA,IACR,OAAO;AAAA,IACP,aAAa;AAAA,IACb,cAAc;AAAA,IACd,QAAQ;AAAA,MACJ,OAAO;AAAA,QACH,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,UAAU;AAAA,QACN,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,kBAAkB;AAAA,QACd,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,gBAAgB;AAAA,QACZ,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,WAAW;AAAA,QACP,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,cAAc;AAAA,IACV,OAAO;AAAA,IACP,aAAa;AAAA,IACb,cAAc;AAAA,IACd,QAAQ;AAAA,MACJ,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,UAAU;AAAA,QACN,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,kBAAkB;AAAA,QACd,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,gBAAgB;AAAA,QACZ,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,mBAAmB;AAAA,QACf,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,IAAI;AAAA,IACA,OAAO;AAAA,IACP,aAAa;AAAA,IACb,cAAc;AAAA,IACd,QAAQ;AAAA,MACJ,KAAK;AAAA,QACD,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,UAAU;AAAA,QACN,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,aAAa;AAAA,QACT,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL,KAAK;AAAA,QACD,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,qBAAqB;AAAA,QACjB,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,KAAK;AAAA,IACD,OAAO;AAAA,IACP,aAAa;AAAA,IACb,cAAc;AAAA,IACd,QAAQ;AAAA,MACJ,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,aAAa;AAAA,QACT,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,YAAY;AAAA,QACR,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,cAAc;AAAA,QACV,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,MAAM;AAAA,QACF,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,WAAW;AAAA,QACP,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,UAAU;AAAA,QACN,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,aAAa;AAAA,QACT,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,YAAY;AAAA,QACR,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,cAAc;AAAA,QACV,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,MAAM;AAAA,QACF,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,WAAW;AAAA,QACP,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,qBAAqB;AAAA,QACjB,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,OAAO;AAAA,IACH,OAAO;AAAA,IACP,aAAa;AAAA,IACb,cAAc;AAAA,IACd,QAAQ;AAAA,MACJ,YAAY;AAAA,QACR,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,cAAc;AAAA,QACV,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,OAAO;AAAA,QACH,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,MAAM;AAAA,QACF,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,WAAW;AAAA,QACP,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,UAAU;AAAA,QACN,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL,YAAY;AAAA,QACR,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,cAAc;AAAA,QACV,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,OAAO;AAAA,QACH,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,qBAAqB;AAAA,QACjB,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,UAAU;AAAA,IACN,OAAO;AAAA,IACP,aAAa;AAAA,IACb,cAAc;AAAA,IACd,QAAQ;AAAA,MACJ,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,WAAW;AAAA,QACP,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,iBAAiB;AAAA,QACb,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,mBAAmB;AAAA,QACf,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,gBAAgB;AAAA,QACZ,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,kBAAkB;AAAA,QACd,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,MAAM;AAAA,QACF,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,WAAW;AAAA,QACP,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,UAAU;AAAA,QACN,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,WAAW;AAAA,QACP,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,iBAAiB;AAAA,QACb,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,mBAAmB;AAAA,QACf,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,gBAAgB;AAAA,QACZ,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,kBAAkB;AAAA,QACd,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,qBAAqB;AAAA,QACjB,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,eAAe;AAAA,IACX,OAAO;AAAA,IACP,aAAa;AAAA,IACb,cAAc;AAAA,IACd,QAAQ;AAAA,MACJ,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,aAAa;AAAA,QACT,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,gBAAgB;AAAA,IACZ,OAAO;AAAA,IACP,aAAa;AAAA,IACb,cAAc;AAAA,IACd,QAAQ;AAAA,MACJ,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,OAAO;AAAA,IACH,OAAO;AAAA,IACP,aAAa;AAAA,IACb,cAAc;AAAA,IACd,QAAQ;AAAA,MACJ,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,MACA,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,QACN,UAAU;AAAA,MACd;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,MACL,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,QAAQ;AAAA,QACJ,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,MACA,SAAS;AAAA,QACL,aAAa;AAAA,QACb,MAAM;AAAA,MACV;AAAA,IACJ;AAAA,EACJ;AACJ;AAEA,IAAO,2BAAQ;;;ACtiBf,IAAAC,iBAAA;AAAA,IAAAA,iBAAA;AAAA,IAAAA,iBAAA;AAAA,IAAM,eAAe;AAAA,EACjB,gBAAgB;AAAA,IACZ,SAAS;AAAA,IACT,MAAM;AAAA,EACV;AAAA,EACA,eAAe;AAAA,IACX,SAAS;AAAA,IACT,MAAM;AAAA,EACV;AAAA,EACA,sBAAsB;AAAA,IAClB,SAAS;AAAA,IACT,MAAM;AAAA,EACV;AAAA,EACA,sBAAsB;AAAA,IAClB,SAAS;AAAA,IACT,MAAM;AAAA,EACV;AAAA,EACA,cAAc;AAAA,IACV,SAAS;AAAA,IACT,MAAM;AAAA,EACV;AAAA,EACA,eAAe;AAAA,IACX,SAAS;AAAA,IACT,MAAM;AAAA,EACV;AACJ;AAEA,IAAO,wBAAQ;;;AC3Bf,IAAAC,iBAAA;AAAA,IAAAA,iBAAA;AAAA,IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;AAAA,IAAAA,iBAAA;AAAA,IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;AAAA,IAAAA,iBAAA;AAAA,IAAAA,iBAAA;AAQA,SAAS,iBAAiB,cAAc,YAAY,OAAO;AACvD,OAAK,gBAAgB;AACrB,OAAK,YAAY,CAAC,CAAC;AACnB,OAAK,WAAW;AAChB,OAAK,kBAAkB,CAAC;AACxB,OAAK,0BAA0B;AAC/B,OAAK,WAAW,IAAI,QAAQ,CAAC,SAAS,WAAW,KAAK,mBAAmB,OAAO,EAAE,KAAK,MAAM,IAAI;AACjG,OAAK,iBAAiB,KAAK,eAAe,KAAK,IAAI;AACnD,SAAO,iBAAiB,WAAW,KAAK,gBAAgB,KAAK;AACjE;AAEA,iBAAiB,YAAY;AAAA,EAEzB,UAAU;AAAA,EAEV,iBAAiB;AAAA,EAEjB,aAAa;AACT,UAAM,EAAC,iBAAgB,IAAI;AAC3B,QAAI,kBAAkB;AAClB,WAAK,mBAAmB;AACxB,WAAK,WAAW;AAChB,uBAAiB;AAAA,IACrB;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,eAAe,EAAC,KAAI,GAAG;AACnB,QAAI,KAAK,QAAQ;AACb,WAAK,qBAAqB,KAAK,OAAO,QAAQ;AAC9C,aAAO,KAAK,WAAW;AAAA,IAC3B;AACA,QAAI,KAAK,oBAAoB;AACzB,YAAM,EAAC,SAAS,GAAG,OAAM,IAAI,KAAK,oBAC9B,UAAU,KAAK,gBAAgB,OAAO;AAC1C,UAAI,SAAS;AACT,eAAO,KAAK,gBAAgB,OAAO;AACnC,gBAAQ,MAAM;AACd,YAAI,KAAK,WAAW;AAChB,iBAAO,oBAAoB,WAAW,KAAK,gBAAgB,KAAK;AAChE,eAAK,cAAc,MAAM;AAAA,QAC7B;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA,EAKA,wBAAwB;AACpB,aAAS,OAAO,KAAK;AACjB,UAAI,KAAK,gBAAgB,eAAe,GAAG,GAAG;AAC1C,cAAM,UAAU,KAAK,gBAAgB,GAAG;AACxC,eAAO,KAAK,gBAAgB,GAAG;AAC/B,gBAAQ,sBAAa,oBAAoB;AAAA,MAC7C;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,YAAY,QAAQ;AAChB,UAAM,QAAQ,oBAAoB;AAClC,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,WAAK,SAAS,KAAK,MAAM;AACrB,aAAK,gBAAgB,KAAK,IAAI,4BAA4B,KAAK,MAAM,SAAS,MAAM;AACpF,iBAAS,OAAO,OAAO,EAAC,SAAS,OAAO,yBAAyB,KAAK,gBAAe,GAAG,MAAM;AAC9F,YAAI,KAAK,yBAAyB;AAC9B,mBAAS,KAAK,wBAAwB,MAAM;AAAA,QAChD;AACA,aAAK,cAAc,YAAY,QAAQ,GAAG;AAAA,MAC9C,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,qBAAqB,uBAAuB;AACxC,UAAM,aAAa,wBAAwB,KAAK;AAChD,QAAI,eAAe,EAAG;AACtB,UAAM,QAAQ,gDAAgD,KAAK,eAAe,0DAA0D,qBAAqB;AACjK,QAAI,aAAa,GAAG;AAChB,cAAQ,KAAK,QAAQ,kFAAkF;AAAA,IAC3G,WAAW,aAAa,GAAG;AACvB,WAAK,cAAc,MAAM;AACzB,YAAM,IAAI,MAAM,KAAK;AAAA,IACzB;AAAA,EACJ;AACJ;AAEA,SAAS,4BAA4B,SAAS,QAAQ,KAAK;AACvD,MAAI,IAAI,OAAO;AACX,WAAO,GAAG;AAAA,EACd,OAAO;AACH,YAAQ,GAAG;AAAA,EACf;AACJ;AAEA,IAAO,4BAAQ;;;AD1Gf,SAAS,sBAAsB,aAAa;AACxC,QAAM,MAAM,GAAG,WAAW,YACtBC,KAAI,KACJ,IAAI,KAEJ,iBAAiB,OAAO,eAAe,SAAY,OAAO,aAAa,OAAO,SAC9E,gBAAgB,OAAO,cAAc,SAAY,OAAO,YAAY,OAAO,SAC3E,qBAAqB,OAAO,aAAa,OAAO,aAAa,SAAS,gBAAgB,cAAc,SAAS,gBAAgB,cAAc,OAAO,OAClJ,sBAAsB,OAAO,cAAc,OAAO,cAAc,SAAS,gBAAgB,eAAe,SAAS,gBAAgB,eAAe,OAAO,QACvJ,OAAS,qBAAqB,IAAMA,KAAI,IAAM,gBAC9C,MAAQ,sBAAsB,IAAM,IAAI,IAAM;AAElD,QAAM,eAAe,OAAO,KAAK,KAAK,oBAAoB,UAAU,CAAC,UAAUA,EAAC,QAAQ,GAAG,SAAS,IAAI,iFAAiF;AACzL,SAAO,IAAI,0BAAiB,cAAc,IAAI,EAAE;AACpD;AAEA,IAAI,wBAAwB;AAO5B,SAAS,sBAAsB,aAAa;AAExC,MAAI,CAAC,uBAAuB;AACxB,UAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,WAAO,MAAM,SAAS;AACtB,WAAO,OAAO,QAAQ;AAAA,MAClB,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,aAAa;AAAA,MACb,gBAAgB;AAAA,MAChB,KAAK,GAAG,WAAW;AAAA,IACvB,CAAC;AACD,aAAS,KAAK,YAAY,MAAM;AAChC,4BAAwB,IAAI,0BAAiB,OAAO,aAAa;AAAA,EACrE;AACA,SAAO,sBAAsB;AACjC;;;AE9CA,IAAAC,iBAAA;AAAA,IAAAA,iBAAA;AAAA,IAAAA,iBAAA;;;ACAA,IAAAC,iBAAA;AAAA,IAAAA,iBAAA;AAAA,IAAAA,iBAAA;AAAA,SAAS,gBAAgB,EAAC,SAAS,QAAQ,QAAQ,YAAW,GAAG;AAC7D,OAAK,MAAM;AACX,OAAK,SAAS;AACd,OAAK,SAAS,OAAO,MAAM;AAC3B,OAAK,aAAa;AAElB,SAAO,OAAO,IAAI;AAClB,SAAO,OAAO,KAAK,MAAM;AAC7B;AAEA,gBAAgB,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,EAKxB,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA,EAML,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,EAMR,QAAQ,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA,EAMT,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,EAMZ,IAAI,YAAY;AAEZ,WAAO,KAAK,aAAa,OAAO,oBAAI,KAAK,GAAE,QAAQ;AAAA,EACvD;AAAA,EAEA,SAAS;AACL,WAAO;AAAA,MACH,SAAS,KAAK;AAAA,MACd,QAAQ,KAAK;AAAA,MACb,QAAQ,KAAK,OAAO,MAAM;AAAA,MAC1B,aAAa,KAAK;AAAA,IACtB;AAAA,EACJ;AACJ;AAEA,IAAO,2BAAQ;;;ADpDf,IAAM,gBAAgB;AAAtB,IACI,mBAAmB,CAAC;AAExB,SAAS,aAAa;AAClB,SAAO,OAAO;AAClB;AAOA,IAAM,uBAAuB;AAEtB,SAAS,oBAAoB,cAAc;AAC9C,QAAM,UAAU,IAAI,yBAAgB,YAAY;AAChD,MAAI,CAAC,sBAAsB;AACvB,qBAAiB,QAAQ,MAAM,IAAI;AAAA,EACvC,OAAO;AACH,eAAW,EAAE,QAAQ,gBAAgB,QAAQ,QAAQ,KAAK,UAAU,OAAO,CAAC;AAAA,EAChF;AACJ;AAEA,SAAS,2BAA2B,QAAQ;AACxC,MAAI;AACJ,MAAI,CAAC,sBAAsB;AACvB,cAAU,iBAAiB,MAAM;AAAA,EACrC,OAAO;AACH,UAAM,WAAW,WAAW,EAAE,QAAQ,gBAAgB,MAAM;AAC5D,QAAI,UAAU;AACV,gBAAU,IAAI,yBAAgB,KAAK,MAAM,QAAQ,CAAC;AAAA,IACtD;AAAA,EACJ;AACA,MAAI,CAAC,QAAS,QAAO;AACrB,MAAI,QAAQ,WAAW;AACnB,kBAAc,MAAM;AACpB,WAAO;AAAA,EACX;AACA,SAAO;AACX;AAQO,SAAS,mBAAmB,QAAQ,QAAQ;AAC/C,QAAM,UAAU,2BAA2B,MAAM;AACjD,MAAI,CAAC,WAAW,CAAC,QAAQ,OAAO,SAAS,MAAM,EAAG,QAAO;AACzD,SAAO;AACX;AAMO,SAAS,yBAAyB;AACrC,QAAM,UAAU,WAAW;AAC3B,SAAO,OAAO,KAAK,OAAO,EACrB,OAAO,SAAO,IAAI,QAAQ,aAAa,MAAM,CAAC,EAC9C,IAAI,SAAO,2BAA2B,IAAI,OAAO,cAAc,MAAM,CAAC,CAAC,EACvE,OAAO,aAAW,CAAC,CAAC,OAAO;AACpC;AAMO,SAAS,cAAc,QAAQ;AAClC,MAAI,CAAC,sBAAsB;AACvB,WAAO,iBAAiB,MAAM;AAAA,EAClC,OAAO;AACH,eAAW,EAAE,WAAW,gBAAgB,MAAM;AAAA,EAClD;AACJ;;;AHxEA,SAAS,YAAY,KAAK;AACtB,SAAO,OAAO,OAAO,IAAI,MAAM,GAAG,sBAAa,sBAAsB,EAAC,KAAK,IAAG,CAAC;AACnF;AAQO,SAAS,0BAA0B,QAAQ,aAAa;AAC3D,MAAI;AACA,UAAM,EAAC,OAAM,IAAI;AAEjB,QAAI,CAAC;AACD,YAAM,YAAY,iCAAiC;AACvD,UAAM,mBAAmB,yBAAgB,MAAM;AAE/C,QAAI,CAAC;AACD,YAAM,YAAY,oBAAoB,MAAM,IAAI;AAEpD,UAAM,gBAAgB,qBAAqB,kBAAkB,MAAM;AAEnE,WAAO,iBAAiB,eAAe,WAAW,EAE7C,KAAK,eAAa,YAAY,eAAe,SAAS,CAAC;AAAA,EAChE,SAASC,IAAG;AACR,UAAM,EAAC,OAAO,IAAI,SAAS,IAAG,IAAIA,IAC9B,MAAM,EAAC,SAAS,KAAI;AACxB,QAAI,KAAK;AACL,UAAI,MAAM;AAAA,IACd;AACA,WAAO,QAAQ,OAAO,GAAG;AAAA,EAC7B;AACJ;AAQA,SAAS,iBAAiB,QAAQ,aAAa;AAE3C,MAAI,OAAO,QAAQ;AACf,UAAM,UAAU,mBAAmB,OAAO,QAAQ,OAAO,MAAM;AAC/D,QAAI,SAAS;AACT,aAAO,UAAU,QAAQ;AAEzB,aAAO,sBAAsB,WAAW;AAAA,IAC5C;AAAA,EACJ;AAEA,aAAW,MAAM;AACb,QAAI,OAAO,WAAW,iBAAiB;AACnC,4BAAsB,WAAW;AAAA,IACrC;AAAA,EACJ,GAAG,GAAG;AAEN,SAAO,sBAAsB,WAAW;AAC5C;AAQA,SAAS,YAAY,QAAQ,WAAW;AACpC,SAAO,UAAU,YAAY,MAAM,EAC9B,KAAK,YAAU;AAEZ,QAAI,OAAO,WAAW,mBAAmB,OAAO,SAAS;AAErD,0BAAoB,MAAM;AAAA,IAC9B;AACA,WAAO;AAAA,EACX,CAAC;AACT;AAQA,SAAS,qBAAqB,kBAAkB,QAAQ;AAEpD,MAAI,OAAO,WAAW;AAClB,UAAM,YAAY,6BAA6B;AACnD,QAAM,EAAC,QAAQ,OAAM,IAAI,QACrB,gBAAgB,EAAC,OAAM;AAE3B,MAAI,UAAU,CAAC,kBAAkB,KAAK,MAAM;AACxC,UAAM,YAAY,kEAAkE;AAExF,aAAW,OAAO,iBAAiB,QAAQ;AACvC,UAAM,QAAQ,iBAAiB,OAAO,GAAG,GACrC,QAAQ,OAAO,GAAG;AACtB,QAAI,OAAO;AACP,oBAAc,GAAG,IAAI;AAAA,IACzB,WAAW,MAAM,UAAU;AACvB,YAAM,YAAY,cAAc,GAAG,6BAA6B,MAAM,IAAI;AAAA,IAC9E;AAAA,EACJ;AACA,SAAO;AACX;;;AK/GA,IAAAC,iBAAA;AAAA,IAAAA,iBAAA;AAAA,IAAAA,iBAAA;AAAA,SAAS,WAAW,QAAQ,MAAM;AAC9B,MAAI,UAAU,MAAM;AAChB,YAAQ,OAAO,SAAS;AAAA,EAC5B;AACA,MAAI,MAAM,CAAC,MAAM,IAAK,SAAQ,MAAM,OAAO,CAAC;AAC5C,QAAM,OAAO,CAAC;AACd,WAAS,MAAM,MAAM,MAAM,GAAG,GAAG;AAC7B,UAAM,CAAC,KAAK,KAAK,IAAI,GAAG,MAAM,GAAG,EAAE,IAAI,OAAK,mBAAmB,CAAC,CAAC;AACjE,SAAK,GAAG,IAAI;AAAA,EAChB;AACA,SAAO;AACX;AAEO,SAAS,0BAA0B,cAAc;AACpD,MAAI,OAAQ,aAAc,eAAe,CAAC,SAAS,iBAAkB;AACrE,WAAS,iBAAiB,SAAS,SAAS,eAAeC,IAAG;AAE1D,QAAIA,GAAE,OAAO,YAAY,QAAQA,GAAE,OAAO,QAAQ,IAAI,QAAQ,cAAc,MAAM,EAAG;AACrF,IAAAA,GAAE,eAAe;AACjB,IAAAA,GAAE,yBAAyB;AAC3B,UAAM,EAAC,UAAU,YAAY,OAAM,IAAI,IAAI,IAAIA,GAAE,OAAO,IAAI;AAC5D,QAAI,CAAC,CAAC,MAAM,KAAK,EAAE,SAAS,UAAU,GAAG;AACrC,YAAM,gCAAgC,UAAU,+EAA+E,OAAO,SAAS,MAAM,GAAG;AACxJ;AAAA,IACJ;AAEA,UAAM,SAAS,WAAW,MAAM;AAChC,iBAAa,QAAQ,YAAY,MAAM;AAAA,EAC3C,GAAG,KAAK;AACZ;;;ATtBA,IAAI,OAAO,WAAW,YAAY,OAAO,OAAO,UAAU,YAAY;AAClE,QAAM,IAAI,MAAM,oGAAoG;AACxH;AAKA,SAAS,eAAe;AACxB;AAEA,aAAa,YAAY;AAAA,EACrB,aAAa;AAAA,EACb;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,QAAQ,QAAQ,QAAQ;AACpB,WAAO,0BAA0B,OAAO,OAAO,UAAU,CAAC,GAAG,EAAC,OAAM,CAAC,GAAG,KAAK,WAAW;AAAA,EAC5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,aAAa,QAAQ;AACjB,WAAO,KAAK,QAAQ,iBAAiB,MAAM;AAAA,EAC/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,UAAU,QAAQ;AACd,aAAS,OAAO,OAAO,CAAC,GAAG,MAAM;AACjC,QAAI,CAAC,OAAO,OAAO;AACf,aAAO,QAAQ,oBAAoB;AAAA,IACvC;AACA,WAAO,KAAK,QAAQ,cAAc,MAAM;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,GAAG,QAAQ;AAEP,WAAO,KAAK,QAAQ,MAAM,MAAM;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA,MAAM,QAAQ;AACV,WAAO,KAAK,QAAQ,SAAS,MAAM;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBA,IAAI,QAAQ;AACR,WAAO,KAAK,QAAQ,OAAO,MAAM;AAAA,EACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,MAAM,QAAQ;AACV,WAAO,KAAK,QAAQ,SAAS,MAAM;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAcA,SAAS,QAAQ;AACb,WAAO,KAAK,QAAQ,YAAY,MAAM;AAAA,EAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,YAAY,QAAQ;AAChB,aAAS,OAAO,OAAO,CAAC,GAAG,QAAQ,EAAC,SAAS,uBAAuB,OAAO,OAAO,EAAC,CAAC;AACpF,WAAO,KAAK,QAAQ,gBAAgB,MAAM;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,cAAc,QAAQ;AAClB,WAAO,KAAK,QAAQ,kBAAkB,MAAM;AAAA,EAChD;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,sBAAsB;AAClB,WAAO,oBAAoB;AAAA,EAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,yBAAyB,QAAQ,QAAQ;AACrC,WAAO,CAAC,CAAC,mBAAmB,QAAQ,MAAM;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,uBAAuB;AACnB,WAAO,uBAAuB;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,sBAAsB,QAAQ;AAC1B,kBAAc,MAAM;AAAA,EACxB;AACJ;AAOA,SAAS,uBAAuB,SAAS;AACrC,UAAQ,OAAO,SAAS;AAAA,IACpB,KAAK;AACD,aAAO;AAAA,IACX,KAAK;AACD,aAAO;AAAA,EACf;AACA,SAAO,KAAK,UAAU,OAAO;AACjC;AAEA,IAAM,SAAS,IAAI,aAAa;AAChC,OAAO,UAAU;AAEjB,0BAA0B,MAAM;AAIhC,IAAO,cAAQ;;;AU9MR,IAAM,YAAY;AAElB,IAAM,eAAN,MAA8C;EAA9C,cAAA;AACL,SAAA,aAAyB,WAAW;AAEhB,SAAA,YAAA;AACE,SAAA,cAAA;AACD,SAAA,aAAA;AACC,SAAA,cAAA;EAAA;EAEtB,MAAM,cAAgC;AAC7B,WAAA;EAAA;EAGT,MAAM,aAA2C;AAC/C,WAAO,YACJ,UAAU,CAAA,CAAE,EACZ,KAAK,CAAA,YAAW,EAAE,SAAS,OAAO,OAAA,EAAS,EAC3C,MAAM,CAAKC,OAAA;AACV,YAAM,WAAWA,EAAC;IAAA,CACnB;EAAA;EAGL,MAAM,gBACJ,KACA,MAO0D;AAC1D,WAAO,YACJ,GAAG;MACF;MACA,QAAQ,MAAM;MACd,SAAS,MAAM,oBACX,KAAK,sBAAsB,cAAc,SACvC,WACA,YACF;IAAA,CACL,EACA,KAAK,CAAC,EAAE,oBAAA,OAA2B;MAClC,aAAa;MACb,eAAe,MAAM;IAAA,EACrB,EACD,MAAM,CAAKA,OAAA;AACV,YAAM,WAAWA,EAAC;IAAA,CACnB;EAAA;EAGL,MAAM,gBAA8E;AAC5E,UAAA;MACJ,MAAM;MACN,SAAS;IAAA;EACX;;;;EAMF,MAAM,cAA0E;AACxE,UAAA;MACJ,MAAM;MACN,SAAS;IAAA;EACX;EAGF,MAAM,aAAsE;AACpE,UAAA;MACJ,MAAM;MACN,SAAS;IAAA;EACX;AAEJ;AAEY,IAAA,iBAAA,CAAAC,mBAAL;AACLA,iBAAA,QAAS,IAAA;AACTA,iBAAA,SAAU,IAAA;AAFAA,SAAAA;AAAA,GAAA,iBAAA,CAAA,CAAA;A;;;;;;;AC5DL,IAAM,eAAe;AAErB,IAAM,kBAAN,MAAiD;EAAjD,cAAA;AACL,SAAA,aAAyB,WAAW;AAEhB,SAAA,YAAA;AACE,SAAA,cAAA;AACD,SAAA,aAAA;AACC,SAAA,cAAA;EAAA;EAEtB,MAAM,YAA2B;AAC/B,QAAI,CAAE,MAAM,KAAK,YAAA,GAAgB;AACzB,YAAA,IAAI,MAAM,4BAA4B;IAAA;EAC9C;EAGF,MAAM,cAAgC;AAGhC,QAAA,OAAO,SAAS,aAAa,eAAe,OAAO,SAAS,aAAa,SAAiB,QAAA;AAE9F,eAAO,kCAAY,EAChB,KAAK,CAAC,EAAE,aAAAC,eAAa,MAAM,MAAM,CAAC,SAASA,aAAW,EACtD,MAAM,MAAe,KAAK;EAAA;EAG/B,MAAM,WAAW,QAAuE;AACtF,WAAO,KAAK,UAAA,EACT,KAAK,YAAY;AACZ,UAAA,QAAQ,kBAA0B,QAAA;AACtC,iBAAO,oCAAc;IAAA,CACtB,EACA,KAAK,UAAM,iCAAW,CAAC,EACvB,KAAK,CAAC,EAAE,SAAS,MAAA,MAAY;AAC5B,UAAI,MAAa,OAAA;AACb,UAAA,CAAC,QAAe,OAAA;QAClB,MAAM;QACN,SAAS;MAAA;AAGX,aAAO,EAAE,QAAQ;IAAA,CAClB,EACA,MAAM,CAAKC,OAAA;AACV,YAAM,WAAWA,EAAC;IAAA,CACnB;EAAA;EAGL,MAAM,gBACJ,KACA,MAO0D;AAC1D,WAAO,KAAK,UAAA,EACT,KAAK,YAAY;AAChB,YAAM,EAAE,aAAa,eAAe,MAAA,IAAU,UAAM,sCAAgB,KAAK;QACvE,SAAS,MAAM;QACf,mBAAmB,MAAM;MAAA,CAC1B;AAED,UAAI,MAAa,OAAA;AAEV,aAAA,EAAE,aAAa,cAA6B;IAAA,CACpD,EACA,MAAM,CAAKA,OAAA;AACV,YAAM,WAAWA,EAAC;IAAA,CACnB;EAAA;EAGL,MAAM,cACJ,WACA,MAK8D;AAC9D,WAAO,KAAK,UAAA,EACT,KAAK,YAAY;AAChB,YAAM,EAAE,iBAAiB,eAAe,MAAA,IAAU,UAAM,oCAAc,WAAW;QAC/E,SAAS,MAAM;QACf,mBAAmB,MAAM;MAAA,CAC1B;AAEG,UAAA,SAAS,CAAC,gBAAuB,OAAA;AAE9B,aAAA,EAAE,iBAAiB,SAAO,KAAK,eAAe,EAAE,SAAS,QAAQ,GAAG,cAA6B;IAAA,CACzG,EACA,MAAM,CAAKA,OAAA;AACV,YAAM,WAAWA,EAAC;IAAA,CACnB;EAAA;EAGL,MAAM,YACJ,SACA,MAK4D;AAC5D,WAAO,KAAK,UAAA,EACT,KAAK,YAAY;AAChB,YAAM,EAAE,eAAe,eAAe,MAAA,IAAU,UAAM,kCAAY,SAAS;QACzE,SAAS,MAAM;QACf,mBAAmB,MAAM;MAAA,CAC1B;AAEG,UAAA,SAAS,CAAC,cAAqB,OAAA;AAE5B,aAAA;QACL,eAAe,OAAO,kBAAkB,WACpC,gBACA,SAAO,KAAK,aAAa,EAAE,SAAS,QAAQ;QAChD;MAAA;IACF,CACD,EACA,MAAM,CAAKA,OAAA;AACV,YAAM,WAAWA,EAAC;IAAA,CACnB;EAAA;EAGL,MAAM,aAAsE;AAC1E,WAAO,KAAK,UAAA,EACT,KAAK,YAAY;AAChB,YAAM,EAAE,SAAS,mBAAmB,MAAM,IAAI,UAAM,iCAAW;AAE/D,UAAI,MAAa,OAAA;AAEV,aAAA,EAAE,SAAS,kBAAkB;IAAA,CACrC,EACA,MAAM,CAAKA,OAAA;AACV,YAAM,WAAWA,EAAC;IAAA,CACnB;EAAA;AAEP;A;;;;;;AC7JO,IAAM,YAAY;AAElB,IAAM,eAAN,MAA8C;EAA9C,cAAA;AACL,SAAA,aAAyB,WAAW;AAEhB,SAAA,YAAA;AACE,SAAA,cAAA;AACD,SAAA,aAAA;AACC,SAAA,cAAA;EAAA;EAEtB,MAAM,cAAgC;AACpC,eAAO,yCAAY;EAAA;EAGrB,MAAM,aAA2C;AAC/C,UAAM,YAAY,YAAY;AACxB,UAAA,CAAE,UAAM,yCAAA,GAAgB;AACpB,cAAA,IAAI,MAAM,yBAAyB;MAAA;IAC3C;AAGF,WAAO,UAAU,EACd,KAAK,UAAM,0CAAA,CAAc,EACzB,KAAK,CAAA,aAAY,EAAE,QAAA,EAAU,EAC7B,MAAM,CAAKC,OAAA;AACV,YAAM,WAAWA,EAAC;IAAA,CACnB;EAAA;EAGL,MAAM,gBACJ,KACA,MAO0D;AAC1D,UAAM,YAAY,YAAY;AACxB,UAAA,CAAE,UAAM,yCAAA,GAAgB;AACpB,cAAA,IAAI,MAAM,yBAAyB;MAAA;AAG3C,UAAI,MAAM,SAAS;AACjB,gBAAQ,KAAK,gGAAgG;MAAA;AAG/G,UAAI,MAAM,mBAAmB;AAC3B,gBAAQ,KAAK,oFAAoF;MAAA;IACnG;AAGF,WAAO,UAAU,EACd,KAAK,UAAM,6CAAgB,GAAG,CAAC,EAC/B,KAAK,CAAA,iBAAgB,EAAE,YAAA,EAAc,EACrC,MAAM,CAAKA,OAAA;AACV,YAAM,WAAWA,EAAC;IAAA,CACnB;EAAA;EAGL,MAAM,gBAA8E;AAC5E,UAAA;MACJ,MAAM;MACN,SAAS;IAAA;EACX;EAGF,MAAM,cAA0E;AACxE,UAAA;MACJ,MAAM;MACN,SAAS;IAAA;EACX;EAGF,MAAM,aAAsE;AACpE,UAAA;MACJ,MAAM;MACN,SAAS;IAAA;EACX;AAEJ;A;;;;;AC1EO,IAAM,WAAW;AAEjB,IAAM,cAAN,MAA6C;EAA7C,cAAA;AACL,SAAA,aAAyB,WAAW;AAEhB,SAAA,YAAA;AACE,SAAA,cAAA;AACD,SAAA,aAAA;AACC,SAAA,cAAA;EAAA;EAEtB,cAAgC;AACvB,WAAA,IAAI,QAAiB,CAAW,YAAA;AAErC,iBAAW,MAAM;AACf,gBAAQ,OAAO,WAAW,eAAe,CAAC,CAAC,OAAO,KAAK;MAAA,GACtD,GAAG;IAAA,CACP;EAAA;EAGH,MAAM,aAA2C;AAC/C,UAAM,YAAY,YAAY;AAC5B,UAAI,CAAE,MAAM,KAAK,YAAA,GAAgB;AACzB,cAAA,IAAI,MAAM,wBAAwB;MAAA;IAC1C;AAGK,WAAA,UAAA,EACJ,KAAK,MAAM,OAAO,MAAO,QAAA,CAAS,EAClC,KAAK,CAAC,EAAE,UAAA,OAAiB,EAAE,SAAS,UAAA,EAAY,EAChD,MAAM,CAAKC,OAAA;AACV,YAAM,WAAWA,EAAC;IAAA,CACnB;EAAA;EAGL,MAAM,gBACJ,KACA,MAO0D;AAC1D,UAAM,YAAY,YAAY;AAC5B,UAAI,CAAE,MAAM,KAAK,YAAA,GAAgB;AACzB,cAAA,IAAI,MAAM,wBAAwB;MAAA;AAIxC,UAAA,MAAM,WACN,KAAK,sBAAsB,cAAc,UACzC,KAAK,sBAAsB,cAAc,SACzC;AACA,cAAM,IAAI,MAAM,sCAAsC,KAAK,iBAAiB,EAAE;MAAA;AAGhF,UAAI,MAAM,SAAS;AACjB,gBAAQ,KAAK,mFAAmF;MAAA;IAClG;AAGI,UAAA,OAAO,YACX,OAAO,MAAO;MACZ;MACA,MAAM,sBAAsB,cAAc,SAAS,YAAsB;;IAAA;AAG7E,WAAO,UAAU,EACd,KAAK,IAAI,EACT,KAAK,CAAA,YAAW,EAAE,aAAa,QAAQ,IAAA,EAAM,EAC7C,MAAM,CAAKA,OAAA;AACV,YAAM,WAAWA,EAAC;IAAA,CACnB;EAAA;EAGL,MAAM,gBAA8E;AAC5E,UAAA;MACJ,MAAM;MACN,SAAS;IAAA;EACX;EAGF,MAAM,cAA0E;AACxE,UAAA;MACJ,MAAM;MACN,SAAS;IAAA;EACX;EAGF,MAAM,aAAsE;AACpE,UAAA;MACJ,MAAM;MACN,SAAS;IAAA;EACX;AAEJ;AAEY,IAAA,gBAAA,CAAAC,kBAAL;AACLA,gBAAA,QAAS,IAAA;AACTA,gBAAA,SAAU,IAAA;AAFAA,SAAAA;AAAA,GAAA,gBAAA,CAAA,CAAA;A;;;;;;;;;;;;;;AC7GA,IAAAC,iBAAA;IAAAA,iBAAA;IAAAA,iBAAA;IAAAC,KAAAA,CAAAA,QACVA,GAAgB,gBAAA,iBAChBA,GAAuB,uBAAA,wBACvBA,GAAiB,iBAAA,kBACjBA,GAAoB,oBAAA,qBACpBA,GAAqB,qBAAA,sBAErBA,GAAyB,yBAAA,0BACzBA,GAAyB,yBAAA,0BACzBA,GAAa,aAAA,cACbA,GAAsB,sBAAA,uBACtBA,GAA8B,8BAAA,+BAXpBA,KAAAA,KAAA,CAAA,CAAA;AA0GL,SAASC,EAAmBC,IAAAA;AAC1B,SAAA,CAAA,CAAGA,GAAiBC;AAC7B;A;;;;;AC/FO,IAAMC,IAAN,MAAMA;EAGX,cAAAC;AAFcC,SAAAC,cAAAA;EAEC;EAEP,yBAA+BC,IAAsBC,IAAYC,GAAAA;AAChE,WAAA,IAAIC,SAAqFC,CAAAA,OAAAA;AACxF,YAAAC,KAAiBC,CAAAA,OAAAA;AACjB,YAAAA,GAAMC,WAAWC,UAAAA,CAAWF,GAAMG,QAAQH,GAAMI,WAAWF,OAAOE,OACpE;AAGeJ,QAAAA,GAAMG,KAEVE,YAAYT,MACvBE,GAAQE,EAAAA,GACDE,OAAAI,oBAAoB,WAAWP,IAAAA,KAAe;MACvD;AAGKG,aAAAK,iBAAiB,WAAWR,IAAAA,KAAe,GAEjDG,OAAeM,OAAOC,gBAAgBC,YAAYC,YAAYC,KAAKC,UAAU,EAC5EC,MAAMpB,IACNW,SAAST,GACTmB,QAAQpB,GAAAA,CAAAA,CAAAA;IACR,EAAA;EAEN;EAMA,MAAA,mBAAMqB;AACJ,UAAMC,KAA8C,EAClDb,QAAQF,OAAOE,QACfc,MAAMhB,OAAOiB,SAASD,MACtBE,aAAa,EAAEC,qBAAAA,MAA2BC,gBAAAA,KAAgB,EAAA,GAGtDC,IAAAA,MAAiB/B,KAAKgC,yBAG1BC,EAAUC,eAAeT,IAAqBU,OAAOC,WAAAA,CAAAA,GAAAA,EACjDb,QAAEA,GAAAA,IAAWQ,EAASpB;AAExB,QAAA,CAACY,MAAUA,GAAOc,MACd,OAAA,EACJC,MAAMf,IAAQe,QAAAA,IACdC,SAAShB,IAAQiB,gBAAgB,mBAAA;AAIrCxC,SAAKC,cAAAA;EACP;EAKA,MAAA,aAAMwC;AACA,QAAA;AAAA,YACIzC,KAAKwB,iBAAAA;IAAAA,SACJkB,IAAAA;AACA,aAAA,EACLL,OAAO,EACLC,MAAMI,IAAGJ,QAAAA,IACTC,SAASG,IAAGH,WAAW,mBAAA,EAAA;IAG7B;AAEA,UAAMd,KAAmD,EACvDb,QAAQF,OAAOE,QACfc,MAAMhB,OAAOiB,SAASD,KAAAA,GAGlBK,IAAAA,MAAiB/B,KAAKgC,yBAG1BC,EAAUU,sBAAsBlB,IAAqBU,OAAOC,WAAAA,CAAAA,GAAAA,EAExDb,QAAEA,GAAAA,IAAWQ,EAASpB;AAExB,WAAA,CAACY,MAAUA,GAAOc,QACb,EACLA,OAAO,EACLC,MAAMf,IAAQe,QAAAA,IACdC,SAAShB,IAAQiB,gBAAgB,mBAAA,EAAA,IAKhC,EAAEI,SAASrB,GAAOpB,QAAAA;EAC3B;EAKA,MAAA,gBAAsB0C,IAAAA;AASpB,QAAIA,GAAOC,MAAMC,UAAUF,GAAOC,MAAME,UAC/B,QAAA,EACLX,OAAO,EACLC,MAAAA,IACAC,SAAS,wDAAA,EAAA;AAKX,QAAA;AAAA,YACIvC,KAAKwB,iBAAAA;IAAAA,SACJkB,IAAAA;AACA,aAAA,EACLL,OAAO,EACLC,MAAMI,IAAGJ,QAAAA,IACTC,SAASG,IAAGH,WAAW,mBAAA,EAAA;IAG7B;AAEA,UAAMd,IAA8C,EAClDb,QAAQF,OAAOE,QACfc,MAAMhB,OAAOiB,SAASD,MACtBuB,SAASJ,GAAOC,MAAMI,mBACtBC,WAAWN,GAAOC,MAAMF,SACxBQ,KAAKP,GAAOO,KACZC,SAAS,cAAA,GAGLtB,KAAAA,MAAiB/B,KAAKgC,yBAG1BC,EAAUqB,gBAAgB7B,GAAqBU,OAAOC,WAAAA,CAAAA,GAAAA,EAElDb,QAAEA,GAAAA,IAAWQ,GAASpB;AAExB,WAAA,CAACY,MAAUA,GAAOc,QACb,EACLA,OAAO,EACLC,MAAMf,IAAQe,QAAAA,IACdC,SAAShB,IAAQiB,gBAAgB,mBAAA,EAAA,IAKhC,EACLe,aAAahC,GAAOpB,QAAQqD,WAC5BC,eAAelC,GAAOpB,QAAQsD,cAAAA;EAElC;EAEA,MAAA,YACElB,IACAO,GAAAA;AAKI,QAAA,CAACP,GAAgB,QAAA,EACnBF,OAAO,EACLC,MAAAA,IACAC,SAAS,+BAAA,EAAA;AAIT,QAAA;AAAA,YACIvC,KAAKwB,iBAAAA;IAAAA,SACJkB,IAAAA;AACA,aAAA,EACLL,OAAO,EACLC,MAAMI,IAAGJ,QAAAA,IACTC,SAASG,IAAGH,WAAW,mBAAA,EAAA;IAG7B;AAEA,UAAMd,KAAkD,EACtDb,QAAQF,OAAOE,QACfc,MAAMhB,OAAOiB,SAASD,MACtBa,SAAAA,IACAY,WAAWL,GAAMF,SACjBK,SAASH,GAAMI,kBAAAA,GAGXnB,KAAAA,MAAiB/B,KAAKgC,yBAG1BC,EAAUyB,oBAAoBjC,IAAqBU,OAAOC,WAAAA,CAAAA,GAAAA,EAEtDb,QAAEA,GAAAA,IAAWQ,GAASpB;AAExB,WAAA,CAACY,MAAUA,GAAOc,QACb,EACLA,OAAO,EACLC,MAAMf,IAAQe,QAAAA,IACdC,SAAShB,IAAQiB,gBAAgB,mBAAA,EAAA,IAKhC,EACLmB,eAAepC,GAAOpB,QAAQwD,eAC9BF,eAAelC,GAAOpB,QAAQsD,cAAAA;EAElC;EAKA,MAAA,aAAMG;AACA,QAAA;AAAA,YACI5D,KAAKwB,iBAAAA;IAAAA,SACJkB,IAAAA;AACA,aAAA,EACLL,OAAO,EACLC,MAAMI,IAAGJ,QAAAA,IACTC,SAASG,IAAGH,WAAW,mBAAA,EAAA;IAG7B;AAEA,UAAMd,KAAiD,EACrDb,QAAQF,OAAOE,QACfc,MAAMhB,OAAOiB,SAASD,KAAAA,GAGlBK,IAAAA,MAAiB/B,KAAKgC,yBAG1BC,EAAU4B,mBAAmBpC,IAAqBU,OAAOC,WAAAA,CAAAA,GAAAA,EAErDb,QAAEA,GAAAA,IAAWQ,EAASpB;AAExB,WAAA,CAACY,MAAUA,GAAOc,QACb,EACLA,OAAO,EACLC,MAAMf,IAAQe,QAAAA,IACdC,SAAShB,IAAQiB,gBAAgB,mBAAA,EAAA,IAKhC,EACLS,SAAS1B,GAAOpB,QAAQ8C,SACxBC,mBAAmB3B,GAAOpB,QAAQ+C,kBAAAA;EAEtC;AAAA;;;AC5OK,IAAMY,IAAN,MAAMA;EA2BX,YAAYC,GAAAA;AA1BZC,SAAAC,wBAAuC,IAAIC,WAC3CF,KAAAG,oBAAmC,IAAID,WAavCF,KAAAI,mBAAuE,IAAIF,WAC3EF,KAAAK,4BAA2C,IAAIH,WAE/CF,KAAAM,mBAAkF,IAAIJ,WACtFF,KAAAO,iBAA0D,IAAIL,WAE9DF,KAAAQ,gBAA4E,IAAIN,WAChFF,KAAAS,cAAoD,IAAIP,WAExDF,KAAAU,uBAA0F,IAAIR,WAC9FF,KAAAW,qBAAkE,IAAIT,WAuErBF,KAAAY,mCAAAC,MAAM,KAAM,GAAA,EAC1DC,KAAKC,UAAUf,KAAKG,iBAAAA,CAAAA,EACpBa,WAAU,MAAA;AACLhB,WAAKiB,QAAQC,UACflB,KAAKC,sBAAsBkB,KAAAA;IAC7B,EAAA,GAG2CnB,KAAAoB,iCAAApB,KAAKI,iBACjDU,KAAKC,UAAUf,KAAKG,iBAAAA,CAAAA,EACpBa,WAAWK,CAAAA,OAAAA;AACJ,YAAAC,KAAmBtB,KAAKuB,oBAAoB,EAChDC,aAAaH,GAAGI,KAAKD,aACrBE,SAASL,GAAGI,KAAKE,SACjBC,iBAAiBP,GAAGI,KAAKI,UAAAA,CAAAA;AAGdC,WAAKC,MAAMT,EAAAA,EAEfU,oBAAoBhC,KAAKiC,QAAAA,MAC3BjC,KAAAkC,kBAAkBb,GAAGI,KAAKI,WAC/B7B,KAAKK,0BAA0Bc,KAAAA;IACjC,EAAA,GAG0CnB,KAAAmC,gCAAAnC,KAAKM,iBAChDQ,KAAKC,UAAUf,KAAKG,iBAAAA,CAAAA,EACpBa,WAAWK,CAAAA,OAAAA;AACN,UAAA,CAACrB,KAAKkC,gBAER,QAAA,KADAlC,KAAKO,eAAeY,KAAK,EAAEiB,SAAAA,OAAgBT,SAAS,kEAAA,CAAA;AAIlD,UAAA,CAACN,GAAGI,KAAKW,QAEX,QAAA,KADApC,KAAKO,eAAeY,KAAK,EAAEiB,SAAAA,OAAgBT,SAAS,mCAAA,CAAA;AAIhD,YAAAL,KAAmBtB,KAAKuB,oBAAoB,EAChDC,aAAaH,GAAGI,KAAKD,aACrBE,SAASL,GAAGI,KAAKE,SACjBC,iBAAiB5B,KAAKkC,gBAAAA,CAAAA,GAGlBT,KAA8BK,KAAKC,MAAMT,EAAAA;AAE1CtB,WAAAO,eAAeY,KAAK,EAAEiB,SAAAA,MAAeP,WAAWJ,GAAKI,UAAAA,CAAAA;IAAW,EAAA,GAG9B7B,KAAAqC,6BAAArC,KAAKQ,cAC7CM,KAAKC,UAAUf,KAAKG,iBAAAA,CAAAA,EACpBa,WAAWK,CAAAA,OAAAA;AACN,UAAA,CAACrB,KAAKkC,gBAER,QAAA,KADAlC,KAAKS,YAAYU,KAAK,EAAEiB,SAAAA,OAAgBT,SAAS,kEAAA,CAAA;AAI/C,UAAA,CAACN,GAAGI,KAAKW,QAEX,QAAA,KADApC,KAAKS,YAAYU,KAAK,EAAEiB,SAAAA,OAAgBT,SAAS,mCAAA,CAAA;AAI7C,YAAAL,KAAmBtB,KAAKuB,oBAAoB,EAChDC,aAAaH,GAAGI,KAAKD,aACrBE,SAASL,GAAGI,KAAKE,SACjBC,iBAAiB5B,KAAKkC,gBAAAA,CAAAA,GAGlBT,KAAwBK,KAAKC,MAAMT,EAAAA;AAEpCtB,WAAAS,YAAYU,KAAK,EAAEiB,SAAAA,MAAeE,KAAKb,GAAKa,IAAAA,CAAAA;IAAK,EAAA,GAIRtC,KAAAuC,oCAAAvC,KAAKU,qBACpDI,KAAKC,UAAUf,KAAKG,iBAAAA,CAAAA,EACpBa,WAAWK,CAAAA,OAAAA;AACN,UAAA,CAACrB,KAAKkC,gBAER,QAAA,KADAlC,KAAKW,mBAAmBQ,KAAK,EAAEiB,SAAAA,OAAgBT,SAAS,kEAAA,CAAA;AAItD,UAAA,CAACN,GAAGI,KAAKW,QAEX,QAAA,KADApC,KAAKW,mBAAmBQ,KAAK,EAAEiB,SAAAA,OAAgBT,SAAS,mCAAA,CAAA;AAIpD,YAAAL,KAAmBtB,KAAKuB,oBAAoB,EAChDC,aAAaH,GAAGI,KAAKD,aACrBE,SAASL,GAAGI,KAAKE,SACjBC,iBAAiB5B,KAAKkC,gBAAAA,CAAAA,GAGlBT,KAA4CK,KAAKC,MAAMT,EAAAA;AAE7DtB,WAAKW,mBAAmBQ,KAAK,EAAEiB,SAAAA,MAAS,GAASX,GAAAA,CAAAA;IAAM,EAAA,GAnKpDzB,KAAAwC,kBAAkBzC,GAAQyC,mBAAmB,aAC7CxC,KAAAyC,YAAY1C,GAAQ2C,OAAO;AAC1B,UAAAC,KAAiBC,iBAAAA,IAAIC,QAAAA,GACrBZ,QAAUa,sBAAAA,kBAAaC,iBAAAA,aAAY,EAAA,CAAA;AAEpC/C,SAAAgD,qBAAsBjD,CAAAA,OAAAA;AACnB,YAAAyB,SAAcuB,iBAAAA,aAAY,EAAA,GAC1BE,SAAaL,iBAAAA,SACjBM,sBAAAA,YAAWnD,GAAO0B,IAAAA,GAClBD,IACAzB,GAAOoD,mBACPR,GAAeS,SAAAA;AAGV,aAAA,EACLzB,aAASmB,sBAAAA,cAAaG,EAAAA,GACtBzB,iBAAasB,sBAAAA,cAAatB,EAAAA,EAAAA;IAC5B,GAGGxB,KAAAuB,sBAAuBxB,CAAAA,OAAAA;AAC1B,YAAMuB,KAAmBsB,iBAAAA,IAAIS,SAC3BC,sBAAAA,cAAavD,GAAO2B,OAAAA,OACpB4B,sBAAAA,cAAavD,GAAOyB,WAAAA,OACpB8B,sBAAAA,cAAavD,GAAO6B,eAAAA,GACpBe,GAAeS,SAAAA;AAGjB,UAAA,CAAK9B,GACG,OAAA,IAAIiC,MAAM,2BAAA;AAGlB,iBAAOC,sBAAAA,YAAWlC,EAAAA;IAAgB,GAG/BtB,KAAA6B,YAAY,MAAMc,GAAed,WAEjC7B,KAAAiC,UAAU,MAAMA,EAAQwB,MAAAA;AAEvB,UAAAC,IAAYrC,CAAAA,OAAAA;AACR,cAAAA,GAAGI,KAAKkC,MAAAA;QACd,KAAKC,EAAUC;AACR7D,eAAAI,iBAAiBe,KAAKE,EAAAA;AAC3B;QAEF,KAAKuC,EAAUE;AACR9D,eAAAM,iBAAiBa,KAAKE,EAAAA;AAC3B;QAEF,KAAKuC,EAAUG;AACR/D,eAAAQ,cAAcW,KAAKE,EAAAA;AACxB;QAEF,KAAKuC,EAAUI;AACRhE,eAAAU,qBAAqBS,KAAKE,EAAAA;MAAAA;IAEnC;AAGK4C,WAAAC,iBAAiB,WAAWR,CAAAA,GAE9B1D,KAAAG,kBAAkBgE,aAAAA,EACpBrD,KAAKsD,KAAK,CAAA,CAAA,EACVpD,WAAU,MAAA;AACFiD,aAAAI,oBAAoB,WAAWX,CAAAA;IAAQ,EAAA;EAEpD;EAoGA,aAAAY;AAaS,WAZDtE,KAAKiB,UAAAA,CAAWjB,KAAKiB,OAAOC,WAChClB,KAAKiB,OAAOsD,MAAAA,GACZvE,KAAKiB,SAAS,MACdjB,KAAKC,sBAAsBkB,KAAAA,IAG7BnB,KAAKiB,SAASgD,OAAOZ,KACnB,GAAGrD,KAAKyC,SAAAA,WAAoB+B,uBAAmB1B,sBAAAA,cAAa9C,KAAK6B,UAAAA,CAAAA,CAAAA,CAAAA,YAAyB2C,mBAAmBxE,KAAKiC,QAAAA,CAAAA,CAAAA,IAClH,oBACA,uCAAA,GAGKwC,eACLzE,KAAKK,0BACFS,KAAKC,UAAUf,KAAKC,qBAAAA,CAAAA,EACpBa,KAAKC,UAAUf,KAAKG,iBAAAA,CAAAA,CAAAA;EAE3B;EAEA,cAAAuE;AACQ1E,SAAKiB,WACTjB,KAAKiB,QAAQsD,MAAAA,GACbvE,KAAKiB,SAAS;EAElB;EAEA,MAAA,QAAclB,KAAyB,EAAE4E,qBAAAA,MAA2BC,gBAAAA,KAAgB,GAAA;AAC5E,UAAAC,KAA4BZ,QAAgBa,QAAQC,iBAAiBC,cAAc,IAAIC,MAAchB,OAAegB;AAC1H,QAAMJ,MAAyC,gBAAzB7E,KAAKwC,iBAAiC;AACpD,YAAA0C,KAAAA,MAAmDL,GAAaM,WAAAA;AAElE,UAAAC,EAAgBF,EAAAA,EAClB,OAAMA,GAASG;AAEf,aAAOH,GAASI;IAClB;AACK;AAIL,UAAA,MAFMtF,KAAKsE,WAAAA,GAAAA,CAENtE,KAAKiB,UAAAA,CAAWjB,KAAKkC,gBAClB,OAAA,IAAIqB,MAAM,oDAAA;AAGlB,YAAA,EAAM5B,SAAEA,IAAAH,aAASA,GAAAA,IAAgBxB,KAAKgD,mBAAmB,EACvDvB,MAAMK,KAAKyD,UAAUxF,EAAAA,GACrBoD,uBAAmBG,sBAAAA,cAAatD,KAAKkC,eAAAA,EAAAA,CAAAA,GAGjCR,KAA+B,EACnCiC,MAAMC,EAAU4B,eAChB7D,SAAAA,IACAH,aAAAA,GAAAA;AAGGxB,WAAAiB,OAAOwE,YAAY/D,IAAS,GAAA;AAE3B,YAAAgE,KAAS1F,KAAKO,eACjB4D,aAAAA,EACArD,KAAK6E,WAAWD,CAAAA,OACVA,GAAOtD,WAIVpC,KAAK0E,YAAAA,GACEkB,GAAGF,GAAO7D,SAAAA,MAJjB7B,KAAK0E,YAAAA,GACEmB,YAAW,MAAM,IAAItC,MAAMmC,GAAO/D,OAAAA,EAAAA,GAAAA,CAAAA,EAM5Cb,KAAKsD,KAAK,CAAA,CAAA,EACVtD,KAAKC,UAAUf,KAAKC,qBAAAA,CAAAA,EACpBa,KAAKC,UAAUf,KAAKG,iBAAAA,CAAAA;AAEvB,aAAOsE,eAAeiB,EAAAA;IAExB;EACF;EAEA,MAAA,KAAW3F,IAAAA;AACH,UAAA8E,KAA4BZ,QAAgBa,QAAQC,iBAAiBC,cAAc,IAAIC,MAAchB,OAAegB;AAC1H,QAAMJ,MAAyC,gBAAzB7E,KAAKwC,iBAAiC;AACpD,YAAA0C,KAAAA,MAAiBL,GAAaiB,gBAAgB,EAClDxD,KAAKvC,GAAOuC,KACZyD,MAAM,EACJC,mBAAmBjG,GAAOkG,SAC1BX,SAASvF,GAAO8B,UAAAA,EAAAA,CAAAA;AAIhB,UAAAuD,EAAgBF,EAAAA,EAClB,OAAMA,GAASG;AAEf,aAAOH,GAASgB;IAClB;AACK;AAGL,UAAA,MAFMlG,KAAKsE,WAAAA,GAAAA,CAENtE,KAAKiB,UAAAA,CAAWjB,KAAKkC,gBAClB,OAAA,IAAIqB,MAAM,oDAAA;AAGd,UAAsB,YAAA,OAAfxD,GAAOuC,IACV,OAAA,IAAIiB,MAAM,yCAAA;AAGlB,YAAA,EAAM5B,SAAEA,IAAAH,aAASA,GAAAA,IAAgBxB,KAAKgD,mBAAmB,EACvDvB,MAAMK,KAAKyD,UAAUxF,EAAAA,GACrBoD,uBAAmBG,sBAAAA,cAAatD,KAAKkC,eAAAA,EAAAA,CAAAA,GAGjCR,KAA4B,EAChCiC,MAAMC,EAAUuC,YAChBxE,SAAAA,IACAH,aAAAA,GAAAA;AAGGxB,WAAAiB,OAAOwE,YAAY/D,IAAS,GAAA;AAE3B,YAAAgE,KAAS1F,KAAKS,YACjB0D,aAAAA,EACArD,KAAK6E,WAAWD,CAAAA,OACVA,GAAOtD,WAIVpC,KAAK0E,YAAAA,GACEkB,GAAGF,GAAOpD,GAAAA,MAJjBtC,KAAK0E,YAAAA,GACEmB,YAAW,MAAM,IAAItC,MAAMmC,GAAO/D,OAAAA,EAAAA,GAAAA,CAAAA,EAM5Cb,KAAKsD,KAAK,CAAA,CAAA,EACVtD,KAAKC,UAAUf,KAAKC,qBAAAA,CAAAA,EACpBa,KAAKC,UAAUf,KAAKG,iBAAAA,CAAAA;AAEvB,aAAOsE,eAAeiB,EAAAA;IACxB;EACF;EAEA,MAAA,YACE/D,IACAoE,IAAAA;AAKM,UAAAlB,KAA4BZ,QAAgBa,QAAQC,iBAAiBC,cAAc,IAAIC,MAAchB,OAAegB;AAC1H,QAAMJ,MAAyC,gBAAzB7E,KAAKwC,iBAAiC;AAC1D,YAAM0C,KAAAA,MAAiBL,GAAauB,YAAYzE,IAASoE,EAAAA;AAErD,UAAAX,EAAgBF,EAAAA,EAClB,OAAMA,GAASG;AAER,aAAAH;IACT;AACK;AAGL,UAAA,MAFMlF,KAAKsE,WAAAA,GAAAA,CAENtE,KAAKiB,UAAAA,CAAWjB,KAAKkC,gBAClB,OAAA,IAAIqB,MAAM,oDAAA;AAGd,UAAmB,YAAA,OAAZ5B,GACH,OAAA,IAAI4B,MAAM,yCAAA;AAGZ,YAAA8C,KAAYrG,KAAKgD,mBAAmB,EACxCvB,MAAMK,KAAKyD,UAAU,EAAE5D,SAAAA,IAASoE,MAAAA,GAAAA,CAAAA,GAChC5C,uBAAmBG,sBAAAA,cAAatD,KAAKkC,eAAAA,EAAAA,CAAAA,GAGjCR,KAAmC,EACvCiC,MAAMC,EAAU0C,oBAChB3E,SAAS0E,GAAU1E,SACnBH,aAAa6E,GAAU7E,YAAAA;AAGpBxB,WAAAiB,OAAOwE,YAAY/D,IAAS,GAAA;AAE3B,YAAAgE,KAAS1F,KAAKW,mBACjBwD,aAAAA,EACArD,KAAK6E,WAAWD,CAAAA,OACVA,GAAOtD,WAIVpC,KAAK0E,YAAAA,GACEkB,GAAG,EACRW,eAAeb,GAAOa,eACtBC,eAAed,GAAOc,cAAAA,CAAAA,MANxBxG,KAAK0E,YAAAA,GACEmB,YAAW,MAAM,IAAItC,MAAMmC,GAAO/D,OAAAA,EAAAA,GAAAA,CAAAA,EAS5Cb,KAAKsD,KAAK,CAAA,CAAA,EACVtD,KAAKC,UAAUf,KAAKC,qBAAAA,CAAAA,EACpBa,KAAKC,UAAUf,KAAKG,iBAAAA,CAAAA;AAEvB,aAAOsE,eAAeiB,EAAAA;IACxB;EACF;EAEA,mBAAAe;AACEzG,SAAKG,kBAAkBgB,KAAAA,GACvBnB,KAAKC,sBAAsBkB,KAAAA,GAC3BnB,KAAKG,kBAAkBuG,SAAAA,GACvB1G,KAAKC,sBAAsByG,SAAAA;EAC7B;AAAA;;;ACzaK,IAAM,WAAW;AAEjB,IAAM,cAAN,MAA6C;EAA7C,cAAA;AACL,SAAA,aAAyB,WAAW;AAEhB,SAAA,YAAA;AACE,SAAA,cAAA;AACD,SAAA,aAAA;AACC,SAAA,cAAA;EAAA;EAEtB,MAAM,cAAgC;AAC7B,WAAA;EAAA;EAGT,MAAM,aAA2C;AAC3C,QAAA;AACI,YAAA,SAA6B,IAAI,EAAmB;AACpD,YAAA,YAAoB,MAAM,OAAO,QAAQ;AAC/C,aAAO,iBAAiB;AACjB,aAAA,EAAE,SAAS,UAAU;IAAA,SACrBC,IAAQ;AACf,YAAM,WAAWA,EAAC;IAAA;EACpB;EAGF,MAAM,gBACJ,KACA,MAO0D;AACtD,QAAA;AACI,YAAA,SAA6B,IAAI,EAAmB;AAEpD,YAAA,YAAoB,MAAM,OAAO,KAAK;QAC1C;QACA,WAAW,MAAM;QACjB,SAAS,MAAM;MAAA,CAChB;AAED,aAAO,iBAAiB;AACxB,aAAO,EAAE,aAAa,WAAW,eAAe,MAAM,QAAQ;IAAA,SACvDA,IAAQ;AACf,YAAM,WAAWA,EAAC;IAAA;EACpB;EAGF,MAAM,gBAA8E;AAC5E,UAAA;MACJ,MAAM;MACN,SAAS;IAAA;EACX;EAGF,MAAM,YACJ,SACA,MAK4D;AACxD,QAAA;AACI,YAAA,SAA6B,IAAI,EAAmB;AAE1D,YAAM,SAAS,MAAM,OAAO,YAAY,SAAS;QAC/C,SAAS,MAAM;QACf,mBAAmB,MAAM;MAAA,CAC1B;AAED,aAAO,iBAAiB;AACjB,aAAA;IAAA,SACAA,IAAQ;AACf,YAAM,WAAWA,EAAC;IAAA;EACpB;EAGF,MAAM,aAAsE;AACpE,UAAA;MACJ,MAAM;MACN,SAAS;IAAA;EACX;AAEJ;A;;;;;;ACxFO,IAAM,eAAe;AAErB,IAAM,kBAAN,MAAiD;EAOtD,cAAc;AACZ,SAAK,aAAa,WAAW;AAC7B,SAAK,YAAY;AACjB,SAAK,cAAc;AACnB,SAAK,aAAa;AAClB,SAAK,cAAc;EAAA;EAGrB,MAAM,cAAc;AACX,WAAA;EAAA;EAGT,MAAM,aAAa;AACjB,WAAO,MAAM,eAAI,QAAQ,sBAAsB,CAAA,CAAE;EAAA;EAGnD,MAAM,gBAAgB,KAAa,MAA6B;AACvD,WAAA,MAAM,eAAI,QAAQ,2BAA2B,EAAE,KAAK,eAAe,MAAM,QAAA,CAAS;EAAA;EAG3F,MAAM,cAAc,WAAmB,MAA6B;AAC3D,WAAA,MAAM,eAAI,QAAQ,yBAAyB,EAAE,WAAW,eAAe,MAAM,QAAA,CAAS;EAAA;EAG/F,MAAM,YAAY,SAAiB,MAA6B;AACvD,WAAA,MAAM,eAAI,QAAQ,uBAAuB,EAAE,SAAS,eAAe,MAAM,QAAA,CAAS;EAAA;EAG3F,MAAM,aAAa;AACjB,WAAO,EAAE,SAAS,WAAW,mBAAmB,cAAc,OAAO;EAAA;AAEzE;A;;;;;ACPO,IAAM,UAAU;AAEhB,IAAM,aAAN,MAA4C;EAA5C,cAAA;AACL,SAAA,aAAyB,WAAW;AAEhB,SAAA,YAAA;AACE,SAAA,cAAA;AACD,SAAA,aAAA;AACC,SAAA,cAAA;EAAA;EAEtB,MAAM,YAA2B;AAC/B,QAAI,CAAE,MAAM,KAAK,YAAA,GAAgB;AACzB,YAAA,IAAI,MAAM,8BAA8B;IAAA;EAChD;EAGF,cAAgC;AAC9B,WAAO,IAAI,QAAQ,CAAW,YAAA,QAAQ,OAAO,WAAW,eAAe,CAAC,CAAC,OAAO,YAAY,OAAO,CAAC;EAAA;EAGtG,MAAM,aAA2C;AAC/C,WAAO,KAAK,UAAU,EACnB,KAAK,MAAM,OAAO,WAAY,QAAS,aAAA,CAAc,EACrD,KAAK,CAAY,aAAA,EAAE,QAAA,EAAU,EAC7B,MAAM,CAAKC,OAAA;AACV,YAAM,WAAWA,EAAC;IAAA,CACnB;EAAA;EAGL,MAAM,gBACJ,KACA,MAO0D;AACnD,WAAA,KAAK,UAAA,EACT;MAAK,MACJ,OAAO,WAAY,QAAS,gBAAgB;QAC1C;QACA,eAAe,MAAM;QACrB,mBAAmB,MAAM;MAAA,CAC1B;IAAA,EAEF,KAAK,CAAA,iBAAgB,EAAE,aAAa,eAAe,MAAM,QAAQ,EAAE,EACnE,MAAM,CAAKA,OAAA;AACV,YAAM,WAAWA,EAAC;IAAA,CACnB;EAAA;EAGL,MAAM,cACJ,WACA,MAK8D;AACvD,WAAA,KAAK,UAAA,EACT;MAAK,MACJ,OAAO,WAAY,QAAS,cAAc;QACxC,KAAK;QACL,eAAe,MAAM;MAAA,CACtB;IAAA,EAEF,KAAK,CAAA,qBAAoB,EAAE,iBAAiB,eAAe,MAAM,QAAQ,EAAE,EAC3E,MAAM,CAAKA,OAAA;AACV,YAAM,WAAWA,EAAC;IAAA,CACnB;EAAA;EAGL,MAAM,YACJ,SACA,MAG4D;AACrD,WAAA,KAAK,UAAA,EACT;MAAK,MACJ,OAAO,WAAY,QAAS,YAAY;QACtC;QACA,eAAe,MAAM;MAAA,CACtB;IAAA,EAEF,KAAK,CAAA,mBAAkB,EAAE,eAAe,eAAe,MAAM,QAAQ,EAAE,EACvE,MAAM,CAAKA,OAAA;AACV,YAAM,WAAWA,EAAC;IAAA,CACnB;EAAA;EAGL,MAAM,aAAsE;AACpE,UAAA;MACJ,MAAM;MACN,SAAS;IAAA;EACX;AAEJ;A;;;;;AC9HO,IAAM,YAAY;AAElB,IAAM,eAAN,MAA8C;EAA9C,cAAA;AACL,SAAA,aAAyB,WAAW;AAEhB,SAAA,YAAA;AACE,SAAA,cAAA;AACD,SAAA,aAAA;AACC,SAAA,cAAA;EAAA;EAEtB,MAAM,YAA2B;AAC/B,QAAI,CAAE,MAAM,KAAK,YAAA,GAAgB;AACzB,YAAA,IAAI,MAAM,gCAAgC;IAAA;EAClD;EAGF,cAAgC;AAC9B,WAAO,IAAI,QAAQ,CAAW,YAAA,QAAQ,OAAO,WAAW,eAAe,CAAC,CAAC,OAAO,cAAc,OAAO,CAAC;EAAA;EAGxG,MAAM,aAA2C;AAC/C,WAAO,KAAK,UAAA,EACT,KAAK,MAAM,OAAO,aAAc,QAAS,WAAW,CAAC,EACrD,MAAM,CAAKC,OAAA;AAAE,YAAM,WAAWA,EAAC;IAAA,CAAI;EAAA;EAGxC,MAAM,gBACJ,KACA,MAO0D;AAC1D,WAAO,KAAK,UAAA,EACT,KAAK,MAAM,OAAO,aAAc,QAAS,gBAAgB,KAAK,IAAI,CAAC,EACnE,MAAM,CAAKA,OAAA;AAAE,YAAM,WAAWA,EAAC;IAAA,CAAI;EAAA;EAGxC,MAAM,cACJ,WACA,MAK8D;AAC9D,WAAO,KAAK,UAAA,EACT,KAAK,MAAM,OAAO,aAAc,QAAS,cAAc,WAAW,IAAI,CAAC,EACvE,MAAM,CAAKA,OAAA;AAAE,YAAM,WAAWA,EAAC;IAAA,CAAI;EAAA;EAGxC,MAAM,YACJ,SACA,MAG4D;AAC5D,WAAO,KAAK,UAAA,EACT,KAAK,MAAM,OAAO,aAAc,QAAS,YAAY,SAAS,IAAI,CAAC,EACnE,MAAM,CAAKA,OAAA;AAAE,YAAM,WAAWA,EAAC;IAAA,CAAI;EAAA;EAGxC,MAAM,aAAsE;AAC1E,WAAO,KAAK,UAAA,EACT,KAAK,MAAM,OAAO,aAAc,QAAS,WAAW,CAAC,EACrD,MAAM,CAAKA,OAAA;AAAE,YAAM,WAAWA,EAAC;IAAA,CAAI;EAAA;AAE1C;;;ACjEO,SAAS,gBAAgB,MAA8E;AAC5G,QAAM,UAA6B;IACjC,IAAI,aAAa;IACjB,IAAI,gBAAgB;IACpB,IAAI,YAAY;IAChB,IAAI,YAAY;IAChB,IAAI,aAAa;IACjB,IAAI,WAAW;IACf,IAAI,gBAAgB;IACpB,IAAI,aAAa;EAAA;AAEnB,SAAO,MAAM,WAAW,QAAQ,OAAO,KAAK,QAAQ,IAAI;AAC1D;AAMO,SAAS,aAAa,MAA8E;AACzG,QAAM,UAA6B,CAAC,IAAI,gBAAA,GAAmB,IAAI,gBAAA,CAAiB;AAChF,SAAO,MAAM,WAAW,QAAQ,OAAO,KAAK,QAAQ,IAAI;AAC1D;AAEO,SAAS,WAAWC,IAAQ;AAC1B,SAAA;IACL,MAAMA,IAAG,OAAO,QAAQA,IAAG,QAAQ;IACnC,SAASA,IAAG,OAAO,WAAWA,IAAG,WAAY,OAAOA,OAAM,YAAYA,MAAM;IAC5E,KAAKA,IAAG,OAAO,OAAOA,IAAG;EAAA;AAE7B;",
  "names": ["root", "factory", "exports", "module", "define", "amd", "this", "SERVICE_TYPES", "EXTERNAL_SERVICE_TYPES", "__webpack_require__", "definition", "key", "o", "Object", "defineProperty", "enumerable", "get", "obj", "prop", "prototype", "hasOwnProperty", "call", "Symbol", "toStringTag", "value", "t", "s", "_", "w", "d", "r", "sendMessageToContentScript", "msg", "MESSAGE_ID", "Date", "now", "Math", "random", "window", "postMessage", "source", "messageId", "location", "origin", "Promise", "resolve", "requestTimeout", "type", "REQUEST_CONNECTION_STATUS", "REQUEST_PUBLIC_KEY", "setTimeout", "isConnected", "publicKey", "removeEventListener", "messageListener", "event", "e", "data", "E", "messagedId", "clearTimeout", "addEventListener", "FreighterApiNodeError", "code", "message", "FreighterApiInternalError", "requestAccess", "async", "response", "REQUEST_ACCESS", "console", "error", "apiError", "requestPublicKey", "requestNetworkDetails", "REQUEST_NETWORK_DETAILS", "networkDetails", "network", "networkName", "networkUrl", "networkPassphrase", "sorobanRpcUrl", "requestAllowedStatus", "REQUEST_ALLOWED_STATUS", "isAllowed", "getAddress", "address", "isBrowser", "req", "addToken", "args", "contractId", "SUBMIT_TOKEN", "signTransaction", "transactionXdr", "opts", "_accountToSign", "accountToSign", "SUBMIT_TRANSACTION", "signedTransaction", "signerAddress", "signedTxXdr", "signMessage", "signedMessage", "blob", "version", "apiVersion", "SUBMIT_BLOB", "signedBlob", "signAuthEntry", "entryXdr", "signedAuthEntry", "SUBMIT_AUTH_ENTRY", "freighter", "requestConnectionStatus", "getNetwork", "requestNetwork", "getNetworkDetails", "setAllowed", "SET_ALLOWED_STATUS", "setAllowedStatus", "WatchWalletChanges", "timeout", "fetchInfo", "cb", "isRunning", "publicKeyReq", "networkDetailsReq", "currentAddress", "currentNetwork", "currentNetworkPassphrase", "stop", "root", "factory", "exports", "module", "define", "amd", "this", "SERVICE_TYPES", "EXTERNAL_SERVICE_TYPES", "TX_STATUS", "__webpack_require__", "definition", "key", "o", "Object", "defineProperty", "enumerable", "get", "obj", "prop", "prototype", "hasOwnProperty", "call", "Symbol", "toStringTag", "value", "i", "t", "d", "e", "CONNECTION_KEY", "sendMessageToContentScript", "msg", "MESSAGE_ID", "Date", "now", "Math", "random", "window", "postMessage", "source", "messageId", "location", "origin", "Promise", "resolve", "requestTimeout", "type", "REQUEST_CONNECTION_STATUS", "setTimeout", "isConnected", "removeEventListener", "messageListener", "event", "n", "data", "s", "messagedId", "clearTimeout", "addEventListener", "getPublicKey", "async", "isBrowser", "publicKey", "connectionKey", "response", "error", "REQUEST_ACCESS", "console", "requestPublicKey", "sessionStorage", "setItem", "transactionXdr", "getItem", "signedTransaction", "SIGN_TRANSACTION", "lobstrSignerExtension", "requestConnectionStatus", "signTransaction", "import_dist", "_", "import_dist", "i", "r", "n", "d", "s", "r2", "t", "e", "L", "reduce", "crypto", "import_dist", "s", "i", "d", "import_dist", "import_dist", "EncodeBuffer", "from", "DecodeBuffer", "import_dist", "__extends", "extendStatics", "d", "b", "isArrayLike", "ErrorSchema", "import_dist", "desc", "BorshSerializer", "buffer", "i", "import_dist", "BorshDeserializer", "buffer", "r", "i", "import_dist", "desc", "buffer", "import_dist", "i", "crypto", "Buffer", "blocks", "d", "e", "buffer", "exports", "import_dist", "KeyType", "import_dist", "require_constants", "import_dist", "import_dist", "import_dist", "import_dist", "require_errors", "import_dist", "context", "import_dist", "IdType", "import_dist", "ExecutionStatusBasic", "FinalExecutionStatusBasic", "import_dist", "import_dist", "desc", "exports", "import_dist", "global", "isArray", "isFunction", "s", "i", "scan", "context", "render", "buffer", "self", "n", "wrap", "i", "from", "last", "d", "padding", "max", "e", "s", "alphabet", "import_dist", "i", "import_dist", "n", "render", "require_errors", "import_dist", "import_dist", "import_dist", "require_logger", "import_dist", "import_dist", "require_provider", "import_dist", "e", "import_dist", "require_utils", "import_dist", "import_dist", "i", "require_commonjs", "import_dist", "desc", "exports", "n", "min", "n", "i", "_", "buffer", "take", "i", "state", "n", "i", "s", "n", "i", "_", "i", "n", "e", "min", "max", "map", "r", "n", "n2", "i", "map", "d", "i", "s", "n", "d", "window", "wbits", "e", "n", "d", "i", "G", "A", "B", "F", "C", "D", "E", "H", "X3", "Y3", "T3", "Z3", "cofactor", "max", "getPublicKey", "context", "r", "s", "i", "count", "expand", "L", "e", "map", "n", "t", "valid", "_1n", "e", "d", "r", "s", "s2", "r2", "t", "import_dist", "buffer", "Buffer", "require_browser", "import_dist", "Buffer", "crypto", "require_lib", "import_dist", "import_dist", "module", "exports", "Buffer", "e", "max", "min", "i", "w", "r", "toArray", "t", "self", "comb10MulTo", "s", "n", "_", "r2", "prime", "import_dist", "r", "require_utils", "import_dist", "toArray", "i", "require_utils", "import_dist", "w", "i", "cachedProperty", "import_dist", "r", "generate", "n", "i", "crypto", "e", "import_dist", "i", "w", "max", "r", "import_dist", "import_dist", "s", "i", "r", "obj", "t", "d", "e", "import_dist", "d", "t", "i", "require_edwards", "import_dist", "t", "d", "e", "require_curve", "import_dist", "require_utils", "import_dist", "i", "toArray", "w", "d", "e", "r", "import_dist", "r", "i", "t", "require_common", "import_dist", "s", "import_dist", "i", "d", "e", "s", "t", "require__", "import_dist", "i", "d", "e", "require__", "import_dist", "require__", "import_dist", "i", "r", "require__", "import_dist", "import_dist", "import_dist", "r", "s", "import_dist", "i", "import_dist", "import_dist", "import_dist", "curve", "e", "import_dist", "i", "generate", "import_dist", "import_dist", "i", "r", "s", "import_dist", "i", "r", "s", "n", "e", "s2", "require_key", "import_dist", "require_signature", "import_dist", "import_dist", "r", "hash", "i", "import_dist", "require_elliptic", "import_dist", "first", "i", "pairs", "r", "s", "d", "data", "require_elliptic", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "require_commonjs", "import_dist", "import_dist", "import_dist", "n", "i", "import_dist", "i", "import_dist", "w", "i", "d", "e", "n", "t", "timeout", "e", "HOT", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "d", "b", "e", "_", "t", "n", "s", "i", "n", "r", "e", "from", "i", "n", "e", "r", "i", "n", "d", "v", "import_dist", "import_dist", "import_dist", "i", "import_dist", "Subscription", "e", "empty", "import_dist", "import_dist", "timeout", "import_dist", "import_dist", "import_dist", "Subscriber", "ConsumerObserver", "SafeSubscriber", "import_dist", "import_dist", "import_dist", "Observable", "observable", "import_dist", "import_dist", "OperatorSubscriber", "err", "ConnectableObservable", "import_dist", "import_dist", "timestamp", "timestamp", "import_dist", "Subject", "observable", "AnonymousSubject", "BehaviorSubject", "import_dist", "ReplaySubject", "i", "last", "AsyncSubject", "import_dist", "Action", "state", "delay", "timeout", "AsyncAction", "state", "delay", "e", "import_dist", "AsapAction", "delay", "import_dist", "Scheduler", "delay", "state", "AsyncScheduler", "AsapScheduler", "import_dist", "import_dist", "QueueAction", "state", "delay", "QueueScheduler", "import_dist", "AnimationFrameAction", "delay", "AnimationFrameScheduler", "VirtualTimeScheduler", "VirtualAction", "state", "delay", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "i", "process", "import_dist", "import_dist", "delay", "repeat", "delay", "import_dist", "delay", "import_dist", "import_dist", "i", "import_dist", "iterator", "import_dist", "iterator", "import_dist", "import_dist", "NotificationKind", "Notification", "import_dist", "import_dist", "import_dist", "import_dist", "config", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "isArray", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "n", "import_dist", "import_dist", "import_dist", "import_dist", "isArray", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "count", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "first", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "config", "store", "e", "state", "buffer", "config", "isFunction", "state", "isFunction", "import_dist", "WalletNetwork", "ModuleType", "state", "timer", "r", "import_dist", "import_dist", "import_dist", "global", "s", "NODE_MODE", "global", "e", "s", "i", "import_dist", "DEV_MODE", "NODE_MODE", "global", "debugLogEvent", "issueWarning", "trustedTypes", "s", "isArray", "isIterable", "html", "i", "tag", "strings", "from", "n", "isConnected", "polyfillSupport", "DEV_MODE", "global", "issueWarning", "debugLogEvent", "import_dist", "JSCompiler_renameProperty", "DEV_MODE", "global", "issueWarning", "polyfillSupport", "global", "DEV_MODE", "issueWarning", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "context", "import_dist", "DEV_MODE", "issueWarning", "defaultPropertyDeclaration", "context", "import_dist", "import_dist", "import_dist", "import_dist", "DEV_MODE", "issueWarning", "import_dist", "import_dist", "import_dist", "import_dist", "r", "e", "w", "i", "import_dist", "r", "__decorateClass", "modalDialogStyles", "modalDialogBodyStyles", "modalHelpSection", "modalWalletsSection", "backdropStyles", "modalAnimations", "r", "modalDialogStyles", "modalDialogBodyStyles", "modalHelpSection", "backdropStyles", "modalAnimations", "modalWalletsSection", "__decorateClass", "import_dist", "import_dist", "i", "n", "import_dist", "import_dist", "import_dist", "import_dist", "import_dist", "w", "import_dist", "import_dist", "e", "import_dist", "e", "e", "AlbedoNetwork", "isConnected", "e", "e", "e", "RabetNetwork", "import_dist", "EventType", "isResponseError", "response", "error", "xBullSDK", "constructor", "this", "isConnected", "eventName", "payload", "nonce", "Promise", "resolve", "eventListener", "event", "source", "window", "data", "origin", "eventId", "removeEventListener", "addEventListener", "webkit", "messageHandlers", "cordova_iab", "postMessage", "JSON", "stringify", "type", "detail", "enableConnection", "dispatchEventParams", "host", "location", "permissions", "canRequestPublicKey", "canRequestSign", "response", "sendEventToContentScript", "EventType", "XBULL_CONNECT", "crypto", "randomUUID", "error", "code", "message", "errorMessage", "getAddress", "e", "XBULL_GET_PUBLIC_KEY", "address", "params", "opts", "submit", "submitUrl", "network", "networkPassphrase", "publicKey", "xdr", "xdrType", "XBULL_SIGN_XDR", "signedTxXdr", "signedXdr", "signerAddress", "XBULL_SIGN_MESSAGE", "signedMessage", "getNetwork", "XBULL_GET_NETWORK", "xBullWalletConnect", "params", "this", "closeCurrentPromises$", "Subject", "closeObservables$", "initialResponse$", "initialResponseCompleted$", "connectResponse$", "connectResult$", "signResponse$", "signResult$", "signMessageResponse$", "signMessageResult$", "closeCurrentPromisesSubscription", "timer", "pipe", "takeUntil", "subscribe", "target", "closed", "next", "onInititalResponseSubscription", "ev", "decryptedMessage", "decryptFromReceiver", "oneTimeCode", "data", "payload", "message", "senderPublicKey", "publicKey", "JSON", "parse", "providedSession", "session", "targetPublicKey", "onConnectResponseSubscription", "success", "onSignResponseSubscription", "xdr", "onSignMessageResponseSubscription", "preferredTarget", "walletUrl", "url", "sessionKeypair", "box", "keyPair", "encodeBase64", "randomBytes", "encryptForReceiver", "cipherText", "decodeUTF8", "receiverPublicKey", "secretKey", "open", "decodeBase64", "Error", "encodeUTF8", "slice", "listener", "type", "EventType", "XBULL_INITIAL_RESPONSE", "XBULL_CONNECT_RESPONSE", "XBULL_SIGN_RESPONSE", "XBULL_SIGN_MESSAGE_RESPONSE", "window", "addEventListener", "asObservable", "take", "removeEventListener", "openWallet", "close", "encodeURIComponent", "firstValueFrom", "closeWallet", "canRequestPublicKey", "canRequestSign", "extensionSdk", "webkit", "messageHandlers", "cordova_iab", "xBullSDK", "response", "getAddress", "isResponseError", "error", "address", "stringify", "XBULL_CONNECT", "postMessage", "result", "switchMap", "of", "throwError", "signTransaction", "opts", "networkPassphrase", "network", "signedTxXdr", "XBULL_SIGN", "signMessage", "encrypted", "XBULL_SIGN_MESSAGE", "signedMessage", "signerAddress", "closeConnections", "complete", "e", "e", "e", "e"]
}
