{"version":3,"file":"klever.module.mjs","sources":["../../src/modules/klever.module.ts"],"sourcesContent":["import { KitActions, ModuleInterface, ModuleType } from '../types';\nimport { parseError } from '../utils';\n\ndeclare const window: Window & {\n    kleverWallet?: {\n        stellar?: KitActions;\n    };\n};\n\nexport const KLEVER_ID = 'klever';\n\nexport class KleverModule implements ModuleInterface {\n  moduleType: ModuleType = ModuleType.HOT_WALLET;\n\n  productId: string = KLEVER_ID;\n  productName: string = 'Klever Wallet';\n  productUrl: string = 'https://klever.io/';\n  productIcon: string = 'https://stellar.creit.tech/wallet-icons/klever.png';\n\n  async runChecks(): Promise<void> {\n    if (!(await this.isAvailable())) {\n      throw new Error('Klever Wallet is not installed');\n    }\n  }\n\n  isAvailable(): Promise<boolean> {\n    return new Promise(resolve => resolve(typeof window !== \"undefined\" && !!window.kleverWallet?.stellar));\n  }\n\n  async getAddress(): Promise<{ address: string }> {\n    return this.runChecks()\n      .then(() => window.kleverWallet!.stellar!.getAddress())\n      .catch(e => { throw parseError(e); });\n  }\n\n  async signTransaction(\n    xdr: string,\n    opts?: {\n      networkPassphrase?: string;\n      address?: string;\n      path?: string;\n      submit?: boolean;\n      submitUrl?: string;\n    }\n  ): Promise<{ signedTxXdr: string; signerAddress?: string }> {\n    return this.runChecks()\n      .then(() => window.kleverWallet!.stellar!.signTransaction(xdr, opts))\n      .catch(e => { throw parseError(e); });\n  }\n\n  async signAuthEntry(\n    authEntry: string,\n    opts?: {\n      networkPassphrase?: string;\n      address?: string;\n      path?: string;\n    }\n  ): Promise<{ signedAuthEntry: string; signerAddress?: string }> {\n    return this.runChecks()\n      .then(() => window.kleverWallet!.stellar!.signAuthEntry(authEntry, opts))\n      .catch(e => { throw parseError(e); });\n  }\n\n  async signMessage(\n    message: string,\n    opts?: {\n      address?: string;\n    }\n  ): Promise<{ signedMessage: string; signerAddress?: string }> {\n    return this.runChecks()\n      .then(() => window.kleverWallet!.stellar!.signMessage(message, opts))\n      .catch(e => { throw parseError(e); });\n  }\n\n  async getNetwork(): Promise<{ network: string; networkPassphrase: string }> {\n    return this.runChecks()\n      .then(() => window.kleverWallet!.stellar!.getNetwork())\n      .catch(e => { throw parseError(e); });\n  }\n}\n"],"names":[],"mappings":";;;AASO,MAAM,SAAY,GAAA;AAElB,MAAM,YAAwC,CAAA;AAAA,EAA9C,WAAA,GAAA;AACL,IAAA,IAAA,CAAA,UAAA,GAAyB,UAAW,CAAA,UAAA;AAEpC,IAAoB,IAAA,CAAA,SAAA,GAAA,SAAA;AACpB,IAAsB,IAAA,CAAA,WAAA,GAAA,eAAA;AACtB,IAAqB,IAAA,CAAA,UAAA,GAAA,oBAAA;AACrB,IAAsB,IAAA,CAAA,WAAA,GAAA,oDAAA;AAAA;AAAA,EAEtB,MAAM,SAA2B,GAAA;AAC/B,IAAA,IAAI,CAAE,MAAM,IAAK,CAAA,WAAA,EAAgB,EAAA;AAC/B,MAAM,MAAA,IAAI,MAAM,gCAAgC,CAAA;AAAA;AAClD;AACF,EAEA,WAAgC,GAAA;AAC9B,IAAA,OAAO,IAAI,OAAA,CAAQ,CAAW,OAAA,KAAA,OAAA,CAAQ,OAAO,MAAA,KAAW,WAAe,IAAA,CAAC,CAAC,MAAA,CAAO,YAAc,EAAA,OAAO,CAAC,CAAA;AAAA;AACxG,EAEA,MAAM,UAA2C,GAAA;AAC/C,IAAA,OAAO,IAAK,CAAA,SAAA,EACT,CAAA,IAAA,CAAK,MAAM,MAAA,CAAO,YAAc,CAAA,OAAA,CAAS,UAAW,EAAC,CACrD,CAAA,KAAA,CAAM,CAAK,CAAA,KAAA;AAAE,MAAA,MAAM,WAAW,CAAC,CAAA;AAAA,KAAI,CAAA;AAAA;AACxC,EAEA,MAAM,eACJ,CAAA,GAAA,EACA,IAO0D,EAAA;AAC1D,IAAA,OAAO,IAAK,CAAA,SAAA,EACT,CAAA,IAAA,CAAK,MAAM,MAAO,CAAA,YAAA,CAAc,OAAS,CAAA,eAAA,CAAgB,GAAK,EAAA,IAAI,CAAC,CAAA,CACnE,MAAM,CAAK,CAAA,KAAA;AAAE,MAAA,MAAM,WAAW,CAAC,CAAA;AAAA,KAAI,CAAA;AAAA;AACxC,EAEA,MAAM,aACJ,CAAA,SAAA,EACA,IAK8D,EAAA;AAC9D,IAAA,OAAO,IAAK,CAAA,SAAA,EACT,CAAA,IAAA,CAAK,MAAM,MAAO,CAAA,YAAA,CAAc,OAAS,CAAA,aAAA,CAAc,SAAW,EAAA,IAAI,CAAC,CAAA,CACvE,MAAM,CAAK,CAAA,KAAA;AAAE,MAAA,MAAM,WAAW,CAAC,CAAA;AAAA,KAAI,CAAA;AAAA;AACxC,EAEA,MAAM,WACJ,CAAA,OAAA,EACA,IAG4D,EAAA;AAC5D,IAAA,OAAO,IAAK,CAAA,SAAA,EACT,CAAA,IAAA,CAAK,MAAM,MAAO,CAAA,YAAA,CAAc,OAAS,CAAA,WAAA,CAAY,OAAS,EAAA,IAAI,CAAC,CAAA,CACnE,MAAM,CAAK,CAAA,KAAA;AAAE,MAAA,MAAM,WAAW,CAAC,CAAA;AAAA,KAAI,CAAA;AAAA;AACxC,EAEA,MAAM,UAAsE,GAAA;AAC1E,IAAA,OAAO,IAAK,CAAA,SAAA,EACT,CAAA,IAAA,CAAK,MAAM,MAAA,CAAO,YAAc,CAAA,OAAA,CAAS,UAAW,EAAC,CACrD,CAAA,KAAA,CAAM,CAAK,CAAA,KAAA;AAAE,MAAA,MAAM,WAAW,CAAC,CAAA;AAAA,KAAI,CAAA;AAAA;AAE1C;;;;"}