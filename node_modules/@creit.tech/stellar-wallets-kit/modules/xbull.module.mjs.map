{"version":3,"file":"xbull.module.mjs","sources":["../../src/modules/xbull.module.ts"],"sourcesContent":["import { xBullWalletConnect } from '@creit.tech/xbull-wallet-connect';\nimport { ModuleInterface, ModuleType } from '../types';\nimport { parseError } from '../utils';\n\nexport const XBULL_ID = 'xbull';\n\nexport class xBullModule implements ModuleInterface {\n  moduleType: ModuleType = ModuleType.HOT_WALLET;\n\n  productId: string = XBULL_ID;\n  productName: string = 'xBull';\n  productUrl: string = 'https://xbull.app';\n  productIcon: string = 'https://stellar.creit.tech/wallet-icons/xbull.png';\n\n  async isAvailable(): Promise<boolean> {\n    return true;\n  }\n\n  async getAddress(): Promise<{ address: string }> {\n    try {\n      const bridge: xBullWalletConnect = new xBullWalletConnect();\n      const publicKey: string = await bridge.connect();\n      bridge.closeConnections();\n      return { address: publicKey };\n    } catch (e: any) {\n      throw parseError(e);\n    }\n  }\n\n  async signTransaction(\n    xdr: string,\n    opts?: {\n      networkPassphrase?: string;\n      address?: string;\n      path?: string;\n      submit?: boolean;\n      submitUrl?: string;\n    }\n  ): Promise<{ signedTxXdr: string; signerAddress?: string }> {\n    try {\n      const bridge: xBullWalletConnect = new xBullWalletConnect();\n\n      const signedXdr: string = await bridge.sign({\n        xdr,\n        publicKey: opts?.address,\n        network: opts?.networkPassphrase,\n      });\n\n      bridge.closeConnections();\n      return { signedTxXdr: signedXdr, signerAddress: opts?.address };\n    } catch (e: any) {\n      throw parseError(e);\n    }\n  }\n\n  async signAuthEntry(): Promise<{ signedAuthEntry: string; signerAddress?: string }> {\n    throw {\n      code: -3,\n      message: 'xBull does not support the \"signAuthEntry\" function',\n    };\n  }\n\n  async signMessage(\n    message: string,\n    opts?: {\n      networkPassphrase?: string;\n      address?: string;\n      path?: string;\n    }\n  ): Promise<{ signedMessage: string; signerAddress?: string }> {\n    try {\n      const bridge: xBullWalletConnect = new xBullWalletConnect();\n\n      const result = await bridge.signMessage(message, {\n        address: opts?.address,\n        networkPassphrase: opts?.networkPassphrase,\n      });\n\n      bridge.closeConnections();\n      return result;\n    } catch (e: any) {\n      throw parseError(e);\n    }\n  }\n\n  async getNetwork(): Promise<{ network: string; networkPassphrase: string }> {\n    throw {\n      code: -3,\n      message: 'xBull does not support the \"getNetwork\" function',\n    };\n  }\n}\n"],"names":[],"mappings":";;;;AAIO,MAAM,QAAW,GAAA;AAEjB,MAAM,WAAuC,CAAA;AAAA,EAA7C,WAAA,GAAA;AACL,IAAA,IAAA,CAAA,UAAA,GAAyB,UAAW,CAAA,UAAA;AAEpC,IAAoB,IAAA,CAAA,SAAA,GAAA,QAAA;AACpB,IAAsB,IAAA,CAAA,WAAA,GAAA,OAAA;AACtB,IAAqB,IAAA,CAAA,UAAA,GAAA,mBAAA;AACrB,IAAsB,IAAA,CAAA,WAAA,GAAA,mDAAA;AAAA;AAAA,EAEtB,MAAM,WAAgC,GAAA;AACpC,IAAO,OAAA,IAAA;AAAA;AACT,EAEA,MAAM,UAA2C,GAAA;AAC/C,IAAI,IAAA;AACF,MAAM,MAAA,MAAA,GAA6B,IAAI,kBAAmB,EAAA;AAC1D,MAAM,MAAA,SAAA,GAAoB,MAAM,MAAA,CAAO,OAAQ,EAAA;AAC/C,MAAA,MAAA,CAAO,gBAAiB,EAAA;AACxB,MAAO,OAAA,EAAE,SAAS,SAAU,EAAA;AAAA,aACrB,CAAQ,EAAA;AACf,MAAA,MAAM,WAAW,CAAC,CAAA;AAAA;AACpB;AACF,EAEA,MAAM,eACJ,CAAA,GAAA,EACA,IAO0D,EAAA;AAC1D,IAAI,IAAA;AACF,MAAM,MAAA,MAAA,GAA6B,IAAI,kBAAmB,EAAA;AAE1D,MAAM,MAAA,SAAA,GAAoB,MAAM,MAAA,CAAO,IAAK,CAAA;AAAA,QAC1C,GAAA;AAAA,QACA,WAAW,IAAM,EAAA,OAAA;AAAA,QACjB,SAAS,IAAM,EAAA;AAAA,OAChB,CAAA;AAED,MAAA,MAAA,CAAO,gBAAiB,EAAA;AACxB,MAAA,OAAO,EAAE,WAAA,EAAa,SAAW,EAAA,aAAA,EAAe,MAAM,OAAQ,EAAA;AAAA,aACvD,CAAQ,EAAA;AACf,MAAA,MAAM,WAAW,CAAC,CAAA;AAAA;AACpB;AACF,EAEA,MAAM,aAA8E,GAAA;AAClF,IAAM,MAAA;AAAA,MACJ,IAAM,EAAA,CAAA,CAAA;AAAA,MACN,OAAS,EAAA;AAAA,KACX;AAAA;AACF,EAEA,MAAM,WACJ,CAAA,OAAA,EACA,IAK4D,EAAA;AAC5D,IAAI,IAAA;AACF,MAAM,MAAA,MAAA,GAA6B,IAAI,kBAAmB,EAAA;AAE1D,MAAA,MAAM,MAAS,GAAA,MAAM,MAAO,CAAA,WAAA,CAAY,OAAS,EAAA;AAAA,QAC/C,SAAS,IAAM,EAAA,OAAA;AAAA,QACf,mBAAmB,IAAM,EAAA;AAAA,OAC1B,CAAA;AAED,MAAA,MAAA,CAAO,gBAAiB,EAAA;AACxB,MAAO,OAAA,MAAA;AAAA,aACA,CAAQ,EAAA;AACf,MAAA,MAAM,WAAW,CAAC,CAAA;AAAA;AACpB;AACF,EAEA,MAAM,UAAsE,GAAA;AAC1E,IAAM,MAAA;AAAA,MACJ,IAAM,EAAA,CAAA,CAAA;AAAA,MACN,OAAS,EAAA;AAAA,KACX;AAAA;AAEJ;;;;"}