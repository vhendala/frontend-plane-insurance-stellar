{"version":3,"file":"reactive-state.mjs","sources":["../../src/state/reactive-state.ts"],"sourcesContent":["import { ReactiveController, ReactiveControllerHost } from 'lit';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\n\nexport class ReactiveState<T> implements ReactiveController {\n  sub: Subscription | null = null;\n  value$: BehaviorSubject<T | undefined> = new BehaviorSubject<T | undefined>(undefined);\n\n  constructor(private host: ReactiveControllerHost, private source: Observable<T>, public value?: T) {\n    this.host.addController(this);\n  }\n\n  hostConnected() {\n    this.sub = this.source.subscribe(value => {\n      this.value = value;\n      this.value$.next(value);\n      this.host.requestUpdate();\n    });\n  }\n\n  hostDisconnected() {\n    this.sub?.unsubscribe();\n  }\n}\n"],"names":[],"mappings":";;AAGO,MAAM,aAA+C,CAAA;AAAA,EAI1D,WAAA,CAAoB,IAAsC,EAAA,MAAA,EAA8B,KAAW,EAAA;AAA/E,IAAA,IAAA,CAAA,IAAA,GAAA,IAAA;AAAsC,IAAA,IAAA,CAAA,MAAA,GAAA,MAAA;AAA8B,IAAA,IAAA,CAAA,KAAA,GAAA,KAAA;AAHxF,IAA2B,IAAA,CAAA,GAAA,GAAA,IAAA;AAC3B,IAAyC,IAAA,CAAA,MAAA,GAAA,IAAI,gBAA+B,KAAS,CAAA,CAAA;AAGnF,IAAK,IAAA,CAAA,IAAA,CAAK,cAAc,IAAI,CAAA;AAAA;AAC9B,EAEA,aAAgB,GAAA;AACd,IAAA,IAAA,CAAK,GAAM,GAAA,IAAA,CAAK,MAAO,CAAA,SAAA,CAAU,CAAS,KAAA,KAAA;AACxC,MAAA,IAAA,CAAK,KAAQ,GAAA,KAAA;AACb,MAAK,IAAA,CAAA,MAAA,CAAO,KAAK,KAAK,CAAA;AACtB,MAAA,IAAA,CAAK,KAAK,aAAc,EAAA;AAAA,KACzB,CAAA;AAAA;AACH,EAEA,gBAAmB,GAAA;AACjB,IAAA,IAAA,CAAK,KAAK,WAAY,EAAA;AAAA;AAE1B;;;;"}